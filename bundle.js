!function(t){var n=window.webpackHotUpdate;window.webpackHotUpdate=function(t,e){!function(t,n){if(!m[t]||!_[t])return;for(var e in _[t]=!1,n)Object.prototype.hasOwnProperty.call(n,e)&&(p[e]=n[e]);0==--g&&0===y&&A()}(t,e),n&&n(t,e)};var e,r=!0,i="19bf1c41a07537e151c6",o=1e4,u={},a=[],c=[];function f(t){var n=E[t];if(!n)return T;var r=function(r){return n.hot.active?(E[r]?-1===E[r].parents.indexOf(t)&&E[r].parents.push(t):(a=[t],e=r),-1===n.children.indexOf(r)&&n.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+t),a=[]),T(r)},i=function(t){return{configurable:!0,enumerable:!0,get:function(){return T[t]},set:function(n){T[t]=n}}};for(var o in T)Object.prototype.hasOwnProperty.call(T,o)&&"e"!==o&&"t"!==o&&Object.defineProperty(r,o,i(o));return r.e=function(t){return"ready"===l&&h("prepare"),y++,T.e(t).then(n,function(t){throw n(),t});function n(){y--,"prepare"===l&&(b[t]||M(t),0===y&&0===g&&A())}},r.t=function(t,n){return 1&n&&(t=r(t)),T.t(t,-2&n)},r}var s=[],l="idle";function h(t){l=t;for(var n=0;n<s.length;n++)s[n].call(null,t)}var d,p,v,g=0,y=0,b={},_={},m={};function x(t){return+t+""===t?+t:t}function w(t){if("idle"!==l)throw new Error("check() is only allowed in idle status");return r=t,h("check"),function(t){return t=t||1e4,new Promise(function(n,e){if("undefined"==typeof XMLHttpRequest)return e(new Error("No browser support"));try{var r=new XMLHttpRequest,o=T.p+""+i+".hot-update.json";r.open("GET",o,!0),r.timeout=t,r.send(null)}catch(t){return e(t)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)e(new Error("Manifest request to "+o+" timed out."));else if(404===r.status)n();else if(200!==r.status&&304!==r.status)e(new Error("Manifest request to "+o+" failed."));else{try{var t=JSON.parse(r.responseText)}catch(t){return void e(t)}n(t)}}})}(o).then(function(t){if(!t)return h("idle"),null;_={},b={},m=t.c,v=t.h,h("prepare");var n=new Promise(function(t,n){d={resolve:t,reject:n}});p={};return M(0),"prepare"===l&&0===y&&0===g&&A(),n})}function M(t){m[t]?(_[t]=!0,g++,function(t){var n=document.getElementsByTagName("head")[0],e=document.createElement("script");e.charset="utf-8",e.src=T.p+""+t+"."+i+".hot-update.js",n.appendChild(e)}(t)):b[t]=!0}function A(){h("ready");var t=d;if(d=null,t)if(r)Promise.resolve().then(function(){return S(r)}).then(function(n){t.resolve(n)},function(n){t.reject(n)});else{var n=[];for(var e in p)Object.prototype.hasOwnProperty.call(p,e)&&n.push(x(e));t.resolve(n)}}function S(n){if("ready"!==l)throw new Error("apply() is only allowed in ready status");var e,r,o,c,f;function s(t){for(var n=[t],e={},r=n.slice().map(function(t){return{chain:[t],id:t}});r.length>0;){var i=r.pop(),o=i.id,u=i.chain;if((c=E[o])&&!c.hot._selfAccepted){if(c.hot._selfDeclined)return{type:"self-declined",chain:u,moduleId:o};if(c.hot._main)return{type:"unaccepted",chain:u,moduleId:o};for(var a=0;a<c.parents.length;a++){var f=c.parents[a],s=E[f];if(s){if(s.hot._declinedDependencies[o])return{type:"declined",chain:u.concat([f]),moduleId:o,parentId:f};-1===n.indexOf(f)&&(s.hot._acceptedDependencies[o]?(e[f]||(e[f]=[]),d(e[f],[o])):(delete e[f],n.push(f),r.push({chain:u.concat([f]),id:f})))}}}}return{type:"accepted",moduleId:t,outdatedModules:n,outdatedDependencies:e}}function d(t,n){for(var e=0;e<n.length;e++){var r=n[e];-1===t.indexOf(r)&&t.push(r)}}n=n||{};var g={},y=[],b={},_=function(){console.warn("[HMR] unexpected require("+M.moduleId+") to disposed module")};for(var w in p)if(Object.prototype.hasOwnProperty.call(p,w)){var M;f=x(w);var A=!1,S=!1,N=!1,k="";switch((M=p[w]?s(f):{type:"disposed",moduleId:w}).chain&&(k="\nUpdate propagation: "+M.chain.join(" -> ")),M.type){case"self-declined":n.onDeclined&&n.onDeclined(M),n.ignoreDeclined||(A=new Error("Aborted because of self decline: "+M.moduleId+k));break;case"declined":n.onDeclined&&n.onDeclined(M),n.ignoreDeclined||(A=new Error("Aborted because of declined dependency: "+M.moduleId+" in "+M.parentId+k));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(M),n.ignoreUnaccepted||(A=new Error("Aborted because "+f+" is not accepted"+k));break;case"accepted":n.onAccepted&&n.onAccepted(M),S=!0;break;case"disposed":n.onDisposed&&n.onDisposed(M),N=!0;break;default:throw new Error("Unexception type "+M.type)}if(A)return h("abort"),Promise.reject(A);if(S)for(f in b[f]=p[f],d(y,M.outdatedModules),M.outdatedDependencies)Object.prototype.hasOwnProperty.call(M.outdatedDependencies,f)&&(g[f]||(g[f]=[]),d(g[f],M.outdatedDependencies[f]));N&&(d(y,[M.moduleId]),b[f]=_)}var C,P=[];for(r=0;r<y.length;r++)f=y[r],E[f]&&E[f].hot._selfAccepted&&P.push({module:f,errorHandler:E[f].hot._selfAccepted});h("dispose"),Object.keys(m).forEach(function(t){!1===m[t]&&function(t){delete installedChunks[t]}(t)});for(var z,R,O=y.slice();O.length>0;)if(f=O.pop(),c=E[f]){var D={},U=c.hot._disposeHandlers;for(o=0;o<U.length;o++)(e=U[o])(D);for(u[f]=D,c.hot.active=!1,delete E[f],delete g[f],o=0;o<c.children.length;o++){var L=E[c.children[o]];L&&((C=L.parents.indexOf(f))>=0&&L.parents.splice(C,1))}}for(f in g)if(Object.prototype.hasOwnProperty.call(g,f)&&(c=E[f]))for(R=g[f],o=0;o<R.length;o++)z=R[o],(C=c.children.indexOf(z))>=0&&c.children.splice(C,1);for(f in h("apply"),i=v,b)Object.prototype.hasOwnProperty.call(b,f)&&(t[f]=b[f]);var q=null;for(f in g)if(Object.prototype.hasOwnProperty.call(g,f)&&(c=E[f])){R=g[f];var I=[];for(r=0;r<R.length;r++)if(z=R[r],e=c.hot._acceptedDependencies[z]){if(-1!==I.indexOf(e))continue;I.push(e)}for(r=0;r<I.length;r++){e=I[r];try{e(R)}catch(t){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:f,dependencyId:R[r],error:t}),n.ignoreErrored||q||(q=t)}}}for(r=0;r<P.length;r++){var j=P[r];f=j.module,a=[f];try{T(f)}catch(t){if("function"==typeof j.errorHandler)try{j.errorHandler(t)}catch(e){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:f,error:e,originalError:t}),n.ignoreErrored||q||(q=e),q||(q=t)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:f,error:t}),n.ignoreErrored||q||(q=t)}}return q?(h("fail"),Promise.reject(q)):(h("idle"),new Promise(function(t){t(y)}))}var E={};function T(n){if(E[n])return E[n].exports;var r=E[n]={i:n,l:!1,exports:{},hot:function(t){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:e!==t,active:!0,accept:function(t,e){if(void 0===t)n._selfAccepted=!0;else if("function"==typeof t)n._selfAccepted=t;else if("object"==typeof t)for(var r=0;r<t.length;r++)n._acceptedDependencies[t[r]]=e||function(){};else n._acceptedDependencies[t]=e||function(){}},decline:function(t){if(void 0===t)n._selfDeclined=!0;else if("object"==typeof t)for(var e=0;e<t.length;e++)n._declinedDependencies[t[e]]=!0;else n._declinedDependencies[t]=!0},dispose:function(t){n._disposeHandlers.push(t)},addDisposeHandler:function(t){n._disposeHandlers.push(t)},removeDisposeHandler:function(t){var e=n._disposeHandlers.indexOf(t);e>=0&&n._disposeHandlers.splice(e,1)},check:w,apply:S,status:function(t){if(!t)return l;s.push(t)},addStatusHandler:function(t){s.push(t)},removeStatusHandler:function(t){var n=s.indexOf(t);n>=0&&s.splice(n,1)},data:u[t]};return e=void 0,n}(n),parents:(c=a,a=[],c),children:[]};return t[n].call(r.exports,r,r.exports,f(n)),r.l=!0,r.exports}T.m=t,T.c=E,T.d=function(t,n,e){T.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},T.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},T.t=function(t,n){if(1&n&&(t=T(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(T.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)T.d(e,r,function(n){return t[n]}.bind(null,r));return e},T.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return T.d(n,"a",n),n},T.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},T.p="/",T.h=function(){return i},f(2)(T.s=2)}([function(t,n,e){(t.exports=e(5)(!1)).push([t.i,":root{\n  --circle-color: #89D2FF;\n  --triangle-color: #FF8989;\n  --title-color: #AEAEAE;\n  --border-color: #E4E4E4;\n}\n\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n}\n\n.container {\n  max-width: 1240px;\n  margin: auto;\n}\n\n.graph-container {\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n}\n\n.graph {\n  border-bottom: 2px solid var(--border-color);\n  padding-bottom: .5em;\n  flex: 0 1 25%;\n\n}\n\n.graph > .graph-box {\n  margin: auto;\n  text-align: center;\n  padding: 1em 2em 0;\n}\n\n.graph-info {\n  display: flex;\n  justify-content: space-between;\n  flex: 1 1 100%;\n}\n\n.graph-device {\n  flex: 1 1 50%;\n}\n.graph-device.tablet {\n  text-align: left;\n}\n.graph-device.smartphone {\n  text-align: right;\n}\n\n.value-int {\n  color: var(--title-color);\n}\n\n.title  {\n  font-size: 20px;\n  color: var(--title-color);\n}\n\n.total-value {\n  font-size: 26px;\n}\n.info-title {\n  font-weight: 600;\n  display: block;\n}",""])},function(t,n,e){"use strict";e.r(n);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){return 1===t.length&&(t=function(t){return function(n,e){return r(t(n),e)}}(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}};var o=i(r),u=o.right,a=o.left,c=u,f=function(t,n){null==n&&(n=s);for(var e=0,r=t.length-1,i=t[0],o=new Array(r<0?0:r);e<r;)o[e]=n(i,i=t[++e]);return o};function s(t,n){return[t,n]}var l=function(t,n,e){var r,i,o,u,a=t.length,c=n.length,f=new Array(a*c);for(null==e&&(e=s),r=o=0;r<a;++r)for(u=t[r],i=0;i<c;++i,++o)f[o]=e(u,n[i]);return f},h=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},d=function(t){return null===t?NaN:+t},p=function(t,n){var e,r,i=t.length,o=0,u=-1,a=0,c=0;if(null==n)for(;++u<i;)isNaN(e=d(t[u]))||(c+=(r=e-a)*(e-(a+=r/++o)));else for(;++u<i;)isNaN(e=d(n(t[u],u,t)))||(c+=(r=e-a)*(e-(a+=r/++o)));if(o>1)return c/(o-1)},v=function(t,n){var e=p(t,n);return e?Math.sqrt(e):e},g=function(t,n){var e,r,i,o=t.length,u=-1;if(null==n){for(;++u<o;)if(null!=(e=t[u])&&e>=e)for(r=i=e;++u<o;)null!=(e=t[u])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++u<o;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=i=e;++u<o;)null!=(e=n(t[u],u,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},y=Array.prototype,b=y.slice,_=y.map,m=function(t){return function(){return t}},x=function(t){return t},w=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o},M=Math.sqrt(50),A=Math.sqrt(10),S=Math.sqrt(2),E=function(t,n,e){var r,i,o,u,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(u=T(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++a<i;)o[a]=(t+a)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++a<i;)o[a]=(t-a)/u;return r&&o.reverse(),o};function T(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=M?10:o>=A?5:o>=S?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=M?10:o>=A?5:o>=S?2:1)}function N(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=M?i*=10:o>=A?i*=5:o>=S&&(i*=2),n<t?-i:i}var k=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},C=function(){var t=x,n=g,e=k;function r(r){var i,o,u=r.length,a=new Array(u);for(i=0;i<u;++i)a[i]=t(r[i],i,r);var f=n(a),s=f[0],l=f[1],h=e(a,s,l);Array.isArray(h)||(h=N(s,l,h),h=w(Math.ceil(s/h)*h,Math.floor(l/h)*h,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(i=0;i<=d;++i)(p=v[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<u;++i)s<=(o=a[i])&&o<=l&&v[c(h,o,0,d)].push(r[i]);return v}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:m(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:m([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?m(b.call(t)):m(t),r):e},r},P=function(t,n,e){if(null==e&&(e=d),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),u=+e(t[o],o,t);return u+(+e(t[o+1],o+1,t)-u)*(i-o)}},z=function(t,n,e){return t=_.call(t,d).sort(r),Math.ceil((e-n)/(2*(P(t,.75)-P(t,.25))*Math.pow(t.length,-1/3)))},R=function(t,n,e){return Math.ceil((e-n)/(3.5*v(t)*Math.pow(t.length,-1/3)))},O=function(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&e>r&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&e>r&&(r=e);return r},D=function(t,n){var e,r=t.length,i=r,o=-1,u=0;if(null==n)for(;++o<r;)isNaN(e=d(t[o]))?--i:u+=e;else for(;++o<r;)isNaN(e=d(n(t[o],o,t)))?--i:u+=e;if(i)return u/i},U=function(t,n){var e,i=t.length,o=-1,u=[];if(null==n)for(;++o<i;)isNaN(e=d(t[o]))||u.push(e);else for(;++o<i;)isNaN(e=d(n(t[o],o,t)))||u.push(e);return P(u.sort(r),.5)},L=function(t){for(var n,e,r,i=t.length,o=-1,u=0;++o<i;)u+=t[o].length;for(e=new Array(u);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--u]=r[n];return e},q=function(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&r>e&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&r>e&&(r=e);return r},I=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},j=function(t,n){if(e=t.length){var e,i,o=0,u=0,a=t[u];for(null==n&&(n=r);++o<e;)(n(i=t[o],a)<0||0!==n(a,a))&&(a=i,u=o);return 0===n(a,a)?u:void 0}},B=function(t,n,e){for(var r,i,o=(null==e?t.length:e)-(n=null==n?0:+n);o;)i=Math.random()*o--|0,r=t[o+n],t[o+n]=t[i+n],t[i+n]=r;return t},F=function(t,n){var e,r=t.length,i=-1,o=0;if(null==n)for(;++i<r;)(e=+t[i])&&(o+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(o+=e);return o},Y=function(t){if(!(i=t.length))return[];for(var n=-1,e=q(t,H),r=new Array(e);++n<e;)for(var i,o=-1,u=r[n]=new Array(i);++o<i;)u[o]=t[o][n];return r};function H(t){return t.length}var X=function(){return Y(arguments)},$=Array.prototype.slice,G=function(t){return t},V=1,W=2,Z=3,J=4,Q=1e-6;function K(t){return"translate("+(t+.5)+",0)"}function tt(t){return"translate(0,"+(t+.5)+")"}function nt(){return!this.__axis}function et(t,n){var e=[],r=null,i=null,o=6,u=6,a=3,c=t===V||t===J?-1:1,f=t===J||t===W?"x":"y",s=t===V||t===Z?K:tt;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):G:i,p=Math.max(o,0)+a,v=n.range(),g=+v[0]+.5,y=+v[v.length-1]+.5,b=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),_=l.selection?l.selection():l,m=_.selectAll(".domain").data([null]),x=_.selectAll(".tick").data(h,n).order(),w=x.exit(),M=x.enter().append("g").attr("class","tick"),A=x.select("line"),S=x.select("text");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),x=x.merge(M),A=A.merge(M.append("line").attr("stroke","#000").attr(f+"2",c*o)),S=S.merge(M.append("text").attr("fill","#000").attr(f,c*p).attr("dy",t===V?"0em":t===Z?"0.71em":"0.32em")),l!==_&&(m=m.transition(l),x=x.transition(l),A=A.transition(l),S=S.transition(l),w=w.transition(l).attr("opacity",Q).attr("transform",function(t){return isFinite(t=b(t))?s(t):this.getAttribute("transform")}),M.attr("opacity",Q).attr("transform",function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:b(t))})),w.remove(),m.attr("d",t===J||t==W?"M"+c*u+","+g+"H0.5V"+y+"H"+c*u:"M"+g+","+c*u+"V0.5H"+y+"V"+c*u),x.attr("opacity",1).attr("transform",function(t){return s(b(t))}),A.attr(f+"2",c*o),S.attr(f,c*p).text(d),_.filter(nt).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===W?"start":t===J?"end":"middle"),_.each(function(){this.__axis=b})}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=$.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:$.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:$.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(o=u=+t,l):o},l.tickSizeInner=function(t){return arguments.length?(o=+t,l):o},l.tickSizeOuter=function(t){return arguments.length?(u=+t,l):u},l.tickPadding=function(t){return arguments.length?(a=+t,l):a},l}function rt(t){return et(V,t)}function it(t){return et(W,t)}function ot(t){return et(Z,t)}function ut(t){return et(J,t)}var at={value:function(){}};function ct(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new ft(r)}function ft(t){this._=t}function st(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function lt(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=at,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}ft.prototype=ct.prototype={constructor:ft,on:function(t,n){var e,r=this._,i=function(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}(t+"",r),o=-1,u=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<u;)if(e=(t=i[o]).type)r[e]=lt(r[e],t.name,n);else if(null==n)for(e in r)r[e]=lt(r[e],t.name,null);return this}for(;++o<u;)if((e=(t=i[o]).type)&&(e=st(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new ft(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var ht=ct,dt="http://www.w3.org/1999/xhtml",pt={svg:"http://www.w3.org/2000/svg",xhtml:dt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},vt=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),pt.hasOwnProperty(n)?{space:pt[n],local:t}:t};var gt=function(t){var n=vt(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===dt&&n.documentElement.namespaceURI===dt?n.createElement(t):n.createElementNS(e,t)}})(n)};function yt(){}var bt=function(t){return null==t?yt:function(){return this.querySelector(t)}};function _t(){return[]}var mt=function(t){return null==t?_t:function(){return this.querySelectorAll(t)}},xt=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var wt=document.documentElement;if(!wt.matches){var Mt=wt.webkitMatchesSelector||wt.msMatchesSelector||wt.mozMatchesSelector||wt.oMatchesSelector;xt=function(t){return function(){return Mt.call(this,t)}}}}var At=xt,St=function(t){return new Array(t.length)};function Et(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}Et.prototype={constructor:Et,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var Tt="$";function Nt(t,n,e,r,i,o){for(var u,a=0,c=n.length,f=o.length;a<f;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new Et(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function kt(t,n,e,r,i,o,u){var a,c,f,s={},l=n.length,h=o.length,d=new Array(l);for(a=0;a<l;++a)(c=n[a])&&(d[a]=f=Tt+u.call(c,c.__data__,a,n),f in s?i[a]=c:s[f]=c);for(a=0;a<h;++a)(c=s[f=Tt+u.call(t,o[a],a,o)])?(r[a]=c,c.__data__=o[a],s[f]=null):e[a]=new Et(t,o[a]);for(a=0;a<l;++a)(c=n[a])&&s[d[a]]===c&&(i[a]=c)}function Ct(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var Pt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function zt(t,n){return t.style.getPropertyValue(n)||Pt(t).getComputedStyle(t,null).getPropertyValue(n)}function Rt(t){return t.trim().split(/^|\s+/)}function Ot(t){return t.classList||new Dt(t)}function Dt(t){this._node=t,this._names=Rt(t.getAttribute("class")||"")}function Ut(t,n){for(var e=Ot(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function Lt(t,n){for(var e=Ot(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}Dt.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function qt(){this.textContent=""}function It(){this.innerHTML=""}function jt(){this.nextSibling&&this.parentNode.appendChild(this)}function Bt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Ft(){return null}function Yt(){var t=this.parentNode;t&&t.removeChild(this)}function Ht(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function Xt(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var $t={},Gt=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||($t={mouseenter:"mouseover",mouseleave:"mouseout"}));function Vt(t,n,e){return t=Wt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Wt(t,n,e){return function(r){var i=Gt;Gt=r;try{t.call(this,this.__data__,n,e)}finally{Gt=i}}}function Zt(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Jt(t,n,e){var r=$t.hasOwnProperty(t.type)?Vt:Wt;return function(i,o,u){var a,c=this.__on,f=r(n,o,u);if(c)for(var s=0,l=c.length;s<l;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=f,a.capture=e),void(a.value=n);this.addEventListener(t.type,f,e),a={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(a):this.__on=[a]}}function Qt(t,n,e,r){var i=Gt;t.sourceEvent=Gt,Gt=t;try{return n.apply(e,r)}finally{Gt=i}}function Kt(t,n,e){var r=Pt(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var tn=[null];function nn(t,n){this._groups=t,this._parents=n}function en(){return new nn([[document.documentElement]],tn)}nn.prototype=en.prototype={constructor:nn,select:function(t){"function"!=typeof t&&(t=bt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],c=a.length,f=r[i]=new Array(c),s=0;s<c;++s)(o=a[s])&&(u=t.call(o,o.__data__,s,a))&&("__data__"in o&&(u.__data__=o.__data__),f[s]=u);return new nn(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=mt(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,f=0;f<c;++f)(u=a[f])&&(r.push(t.call(u,u.__data__,f,a)),i.push(u));return new nn(r,i)},filter:function(t){"function"!=typeof t&&(t=At(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],f=0;f<a;++f)(o=u[f])&&t.call(o,o.__data__,f,u)&&c.push(o);return new nn(r,this._parents)},data:function(t,n){if(!t)return d=new Array(this.size()),f=-1,this.each(function(t){d[++f]=t}),d;var e=n?kt:Nt,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var o=i.length,u=new Array(o),a=new Array(o),c=new Array(o),f=0;f<o;++f){var s=r[f],l=i[f],h=l.length,d=t.call(s,s&&s.__data__,f,r),p=d.length,v=a[f]=new Array(p),g=u[f]=new Array(p);e(s,l,v,g,c[f]=new Array(h),d,n);for(var y,b,_=0,m=0;_<p;++_)if(y=v[_]){for(_>=m&&(m=_+1);!(b=g[m])&&++m<p;);y._next=b||null}}return(u=new nn(u,r))._enter=a,u._exit=c,u},enter:function(){return new nn(this._enter||this._groups.map(St),this._parents)},exit:function(){return new nn(this._exit||this._groups.map(St),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,f=n[a],s=e[a],l=f.length,h=u[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)u[a]=n[a];return new nn(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=Ct);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,f=i[o]=new Array(c),s=0;s<c;++s)(u=a[s])&&(f[s]=u);f.sort(n)}return new nn(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=vt(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):zt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=Rt(t+"");if(arguments.length<2){for(var r=Ot(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?Ut:Lt)(this,t)}}:n?function(t){return function(){Ut(this,t)}}:function(t){return function(){Lt(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?qt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?It:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(jt)},lower:function(){return this.each(Bt)},append:function(t){var n="function"==typeof t?t:gt(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:gt(t),r=null==n?Ft:"function"==typeof n?n:bt(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(Yt)},clone:function(t){return this.select(t?Xt:Ht)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?Jt:Zt,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,f=0,s=a.length;f<s;++f)for(r=0,c=a[f];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Kt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Kt(this,t,n)}})(t,n))}};var rn=en,on=function(t){return"string"==typeof t?new nn([[document.querySelector(t)]],[document.documentElement]):new nn([[t]],tn)},un=function(t){return on(gt(t).call(document.documentElement))},an=0;function cn(){return new fn}function fn(){this._="@"+(++an).toString(36)}fn.prototype=cn.prototype={constructor:fn,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var sn=function(){for(var t,n=Gt;t=n.sourceEvent;)n=t;return n},ln=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},hn=function(t){var n=sn();return n.changedTouches&&(n=n.changedTouches[0]),ln(t,n)},dn=function(t){return"string"==typeof t?new nn([document.querySelectorAll(t)],[document.documentElement]):new nn([null==t?[]:t],tn)},pn=function(t,n,e){arguments.length<3&&(e=n,n=sn().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return ln(t,r);return null},vn=function(t,n){null==n&&(n=sn().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=ln(t,n[e]);return i};function gn(){Gt.stopImmediatePropagation()}var yn=function(){Gt.preventDefault(),Gt.stopImmediatePropagation()},bn=function(t){var n=t.document.documentElement,e=on(t).on("dragstart.drag",yn,!0);"onselectstart"in n?e.on("selectstart.drag",yn,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")};function _n(t,n){var e=t.document.documentElement,r=on(t).on("dragstart.drag",null);n&&(r.on("click.drag",yn,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var mn=function(t){return function(){return t}};function xn(t,n,e,r,i,o,u,a,c,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=o,this.y=u,this.dx=a,this.dy=c,this._=f}function wn(){return!Gt.button}function Mn(){return this.parentNode}function An(t){return null==t?{x:Gt.x,y:Gt.y}:t}function Sn(){return"ontouchstart"in this}xn.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var En=function(){var t,n,e,r,i=wn,o=Mn,u=An,a=Sn,c={},f=ht("start","drag","end"),s=0,l=0;function h(t){t.on("mousedown.drag",d).filter(a).on("touchstart.drag",g).on("touchmove.drag",y).on("touchend.drag touchcancel.drag",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function d(){if(!r&&i.apply(this,arguments)){var u=_("mouse",o.apply(this,arguments),hn,this,arguments);u&&(on(Gt.view).on("mousemove.drag",p,!0).on("mouseup.drag",v,!0),bn(Gt.view),gn(),e=!1,t=Gt.clientX,n=Gt.clientY,u("start"))}}function p(){if(yn(),!e){var r=Gt.clientX-t,i=Gt.clientY-n;e=r*r+i*i>l}c.mouse("drag")}function v(){on(Gt.view).on("mousemove.drag mouseup.drag",null),_n(Gt.view,e),yn(),c.mouse("end")}function g(){if(i.apply(this,arguments)){var t,n,e=Gt.changedTouches,r=o.apply(this,arguments),u=e.length;for(t=0;t<u;++t)(n=_(e[t].identifier,r,pn,this,arguments))&&(gn(),n("start"))}}function y(){var t,n,e=Gt.changedTouches,r=e.length;for(t=0;t<r;++t)(n=c[e[t].identifier])&&(yn(),n("drag"))}function b(){var t,n,e=Gt.changedTouches,i=e.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),t=0;t<i;++t)(n=c[e[t].identifier])&&(gn(),n("end"))}function _(t,n,e,r,i){var o,a,l,d=e(n,t),p=f.copy();if(Qt(new xn(h,"beforestart",o,t,s,d[0],d[1],0,0,p),function(){return null!=(Gt.subject=o=u.apply(r,i))&&(a=o.x-d[0]||0,l=o.y-d[1]||0,!0)}))return function u(f){var v,g=d;switch(f){case"start":c[t]=u,v=s++;break;case"end":delete c[t],--s;case"drag":d=e(n,t),v=s}Qt(new xn(h,f,o,t,v,d[0]+a,d[1]+l,d[0]-g[0],d[1]-g[1],p),p.apply,p,[f,r,i])}}return h.filter=function(t){return arguments.length?(i="function"==typeof t?t:mn(!!t),h):i},h.container=function(t){return arguments.length?(o="function"==typeof t?t:mn(t),h):o},h.subject=function(t){return arguments.length?(u="function"==typeof t?t:mn(t),h):u},h.touchable=function(t){return arguments.length?(a="function"==typeof t?t:mn(!!t),h):a},h.on=function(){var t=f.on.apply(f,arguments);return t===f?h:t},h.clickDistance=function(t){return arguments.length?(l=(t=+t)*t,h):Math.sqrt(l)},h},Tn=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function Nn(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function kn(){}var Cn="\\s*([+-]?\\d+)\\s*",Pn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",zn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Rn=/^#([0-9a-f]{3})$/,On=/^#([0-9a-f]{6})$/,Dn=new RegExp("^rgb\\("+[Cn,Cn,Cn]+"\\)$"),Un=new RegExp("^rgb\\("+[zn,zn,zn]+"\\)$"),Ln=new RegExp("^rgba\\("+[Cn,Cn,Cn,Pn]+"\\)$"),qn=new RegExp("^rgba\\("+[zn,zn,zn,Pn]+"\\)$"),In=new RegExp("^hsl\\("+[Pn,zn,zn]+"\\)$"),jn=new RegExp("^hsla\\("+[Pn,zn,zn,Pn]+"\\)$"),Bn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Fn(t){var n;return t=(t+"").trim().toLowerCase(),(n=Rn.exec(t))?new Gn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=On.exec(t))?Yn(parseInt(n[1],16)):(n=Dn.exec(t))?new Gn(n[1],n[2],n[3],1):(n=Un.exec(t))?new Gn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Ln.exec(t))?Hn(n[1],n[2],n[3],n[4]):(n=qn.exec(t))?Hn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=In.exec(t))?Wn(n[1],n[2]/100,n[3]/100,1):(n=jn.exec(t))?Wn(n[1],n[2]/100,n[3]/100,n[4]):Bn.hasOwnProperty(t)?Yn(Bn[t]):"transparent"===t?new Gn(NaN,NaN,NaN,0):null}function Yn(t){return new Gn(t>>16&255,t>>8&255,255&t,1)}function Hn(t,n,e,r){return r<=0&&(t=n=e=NaN),new Gn(t,n,e,r)}function Xn(t){return t instanceof kn||(t=Fn(t)),t?new Gn((t=t.rgb()).r,t.g,t.b,t.opacity):new Gn}function $n(t,n,e,r){return 1===arguments.length?Xn(t):new Gn(t,n,e,null==r?1:r)}function Gn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function Vn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Wn(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Jn(t,n,e,r)}function Zn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Jn)return new Jn(t.h,t.s,t.l,t.opacity);if(t instanceof kn||(t=Fn(t)),!t)return new Jn;if(t instanceof Jn)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new Jn(u,a,c,t.opacity)}(t):new Jn(t,n,e,null==r?1:r)}function Jn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Qn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Tn(kn,Fn,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Tn(Gn,$n,Nn(kn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Gn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Gn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+Vn(this.r)+Vn(this.g)+Vn(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Tn(Jn,Zn,Nn(kn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Jn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Jn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Gn(Qn(t>=240?t-240:t+120,i,r),Qn(t,i,r),Qn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Kn=Math.PI/180,te=180/Math.PI,ne=.96422,ee=1,re=.82521,ie=4/29,oe=6/29,ue=3*oe*oe,ae=oe*oe*oe;function ce(t){if(t instanceof le)return new le(t.l,t.a,t.b,t.opacity);if(t instanceof _e){if(isNaN(t.h))return new le(t.l,0,0,t.opacity);var n=t.h*Kn;return new le(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof Gn||(t=Xn(t));var e,r,i=ve(t.r),o=ve(t.g),u=ve(t.b),a=he((.2225045*i+.7168786*o+.0606169*u)/ee);return i===o&&o===u?e=r=a:(e=he((.4360747*i+.3850649*o+.1430804*u)/ne),r=he((.0139322*i+.0971045*o+.7141733*u)/re)),new le(116*a-16,500*(e-a),200*(a-r),t.opacity)}function fe(t,n){return new le(t,0,0,null==n?1:n)}function se(t,n,e,r){return 1===arguments.length?ce(t):new le(t,n,e,null==r?1:r)}function le(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function he(t){return t>ae?Math.pow(t,1/3):t/ue+ie}function de(t){return t>oe?t*t*t:ue*(t-ie)}function pe(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function ve(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function ge(t){if(t instanceof _e)return new _e(t.h,t.c,t.l,t.opacity);if(t instanceof le||(t=ce(t)),0===t.a&&0===t.b)return new _e(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*te;return new _e(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function ye(t,n,e,r){return 1===arguments.length?ge(t):new _e(e,n,t,null==r?1:r)}function be(t,n,e,r){return 1===arguments.length?ge(t):new _e(t,n,e,null==r?1:r)}function _e(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}Tn(le,se,Nn(kn,{brighter:function(t){return new le(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new le(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new Gn(pe(3.1338561*(n=ne*de(n))-1.6168667*(t=ee*de(t))-.4906146*(e=re*de(e))),pe(-.9787684*n+1.9161415*t+.033454*e),pe(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Tn(_e,be,Nn(kn,{brighter:function(t){return new _e(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new _e(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return ce(this).rgb()}}));var me=-.29227,xe=-.90649,we=1.97294,Me=we*xe,Ae=1.78277*we,Se=1.78277*me- -.14861*xe;function Ee(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Te)return new Te(t.h,t.s,t.l,t.opacity);t instanceof Gn||(t=Xn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Se*r+Me*n-Ae*e)/(Se+Me-Ae),o=r-i,u=(we*(e-i)-me*o)/xe,a=Math.sqrt(u*u+o*o)/(we*i*(1-i)),c=a?Math.atan2(u,o)*te-120:NaN;return new Te(c<0?c+360:c,a,i,t.opacity)}(t):new Te(t,n,e,null==r?1:r)}function Te(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Ne(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}Tn(Te,Ee,Nn(kn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Te(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Te(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*Kn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new Gn(255*(n+e*(-.14861*r+1.78277*i)),255*(n+e*(me*r+xe*i)),255*(n+e*(we*r)),this.opacity)}}));var ke=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return Ne((e-r/n)*n,u,i,o,a)}},Ce=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return Ne((e-r/n)*n,i,o,u,a)}},Pe=function(t){return function(){return t}};function ze(t,n){return function(e){return t+e*n}}function Re(t,n){var e=n-t;return e?ze(t,e>180||e<-180?e-360*Math.round(e/360):e):Pe(isNaN(t)?n:t)}function Oe(t){return 1==(t=+t)?De:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Pe(isNaN(n)?e:n)}}function De(t,n){var e=n-t;return e?ze(t,e):Pe(isNaN(t)?n:t)}var Ue=function t(n){var e=Oe(n);function r(t,n){var r=e((t=$n(t)).r,(n=$n(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),u=De(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}return r.gamma=t,r}(1);function Le(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=$n(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}var qe=Le(ke),Ie=Le(Ce),je=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=Je(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}},Be=function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}},Fe=function(t,n){return n-=t=+t,function(e){return t+n*e}},Ye=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Je(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},He=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Xe=new RegExp(He.source,"g");var $e,Ge,Ve,We,Ze=function(t,n){var e,r,i,o=He.lastIndex=Xe.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=He.exec(t))&&(r=Xe.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:Fe(e,r)})),o=Xe.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},Je=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Pe(n):("number"===r?Fe:"string"===r?(e=Fn(n))?(n=e,Ue):Ze:n instanceof Fn?Ue:n instanceof Date?Be:Array.isArray(n)?je:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?Ye:Fe)(t,n)},Qe=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},Ke=180/Math.PI,tr={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},nr=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*Ke,skewX:Math.atan(c)*Ke,scaleX:u,scaleY:a}};function er(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,u){var a=[],c=[];return o=t(o),u=t(u),function(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:Fe(t,i)},{i:c-2,x:Fe(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}(o.translateX,o.translateY,u.translateX,u.translateY,a,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Fe(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,u.rotate,a,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Fe(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,u.skewX,a,c),function(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:Fe(t,e)},{i:a-2,x:Fe(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,u.scaleX,u.scaleY,a,c),o=u=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var rr=er(function(t){return"none"===t?tr:($e||($e=document.createElement("DIV"),Ge=document.documentElement,Ve=document.defaultView),$e.style.transform=t,t=Ve.getComputedStyle(Ge.appendChild($e),null).getPropertyValue("transform"),Ge.removeChild($e),t=t.slice(7,-1).split(","),nr(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),ir=er(function(t){return null==t?tr:(We||(We=document.createElementNS("http://www.w3.org/2000/svg","g")),We.setAttribute("transform",t),(t=We.transform.baseVal.consolidate())?(t=t.matrix,nr(t.a,t.b,t.c,t.d,t.e,t.f)):tr)},", ",")",")"),or=Math.SQRT2;function ur(t){return((t=Math.exp(t))+1/t)/2}var ar=function(t,n){var e,r,i=t[0],o=t[1],u=t[2],a=n[0],c=n[1],f=n[2],s=a-i,l=c-o,h=s*s+l*l;if(h<1e-12)r=Math.log(f/u)/or,e=function(t){return[i+t*s,o+t*l,u*Math.exp(or*t*r)]};else{var d=Math.sqrt(h),p=(f*f-u*u+4*h)/(2*u*2*d),v=(f*f-u*u-4*h)/(2*f*2*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/or,e=function(t){var n=t*r,e=ur(g),a=u/(2*d)*(e*function(t){return((t=Math.exp(2*t))-1)/(t+1)}(or*n+g)-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[i+a*s,o+a*l,u*e/ur(or*n+g)]}}return e.duration=1e3*r,e};function cr(t){return function(n,e){var r=t((n=Zn(n)).h,(e=Zn(e)).h),i=De(n.s,e.s),o=De(n.l,e.l),u=De(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=u(t),n+""}}}var fr=cr(Re),sr=cr(De);function lr(t,n){var e=De((t=se(t)).l,(n=se(n)).l),r=De(t.a,n.a),i=De(t.b,n.b),o=De(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}}function hr(t){return function(n,e){var r=t((n=be(n)).h,(e=be(e)).h),i=De(n.c,e.c),o=De(n.l,e.l),u=De(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=u(t),n+""}}}var dr=hr(Re),pr=hr(De);function vr(t){return function n(e){function r(n,r){var i=t((n=Ee(n)).h,(r=Ee(r)).h),o=De(n.s,r.s),u=De(n.l,r.l),a=De(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}var gr=vr(Re),yr=vr(De);function br(t,n){for(var e=0,r=n.length-1,i=n[0],o=new Array(r<0?0:r);e<r;)o[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return o[n](t-n)}}var _r,mr,xr=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},wr=0,Mr=0,Ar=0,Sr=1e3,Er=0,Tr=0,Nr=0,kr="object"==typeof performance&&performance.now?performance:Date,Cr="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Pr(){return Tr||(Cr(zr),Tr=kr.now()+Nr)}function zr(){Tr=0}function Rr(){this._call=this._time=this._next=null}function Or(t,n,e){var r=new Rr;return r.restart(t,n,e),r}function Dr(){Pr(),++wr;for(var t,n=_r;n;)(t=Tr-n._time)>=0&&n._call.call(null,t),n=n._next;--wr}function Ur(){Tr=(Er=kr.now())+Nr,wr=Mr=0;try{Dr()}finally{wr=0,function(){var t,n,e=_r,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:_r=n);mr=t,qr(r)}(),Tr=0}}function Lr(){var t=kr.now(),n=t-Er;n>Sr&&(Nr-=n,Er=t)}function qr(t){wr||(Mr&&(Mr=clearTimeout(Mr)),t-Tr>24?(t<1/0&&(Mr=setTimeout(Ur,t-kr.now()-Nr)),Ar&&(Ar=clearInterval(Ar))):(Ar||(Er=kr.now(),Ar=setInterval(Lr,Sr)),wr=1,Cr(Ur)))}Rr.prototype=Or.prototype={constructor:Rr,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Pr():+e)+(null==n?0:+n),this._next||mr===this||(mr?mr._next=this:_r=this,mr=this),this._call=t,this._time=e,qr()},stop:function(){this._call&&(this._call=null,this._time=1/0,qr())}};var Ir=function(t,n,e){var r=new Rr;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},jr=function(t,n,e){var r=new Rr,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?Pr():+e,r.restart(function o(u){u+=i,r.restart(o,i+=n,e),t(u)},n,e),r)},Br=ht("start","end","interrupt"),Fr=[],Yr=0,Hr=1,Xr=2,$r=3,Gr=4,Vr=5,Wr=6,Zr=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var f,s,l,h;if(e.state!==Hr)return a();for(f in i)if((h=i[f]).name===e.name){if(h.state===$r)return Ir(o);h.state===Gr?(h.state=Wr,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=Wr,h.timer.stop(),delete i[f])}if(Ir(function(){e.state===$r&&(e.state=Gr,e.timer.restart(u,e.delay,e.time),u(c))}),e.state=Xr,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Xr){for(e.state=$r,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=Vr,1),o=-1,u=r.length;++o<u;)r[o].call(null,i);e.state===Vr&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=Wr,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Or(function(t){e.state=Hr,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:Br,tween:Fr,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:Yr})};function Jr(t,n){var e=Kr(t,n);if(e.state>Yr)throw new Error("too late; already scheduled");return e}function Qr(t,n){var e=Kr(t,n);if(e.state>Xr)throw new Error("too late; already started");return e}function Kr(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var ti=function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>Xr&&e.state<Vr,e.state=Wr,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}};function ni(t,n,e){var r=t._id;return t.each(function(){var t=Qr(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return Kr(t,r).value[n]}}var ei=function(t,n){var e;return("number"==typeof n?Fe:n instanceof Fn?Ue:(e=Fn(n))?(n=e,Ue):Ze)(t,n)};var ri=rn.prototype.constructor;var ii=0;function oi(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function ui(t){return rn().transition(t)}function ai(){return++ii}var ci=rn.prototype;function fi(t){return+t}function si(t){return t*t}function li(t){return t*(2-t)}function hi(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function di(t){return t*t*t}function pi(t){return--t*t*t+1}function vi(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}oi.prototype=ui.prototype={constructor:oi,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=bt(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,c,f=r[u],s=f.length,l=o[u]=new Array(s),h=0;h<s;++h)(a=f[h])&&(c=t.call(a,a.__data__,h,f))&&("__data__"in a&&(c.__data__=a.__data__),l[h]=c,Zr(l[h],n,e,h,l,Kr(a,e)));return new oi(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=mt(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var c,f=r[a],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=Kr(c,e),v=0,g=d.length;v<g;++v)(h=d[v])&&Zr(h,n,e,v,d,p);o.push(d),u.push(c)}return new oi(o,u,n,e)},filter:function(t){"function"!=typeof t&&(t=At(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],f=0;f<a;++f)(o=u[f])&&t.call(o,o.__data__,f,u)&&c.push(o);return new oi(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,f=n[a],s=e[a],l=f.length,h=u[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)u[a]=n[a];return new oi(u,this._parents,this._name,this._id)},selection:function(){return new ri(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=ai(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,f=0;f<c;++f)if(u=a[f]){var s=Kr(u,n);Zr(u,t,e,f,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new oi(r,this._parents,t,e)},call:ci.call,nodes:ci.nodes,node:ci.node,size:ci.size,empty:ci.empty,each:ci.each,on:function(t,n){var e=this._id;return arguments.length<2?Kr(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?Jr:Qr;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}(e,t,n))},attr:function(t,n){var e=vt(t),r="transform"===e?ir:ei;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttributeNS(t.space,t.local))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttribute(t))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttribute(t)}})(e,r,ni(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(e,r,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=vt(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?rr:ei;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=zt(this,t),u=(this.style.removeProperty(t),zt(this,t));return o===u?null:o===e&&u===r?i:i=n(e=o,r=u)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,o;return function(){var u=zt(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=zt(this,t)),u===a?null:u===r&&a===i?o:o=n(r=u,i=a)}}(t,r,ni(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var o=zt(this,t);return o===e?null:o===r?i:i=n(r=o,e)}}(t,r,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(ni(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=Kr(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=Qr(this,t),o=i.tween;if(o!==e)for(var u=0,a=(r=e=o).length;u<a;++u)if(r[u].name===n){(r=r.slice()).splice(u,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=Qr(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=a;break}c===f&&i.push(a)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Jr(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Jr(this,t).delay=n}})(n,t)):Kr(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Qr(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Qr(this,t).duration=n}})(n,t)):Kr(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){Qr(this,t).ease=n}}(n,t)):Kr(this.node(),n).ease}};var gi=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),yi=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),bi=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),_i=Math.PI,mi=_i/2;function xi(t){return 1-Math.cos(t*mi)}function wi(t){return Math.sin(t*mi)}function Mi(t){return(1-Math.cos(_i*t))/2}function Ai(t){return Math.pow(2,10*t-10)}function Si(t){return 1-Math.pow(2,-10*t)}function Ei(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function Ti(t){return 1-Math.sqrt(1-t*t)}function Ni(t){return Math.sqrt(1- --t*t)}function ki(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var Ci=4/11,Pi=6/11,zi=8/11,Ri=.75,Oi=9/11,Di=10/11,Ui=.9375,Li=21/22,qi=63/64,Ii=1/Ci/Ci;function ji(t){return 1-Bi(1-t)}function Bi(t){return(t=+t)<Ci?Ii*t*t:t<zi?Ii*(t-=Pi)*t+Ri:t<Di?Ii*(t-=Oi)*t+Ui:Ii*(t-=Li)*t+qi}function Fi(t){return((t*=2)<=1?1-Bi(1-t):Bi(t-1)+1)/2}var Yi=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),Hi=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Xi=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),$i=2*Math.PI,Gi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=$i);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*$i)},i.period=function(e){return t(n,e)},i}(1,.3),Vi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=$i);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*$i)},i.period=function(e){return t(n,e)},i}(1,.3),Wi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=$i);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*$i)},i.period=function(e){return t(n,e)},i}(1,.3),Zi={time:null,delay:0,duration:250,ease:vi};function Ji(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Zi.time=Pr(),Zi;return e}rn.prototype.interrupt=function(t){return this.each(function(){ti(this,t)})},rn.prototype.transition=function(t){var n,e;t instanceof oi?(n=t._id,t=t._name):(n=ai(),(e=Zi).time=Pr(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,f=0;f<c;++f)(u=a[f])&&Zr(u,t,n,f,a,e||Ji(u,n));return new oi(r,this._parents,t,n)};var Qi=[null],Ki=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>Hr&&e.name===n)return new oi([[t]],Qi,n,+r);return null},to=function(t){return function(){return t}},no=function(t,n,e){this.target=t,this.type=n,this.selection=e};function eo(){Gt.stopImmediatePropagation()}var ro=function(){Gt.preventDefault(),Gt.stopImmediatePropagation()},io={name:"drag"},oo={name:"space"},uo={name:"handle"},ao={name:"center"},co={name:"x",handles:["e","w"].map(yo),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},fo={name:"y",handles:["n","s"].map(yo),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},so={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(yo),input:function(t){return t},output:function(t){return t}},lo={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},ho={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},po={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},vo={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},go={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function yo(t){return{type:t}}function bo(){return!Gt.button}function _o(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function mo(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function xo(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function wo(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function Mo(){return Eo(co)}function Ao(){return Eo(fo)}var So=function(){return Eo(so)};function Eo(t){var n,e=_o,r=bo,i=ht(u,"start","brush","end"),o=6;function u(n){var e=n.property("__brush",l).selectAll(".overlay").data([yo("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",lo.overlay).merge(e).each(function(){var t=mo(this).extent;on(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),n.selectAll(".selection").data([yo("selection")]).enter().append("rect").attr("class","selection").attr("cursor",lo.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=n.selectAll(".handle").data(t.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return lo[t.type]}),n.each(a).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",s)}function a(){var t=on(this),n=mo(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-o/2:n[0][0]-o/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-o/2:n[0][1]-o/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+o:o}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+o:o})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function c(t,n){return t.__brush.emitter||new f(t,n)}function f(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function s(){if(Gt.touches){if(Gt.changedTouches.length<Gt.touches.length)return ro()}else if(n)return;if(r.apply(this,arguments)){var e,i,o,u,f,s,l,h,d,p,v,g,y,b=this,_=Gt.target.__data__.type,m="selection"===(Gt.metaKey?_="overlay":_)?io:Gt.altKey?ao:uo,x=t===fo?null:vo[_],w=t===co?null:go[_],M=mo(b),A=M.extent,S=M.selection,E=A[0][0],T=A[0][1],N=A[1][0],k=A[1][1],C=x&&w&&Gt.shiftKey,P=hn(b),z=P,R=c(b,arguments).beforestart();"overlay"===_?M.selection=S=[[e=t===fo?E:P[0],o=t===co?T:P[1]],[f=t===fo?N:e,l=t===co?k:o]]:(e=S[0][0],o=S[0][1],f=S[1][0],l=S[1][1]),i=e,u=o,s=f,h=l;var O=on(b).attr("pointer-events","none"),D=O.selectAll(".overlay").attr("cursor",lo[_]);if(Gt.touches)O.on("touchmove.brush",L,!0).on("touchend.brush touchcancel.brush",I,!0);else{var U=on(Gt.view).on("keydown.brush",function(){switch(Gt.keyCode){case 16:C=x&&w;break;case 18:m===uo&&(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,o=u+p*w),m=ao,q());break;case 32:m!==uo&&m!==ao||(x<0?f=s-d:x>0&&(e=i-d),w<0?l=h-p:w>0&&(o=u-p),m=oo,D.attr("cursor",lo.selection),q());break;default:return}ro()},!0).on("keyup.brush",function(){switch(Gt.keyCode){case 16:C&&(g=y=C=!1,q());break;case 18:m===ao&&(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(o=u),m=uo,q());break;case 32:m===oo&&(Gt.altKey?(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,o=u+p*w),m=ao):(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(o=u),m=uo),D.attr("cursor",lo[_]),q());break;default:return}ro()},!0).on("mousemove.brush",L,!0).on("mouseup.brush",I,!0);bn(Gt.view)}eo(),ti(b),a.call(b),R.start()}function L(){var t=hn(b);!C||g||y||(Math.abs(t[0]-z[0])>Math.abs(t[1]-z[1])?y=!0:g=!0),z=t,v=!0,ro(),q()}function q(){var t;switch(d=z[0]-P[0],p=z[1]-P[1],m){case oo:case io:x&&(d=Math.max(E-e,Math.min(N-f,d)),i=e+d,s=f+d),w&&(p=Math.max(T-o,Math.min(k-l,p)),u=o+p,h=l+p);break;case uo:x<0?(d=Math.max(E-e,Math.min(N-e,d)),i=e+d,s=f):x>0&&(d=Math.max(E-f,Math.min(N-f,d)),i=e,s=f+d),w<0?(p=Math.max(T-o,Math.min(k-o,p)),u=o+p,h=l):w>0&&(p=Math.max(T-l,Math.min(k-l,p)),u=o,h=l+p);break;case ao:x&&(i=Math.max(E,Math.min(N,e-d*x)),s=Math.max(E,Math.min(N,f+d*x))),w&&(u=Math.max(T,Math.min(k,o-p*w)),h=Math.max(T,Math.min(k,l+p*w)))}s<i&&(x*=-1,t=e,e=f,f=t,t=i,i=s,s=t,_ in ho&&D.attr("cursor",lo[_=ho[_]])),h<u&&(w*=-1,t=o,o=l,l=t,t=u,u=h,h=t,_ in po&&D.attr("cursor",lo[_=po[_]])),M.selection&&(S=M.selection),g&&(i=S[0][0],s=S[1][0]),y&&(u=S[0][1],h=S[1][1]),S[0][0]===i&&S[0][1]===u&&S[1][0]===s&&S[1][1]===h||(M.selection=[[i,u],[s,h]],a.call(b),R.brush())}function I(){if(eo(),Gt.touches){if(Gt.touches.length)return;n&&clearTimeout(n),n=setTimeout(function(){n=null},500),O.on("touchmove.brush touchend.brush touchcancel.brush",null)}else _n(Gt.view,v),U.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);O.attr("pointer-events","all"),D.attr("cursor",lo.overlay),M.selection&&(S=M.selection),xo(S)&&(M.selection=null,a.call(b)),R.end()}}function l(){var n=this.__brush||{selection:null};return n.extent=e.apply(this,arguments),n.dim=t,n}return u.move=function(n,e){n.selection?n.on("start.brush",function(){c(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){c(this,arguments).end()}).tween("brush",function(){var n=this,r=n.__brush,i=c(n,arguments),o=r.selection,u=t.input("function"==typeof e?e.apply(this,arguments):e,r.extent),f=Je(o,u);function s(t){r.selection=1===t&&xo(u)?null:f(t),a.call(n),i.brush()}return o&&u?s:s(1)}):n.each(function(){var n=arguments,r=this.__brush,i=t.input("function"==typeof e?e.apply(this,n):e,r.extent),o=c(this,n).beforestart();ti(this),r.selection=null==i||xo(i)?null:i,a.call(this),o.start().brush().end()})},f.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(n){Qt(new no(u,n,t.output(this.state.selection)),i.apply,i,[n,this.that,this.args])}},u.extent=function(t){return arguments.length?(e="function"==typeof t?t:to([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),u):e},u.filter=function(t){return arguments.length?(r="function"==typeof t?t:to(!!t),u):r},u.handleSize=function(t){return arguments.length?(o=+t,u):o},u.on=function(){var t=i.on.apply(i,arguments);return t===i?u:t},u}var To=Math.cos,No=Math.sin,ko=Math.PI,Co=ko/2,Po=2*ko,zo=Math.max;var Ro=function(){var t=0,n=null,e=null,r=null;function i(i){var o,u,a,c,f,s,l=i.length,h=[],d=w(l),p=[],v=[],g=v.groups=new Array(l),y=new Array(l*l);for(o=0,f=-1;++f<l;){for(u=0,s=-1;++s<l;)u+=i[f][s];h.push(u),p.push(w(l)),o+=u}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),c=(o=zo(0,Po-t*l)/o)?t:Po/l,u=0,f=-1;++f<l;){for(a=u,s=-1;++s<l;){var b=d[f],_=p[b][s],m=i[b][_],x=u,M=u+=m*o;y[_*l+b]={index:b,subindex:_,startAngle:x,endAngle:M,value:m}}g[b]={index:b,startAngle:a,endAngle:u,value:h[b]},u+=c}for(f=-1;++f<l;)for(s=f-1;++s<l;){var A=y[s*l+f],S=y[f*l+s];(A.value||S.value)&&v.push(A.value<S.value?{source:S,target:A}:{source:A,target:S})}return r?v.sort(r):v}return i.padAngle=function(n){return arguments.length?(t=zo(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(r=function(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}(t))._=t,i):r&&r._},i},Oo=Array.prototype.slice,Do=function(t){return function(){return t}},Uo=Math.PI,Lo=2*Uo,qo=Lo-1e-6;function Io(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function jo(){return new Io}Io.prototype=jo.prototype={constructor:Io,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var o=this._x1,u=this._y1,a=e-t,c=r-n,f=o-t,s=u-n,l=f*f+s*s;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(s*a-c*f)>1e-6&&i){var h=e-o,d=r-u,p=a*a+c*c,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(l),b=i*Math.tan((Uo-Math.acos((p+l-v)/(2*g*y)))/2),_=b/y,m=b/g;Math.abs(_-1)>1e-6&&(this._+="L"+(t+_*f)+","+(n+_*s)),this._+="A"+i+","+i+",0,0,"+ +(s*h>f*d)+","+(this._x1=t+m*a)+","+(this._y1=n+m*c)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,o){t=+t,n=+n;var u=(e=+e)*Math.cos(r),a=e*Math.sin(r),c=t+u,f=n+a,s=1^o,l=o?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+c+","+f),e&&(l<0&&(l=l%Lo+Lo),l>qo?this._+="A"+e+","+e+",0,1,"+s+","+(t-u)+","+(n-a)+"A"+e+","+e+",0,1,"+s+","+(this._x1=c)+","+(this._y1=f):l>1e-6&&(this._+="A"+e+","+e+",0,"+ +(l>=Uo)+","+s+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};var Bo=jo;function Fo(t){return t.source}function Yo(t){return t.target}function Ho(t){return t.radius}function Xo(t){return t.startAngle}function $o(t){return t.endAngle}var Go=function(){var t=Fo,n=Yo,e=Ho,r=Xo,i=$o,o=null;function u(){var u,a=Oo.call(arguments),c=t.apply(this,a),f=n.apply(this,a),s=+e.apply(this,(a[0]=c,a)),l=r.apply(this,a)-Co,h=i.apply(this,a)-Co,d=s*To(l),p=s*No(l),v=+e.apply(this,(a[0]=f,a)),g=r.apply(this,a)-Co,y=i.apply(this,a)-Co;if(o||(o=u=Bo()),o.moveTo(d,p),o.arc(0,0,s,l,h),l===g&&h===y||(o.quadraticCurveTo(0,0,v*To(g),v*No(g)),o.arc(0,0,v,g,y)),o.quadraticCurveTo(0,0,d,p),o.closePath(),u)return o=null,u+""||null}return u.radius=function(t){return arguments.length?(e="function"==typeof t?t:Do(+t),u):e},u.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Do(+t),u):r},u.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:Do(+t),u):i},u.source=function(n){return arguments.length?(t=n,u):t},u.target=function(t){return arguments.length?(n=t,u):n},u.context=function(t){return arguments.length?(o=null==t?null:t,u):o},u};function Vo(){}function Wo(t,n){var e=new Vo;if(t instanceof Vo)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}Vo.prototype=Wo.prototype={constructor:Vo,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Zo=Wo,Jo=function(){var t,n,e,r=[],i=[];function o(e,i,u,a){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var c,f,s,l=-1,h=e.length,d=r[i++],p=Zo(),v=u();++l<h;)(s=p.get(c=d(f=e[l])+""))?s.push(f):p.set(c,[f]);return p.each(function(t,n){a(v,n,o(t,i,u,a))}),v}return e={object:function(t){return o(t,0,Qo,Ko)},map:function(t){return o(t,0,tu,nu)},entries:function(t){return function t(e,o){if(++o>r.length)return e;var u,a=i[o-1];return null!=n&&o>=r.length?u=e.entries():(u=[],e.each(function(n,e){u.push({key:e,values:t(n,o)})})),null!=a?u.sort(function(t,n){return a(t.key,n.key)}):u}(o(t,0,tu,nu),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}};function Qo(){return{}}function Ko(t,n,e){t[n]=e}function tu(){return Zo()}function nu(t,n,e){t.set(n,e)}function eu(){}var ru=Zo.prototype;function iu(t,n){var e=new eu;if(t instanceof eu)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}eu.prototype=iu.prototype={constructor:eu,has:ru.has,add:function(t){return this["$"+(t+="")]=t,this},remove:ru.remove,clear:ru.clear,values:ru.keys,size:ru.size,empty:ru.empty,each:ru.each};var ou=iu,uu=function(t){var n=[];for(var e in t)n.push(e);return n},au=function(t){var n=[];for(var e in t)n.push(t[e]);return n},cu=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},fu=Array.prototype.slice,su=function(t,n){return t-n},lu=function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r},hu=function(t){return function(){return t}},du=function(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=pu(t,n[r]))return e;return 0};function pu(t,n){for(var e=n[0],r=n[1],i=-1,o=0,u=t.length,a=u-1;o<u;a=o++){var c=t[o],f=c[0],s=c[1],l=t[a],h=l[0],d=l[1];if(vu(c,l,n))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function vu(t,n,e){var r;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&function(t,n,e){return t<=n&&n<=e||e<=n&&n<=t}(t[r=+(t[0]===n[0])],e[r],n[r])}var gu=function(){},yu=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],bu=function(){var t=1,n=1,e=k,r=a;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(su);else{var r=g(t),i=r[0],u=r[1];n=N(i,u,n),n=w(Math.floor(i/n)*n,Math.floor(u/n)*n,n)}return n.map(function(n){return o(t,n)})}function o(e,i){var o=[],a=[];return function(e,r,i){var o,a,c,f,s,l,h=new Array,d=new Array;o=a=-1,f=e[0]>=r,yu[f<<1].forEach(p);for(;++o<t-1;)c=f,f=e[o+1]>=r,yu[c|f<<1].forEach(p);yu[f<<0].forEach(p);for(;++a<n-1;){for(o=-1,f=e[a*t+t]>=r,s=e[a*t]>=r,yu[f<<1|s<<2].forEach(p);++o<t-1;)c=f,f=e[a*t+t+o+1]>=r,l=s,s=e[a*t+o+1]>=r,yu[c|f<<1|s<<2|l<<3].forEach(p);yu[f|s<<3].forEach(p)}o=-1,s=e[a*t]>=r,yu[s<<2].forEach(p);for(;++o<t-1;)l=s,s=e[a*t+o+1]>=r,yu[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+o,t[0][1]+a],c=[t[1][0]+o,t[1][1]+a],f=u(r),s=u(c);(n=d[f])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(c),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(c),d[n.end=s]=n):(n=h[s])?(e=d[f])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(c),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=f]=n):h[f]=d[s]={start:f,end:s,ring:[r,c]}}yu[s<<3].forEach(p)}(e,i,function(t){r(t,e,i),lu(t)>0?o.push([t]):a.push(t)}),a.forEach(function(t){for(var n,e=0,r=o.length;e<r;++e)if(-1!==du((n=o[e])[0],t))return void n.push(t)}),{type:"MultiPolygon",value:i,coordinates:o}}function u(n){return 2*n[0]+n[1]*(t+1)*4}function a(e,r,i){e.forEach(function(e){var o,u=e[0],a=e[1],c=0|u,f=0|a,s=r[f*t+c];u>0&&u<t&&c===u&&(o=r[f*t+c-1],e[0]=u+(i-o)/(s-o)-.5),a>0&&a<n&&f===a&&(o=r[(f-1)*t+c],e[1]=a+(i-o)/(s-o)-.5)})}return i.contour=o,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),o=Math.ceil(e[1]);if(!(r>0&&o>0))throw new Error("invalid size");return t=r,n=o,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?hu(fu.call(t)):hu(t),i):e},i.smooth=function(t){return arguments.length?(r=t?a:gu,i):r===a},i};function _u(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),u=0;u<i;++u)for(var a=0,c=0;a<r+e;++a)a<r&&(c+=t.data[a+u*r]),a>=e&&(a>=o&&(c-=t.data[a-o+u*r]),n.data[a-e+u*r]=c/Math.min(a+1,r-1+o-a,o))}function mu(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),u=0;u<r;++u)for(var a=0,c=0;a<i+e;++a)a<i&&(c+=t.data[u+a*r]),a>=e&&(a>=o&&(c-=t.data[u+(a-o)*r]),n.data[u+(a-e)*r]=c/Math.min(a+1,i-1+o-a,o))}function xu(t){return t[0]}function wu(t){return t[1]}function Mu(){return 1}var Au=function(){var t=xu,n=wu,e=Mu,r=960,i=500,o=20,u=2,a=3*o,c=r+2*a>>u,f=i+2*a>>u,s=hu(20);function l(r){var i=new Float32Array(c*f),l=new Float32Array(c*f);r.forEach(function(r,o,s){var l=+t(r,o,s)+a>>u,h=+n(r,o,s)+a>>u,d=+e(r,o,s);l>=0&&l<c&&h>=0&&h<f&&(i[l+h*c]+=d)}),_u({width:c,height:f,data:i},{width:c,height:f,data:l},o>>u),mu({width:c,height:f,data:l},{width:c,height:f,data:i},o>>u),_u({width:c,height:f,data:i},{width:c,height:f,data:l},o>>u),mu({width:c,height:f,data:l},{width:c,height:f,data:i},o>>u),_u({width:c,height:f,data:i},{width:c,height:f,data:l},o>>u),mu({width:c,height:f,data:l},{width:c,height:f,data:i},o>>u);var d=s(i);if(!Array.isArray(d)){var p=O(i);d=N(0,p,d),(d=w(0,Math.floor(p/d)*d,d)).shift()}return bu().thresholds(d).size([c,f])(i).map(h)}function h(t){return t.value*=Math.pow(2,-2*u),t.coordinates.forEach(d),t}function d(t){t.forEach(p)}function p(t){t.forEach(v)}function v(t){t[0]=t[0]*Math.pow(2,u)-a,t[1]=t[1]*Math.pow(2,u)-a}function g(){return c=r+2*(a=3*o)>>u,f=i+2*a>>u,l}return l.x=function(n){return arguments.length?(t="function"==typeof n?n:hu(+n),l):t},l.y=function(t){return arguments.length?(n="function"==typeof t?t:hu(+t),l):n},l.weight=function(t){return arguments.length?(e="function"==typeof t?t:hu(+t),l):e},l.size=function(t){if(!arguments.length)return[r,i];var n=Math.ceil(t[0]),e=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error("invalid size");return r=n,i=e,g()},l.cellSize=function(t){if(!arguments.length)return 1<<u;if(!((t=+t)>=1))throw new Error("invalid cell size");return u=Math.floor(Math.log(t)/Math.LN2),g()},l.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?hu(fu.call(t)):hu(t),l):s},l.bandwidth=function(t){if(!arguments.length)return Math.sqrt(o*(o+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return o=Math.round((Math.sqrt(4*t*t+1)-1)/2),g()},l},Su={},Eu={},Tu=34,Nu=10,ku=13;function Cu(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var Pu=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],o=t.length,u=0,a=0,c=o<=0,f=!1;function s(){if(c)return Eu;if(f)return f=!1,Su;var n,r,i=u;if(t.charCodeAt(i)===Tu){for(;u++<o&&t.charCodeAt(u)!==Tu||t.charCodeAt(++u)===Tu;);return(n=u)>=o?c=!0:(r=t.charCodeAt(u++))===Nu?f=!0:r===ku&&(f=!0,t.charCodeAt(u)===Nu&&++u),t.slice(i+1,n-1).replace(/""/g,'"')}for(;u<o;){if((r=t.charCodeAt(n=u++))===Nu)f=!0;else if(r===ku)f=!0,t.charCodeAt(u)===Nu&&++u;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,o)}for(t.charCodeAt(o-1)===Nu&&--o,t.charCodeAt(o-1)===ku&&--o;(r=s())!==Eu;){for(var l=[];r!==Su&&r!==Eu;)l.push(r),r=s();n&&null==(l=n(l,a++))||i.push(l)}return i}function i(n){return n.map(o).join(t)}function o(t){return null==t?"":n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,o=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=Cu(t);return function(r,i){return n(e(r),i,t)}}(t,n):Cu(t)});return o.columns=i||[],o},parseRows:r,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(o).join(t)].concat(n.map(function(n){return e.map(function(t){return o(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(i).join("\n")}}},zu=Pu(","),Ru=zu.parse,Ou=zu.parseRows,Du=zu.format,Uu=zu.formatRows,Lu=Pu("\t"),qu=Lu.parse,Iu=Lu.parseRows,ju=Lu.format,Bu=Lu.formatRows;function Fu(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}var Yu=function(t,n){return fetch(t,n).then(Fu)};function Hu(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}var Xu=function(t,n){return fetch(t,n).then(Hu)};function $u(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var Gu=function(t,n){return fetch(t,n).then($u)};function Vu(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),Gu(n,e).then(function(n){return t(n,r)})}}function Wu(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=Pu(t);return Gu(n,e).then(function(t){return i.parse(t,r)})}var Zu=Vu(Ru),Ju=Vu(qu),Qu=function(t,n){return new Promise(function(e,r){var i=new Image;for(var o in n)i[o]=n[o];i.onerror=r,i.onload=function(){e(i)},i.src=t})};function Ku(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var ta=function(t,n){return fetch(t,n).then(Ku)};function na(t){return function(n,e){return Gu(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var ea=na("application/xml"),ra=na("text/html"),ia=na("image/svg+xml"),oa=function(t,n){var e;function r(){var r,i,o=e.length,u=0,a=0;for(r=0;r<o;++r)u+=(i=e[r]).x,a+=i.y;for(u=u/o-t,a=a/o-n,r=0;r<o;++r)(i=e[r]).x-=u,i.y-=a}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},ua=function(t){return function(){return t}},aa=function(){return 1e-6*(Math.random()-.5)};function ca(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,u,a,c,f,s,l,h,d=t._root,p={data:r},v=t._x0,g=t._y0,y=t._x1,b=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((f=n>=(o=(v+y)/2))?v=o:y=o,(s=e>=(u=(g+b)/2))?g=u:b=u,i=d,!(d=d[l=s<<1|f]))return i[l]=p,t;if(a=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===a&&e===c)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(o=(v+y)/2))?v=o:y=o,(s=e>=(u=(g+b)/2))?g=u:b=u}while((l=s<<1|f)==(h=(c>=u)<<1|a>=o));return i[h]=d,i[l]=p,t}var fa=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i};function sa(t){return t[0]}function la(t){return t[1]}function ha(t,n,e){var r=new da(null==n?sa:n,null==e?la:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function da(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function pa(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var va=ha.prototype=da.prototype;function ga(t){return t.x+t.vx}function ya(t){return t.y+t.vy}va.copy=function(){var t,n,e=new da(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=pa(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=pa(n));return e},va.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return ca(this.cover(n,e),n,e,t)},va.addAll=function(t){var n,e,r,i,o=t.length,u=new Array(o),a=new Array(o),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(u[e]=r,a[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));for(s<c&&(c=this._x0,s=this._x1),l<f&&(f=this._y0,l=this._y1),this.cover(c,f).cover(s,l),e=0;e<o;++e)ca(this,u[e],a[e],t[e]);return this},va.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>o))return this;var u,a,c=i-e,f=this._root;switch(a=(n<(r+o)/2)<<1|t<(e+i)/2){case 0:do{(u=new Array(4))[a]=f,f=u}while(o=r+(c*=2),t>(i=e+c)||n>o);break;case 1:do{(u=new Array(4))[a]=f,f=u}while(o=r+(c*=2),(e=i-c)>t||n>o);break;case 2:do{(u=new Array(4))[a]=f,f=u}while(r=o-(c*=2),t>(i=e+c)||r>n);break;case 3:do{(u=new Array(4))[a]=f,f=u}while(r=o-(c*=2),(e=i-c)>t||r>n)}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},va.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},va.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},va.find=function(t,n,e){var r,i,o,u,a,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new fa(v,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(o=c.y0)>d||(u=c.x1)<s||(a=c.y1)<l))if(v.length){var g=(i+u)/2,y=(o+a)/2;p.push(new fa(v[3],g,y,u,a),new fa(v[2],i,y,g,a),new fa(v[1],g,o,u,y),new fa(v[0],i,o,g,y)),(f=(n>=y)<<1|t>=g)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var b=t-+this._x.call(null,v.data),_=n-+this._y.call(null,v.data),m=b*b+_*_;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=v.data}}return r},va.remove=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(u=+this._y.call(null,t)))return this;var n,e,r,i,o,u,a,c,f,s,l,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((f=o>=(a=(p+g)/2))?p=a:g=a,(s=u>=(c=(v+y)/2))?v=c:y=c,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},va.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},va.root=function(){return this._root},va.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},va.visit=function(t){var n,e,r,i,o,u,a=[],c=this._root;for(c&&a.push(new fa(c,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,u=n.y1)&&c.length){var f=(r+o)/2,s=(i+u)/2;(e=c[3])&&a.push(new fa(e,f,s,o,u)),(e=c[2])&&a.push(new fa(e,r,s,f,u)),(e=c[1])&&a.push(new fa(e,f,i,o,s)),(e=c[0])&&a.push(new fa(e,r,i,f,s))}return this},va.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new fa(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,u=n.x0,a=n.y0,c=n.x1,f=n.y1,s=(u+c)/2,l=(a+f)/2;(o=i[0])&&e.push(new fa(o,u,a,s,l)),(o=i[1])&&e.push(new fa(o,s,a,c,l)),(o=i[2])&&e.push(new fa(o,u,l,s,f)),(o=i[3])&&e.push(new fa(o,s,l,c,f))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},va.x=function(t){return arguments.length?(this._x=t,this):this._x},va.y=function(t){return arguments.length?(this._y=t,this):this._y};var ba=function(t){var n,e,r=1,i=1;function o(){for(var t,o,a,c,f,s,l,h=n.length,d=0;d<i;++d)for(o=ha(n,ga,ya).visitAfter(u),t=0;t<h;++t)a=n[t],s=e[a.index],l=s*s,c=a.x+a.vx,f=a.y+a.vy,o.visit(p);function p(t,n,e,i,o){var u=t.data,h=t.r,d=s+h;if(!u)return n>c+d||i<c-d||e>f+d||o<f-d;if(u.index>a.index){var p=c-u.x-u.vx,v=f-u.y-u.vy,g=p*p+v*v;g<d*d&&(0===p&&(g+=(p=aa())*p),0===v&&(g+=(v=aa())*v),g=(d-(g=Math.sqrt(g)))/g*r,a.vx+=(p*=g)*(d=(h*=h)/(l+h)),a.vy+=(v*=g)*d,u.vx-=p*(d=1-d),u.vy-=v*d)}}}function u(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function a(){if(n){var r,i,o=n.length;for(e=new Array(o),r=0;r<o;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=ua(null==t?1:+t)),o.initialize=function(t){n=t,a()},o.iterations=function(t){return arguments.length?(i=+t,o):i},o.strength=function(t){return arguments.length?(r=+t,o):r},o.radius=function(n){return arguments.length?(t="function"==typeof n?n:ua(+n),a(),o):t},o};function _a(t){return t.index}function ma(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}var xa=function(t){var n,e,r,i,o,u=_a,a=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},c=ua(30),f=1;function s(r){for(var i=0,u=t.length;i<f;++i)for(var a,c,s,l,h,d,p,v=0;v<u;++v)c=(a=t[v]).source,l=(s=a.target).x+s.vx-c.x-c.vx||aa(),h=s.y+s.vy-c.y-c.vy||aa(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*n[v],h*=d,s.vx-=l*(p=o[v]),s.vy-=h*p,c.vx+=l*(p=1-p),c.vy+=h*p}function l(){if(r){var a,c,f=r.length,s=t.length,l=Zo(r,u);for(a=0,i=new Array(f);a<s;++a)(c=t[a]).index=a,"object"!=typeof c.source&&(c.source=ma(l,c.source)),"object"!=typeof c.target&&(c.target=ma(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(a=0,o=new Array(s);a<s;++a)c=t[a],o[a]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+a(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+c(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(u=t,s):u},s.iterations=function(t){return arguments.length?(f=+t,s):f},s.strength=function(t){return arguments.length?(a="function"==typeof t?t:ua(+t),h(),s):a},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:ua(+t),d(),s):c},s};function wa(t){return t.x}function Ma(t){return t.y}var Aa=10,Sa=Math.PI*(3-Math.sqrt(5)),Ea=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),o=0,u=.6,a=Zo(),c=Or(s),f=ht("tick","end");function s(){l(),f.call("tick",n),e<r&&(c.stop(),f.call("end",n))}function l(){var n,r,c=t.length;for(e+=(o-e)*i,a.each(function(t){t(e)}),n=0;n<c;++n)null==(r=t[n]).fx?r.x+=r.vx*=u:(r.x=r.fx,r.vx=0),null==r.fy?r.y+=r.vy*=u:(r.y=r.fy,r.vy=0)}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,isNaN(n.x)||isNaN(n.y)){var i=Aa*Math.sqrt(e),o=e*Sa;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return c.restart(s),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),a.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(o=+t,n):o},velocityDecay:function(t){return arguments.length?(u=1-t,n):1-u},force:function(t,e){return arguments.length>1?(null==e?a.remove(t):a.set(t,d(e)),n):a.get(t)},find:function(n,e,r){var i,o,u,a,c,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(u=(i=n-(a=t[f]).x)*i+(o=e-a.y)*o)<r&&(c=a,r=u);return c},on:function(t,e){return arguments.length>1?(f.on(t,e),n):f.on(t)}}},Ta=function(){var t,n,e,r,i=ua(-30),o=1,u=1/0,a=.81;function c(r){var i,o=t.length,u=ha(t,wa,Ma).visitAfter(s);for(e=r,i=0;i<o;++i)n=t[i],u.visit(l)}function f(){if(t){var n,e,o=t.length;for(r=new Array(o),n=0;n<o;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,o,u,a=0,c=0;if(t.length){for(i=o=u=0;u<4;++u)(n=t[u])&&(e=Math.abs(n.value))&&(a+=n.value,c+=e,i+=e*n.x,o+=e*n.y);t.x=i/c,t.y=o/c}else{(n=t).x=n.data.x,n.y=n.data.y;do{a+=r[n.data.index]}while(n=n.next)}t.value=a}function l(t,i,c,f){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=f-i,d=s*s+l*l;if(h*h/a<d)return d<u&&(0===s&&(d+=(s=aa())*s),0===l&&(d+=(l=aa())*l),d<o&&(d=Math.sqrt(o*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=u)){(t.data!==n||t.next)&&(0===s&&(d+=(s=aa())*s),0===l&&(d+=(l=aa())*l),d<o&&(d=Math.sqrt(o*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return c.initialize=function(n){t=n,f()},c.strength=function(t){return arguments.length?(i="function"==typeof t?t:ua(+t),f(),c):i},c.distanceMin=function(t){return arguments.length?(o=t*t,c):Math.sqrt(o)},c.distanceMax=function(t){return arguments.length?(u=t*t,c):Math.sqrt(u)},c.theta=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c},Na=function(t,n,e){var r,i,o,u=ua(.1);function a(t){for(var u=0,a=r.length;u<a;++u){var c=r[u],f=c.x-n||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(o[u]-l)*i[u]*t/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)o[n]=+t(r[n],n,r),i[n]=isNaN(o[n])?0:+u(r[n],n,r)}}return"function"!=typeof t&&(t=ua(+t)),null==n&&(n=0),null==e&&(e=0),a.initialize=function(t){r=t,c()},a.strength=function(t){return arguments.length?(u="function"==typeof t?t:ua(+t),c(),a):u},a.radius=function(n){return arguments.length?(t="function"==typeof n?n:ua(+n),c(),a):t},a.x=function(t){return arguments.length?(n=+t,a):n},a.y=function(t){return arguments.length?(e=+t,a):e},a},ka=function(t){var n,e,r,i=ua(.1);function o(t){for(var i,o=0,u=n.length;o<u;++o)(i=n[o]).vx+=(r[o]-i.x)*e[o]*t}function u(){if(n){var o,u=n.length;for(e=new Array(u),r=new Array(u),o=0;o<u;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=ua(null==t?0:+t)),o.initialize=function(t){n=t,u()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:ua(+t),u(),o):i},o.x=function(n){return arguments.length?(t="function"==typeof n?n:ua(+n),u(),o):t},o},Ca=function(t){var n,e,r,i=ua(.1);function o(t){for(var i,o=0,u=n.length;o<u;++o)(i=n[o]).vy+=(r[o]-i.y)*e[o]*t}function u(){if(n){var o,u=n.length;for(e=new Array(u),r=new Array(u),o=0;o<u;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=ua(null==t?0:+t)),o.initialize=function(t){n=t,u()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:ua(+t),u(),o):i},o.y=function(n){return arguments.length?(t="function"==typeof n?n:ua(+n),u(),o):t},o},Pa=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},za=function(t){return(t=Pa(Math.abs(t)))?t[1]:NaN},Ra=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Oa(t){return new Da(t)}function Da(t){if(!(n=Ra.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}Oa.prototype=Da.prototype,Da.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Ua,La,qa,Ia,ja=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},Ba=function(t,n){var e=Pa(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Fa={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Ba(100*t,n)},r:Ba,s:function(t,n){var e=Pa(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(Ua=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+Pa(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Ya=function(t){return t},Ha=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],Xa=function(t){var n=t.grouping&&t.thousands?function(t,n){return function(e,r){for(var i=e.length,o=[],u=0,a=t[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(e.substring(i-=a,i+a)),!((c+=a+1)>r));)a=t[u=(u+1)%t.length];return o.reverse().join(n)}}(t.grouping,t.thousands):Ya,e=t.currency,r=t.decimal,i=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):Ya,o=t.percent||"%";function u(t){var u=(t=Oa(t)).fill,a=t.align,c=t.sign,f=t.symbol,s=t.zero,l=t.width,h=t.comma,d=t.precision,p=t.trim,v=t.type;"n"===v?(h=!0,v="g"):Fa[v]||(null==d&&(d=12),p=!0,v="g"),(s||"0"===u&&"="===a)&&(s=!0,u="0",a="=");var g="$"===f?e[0]:"#"===f&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",y="$"===f?e[1]:/[%p]/.test(v)?o:"",b=Fa[v],_=/[defgprs%]/.test(v);function m(t){var e,o,f,m=g,x=y;if("c"===v)x=b(t)+x,t="";else{var w=(t=+t)<0;if(t=b(Math.abs(t),d),p&&(t=ja(t)),w&&0==+t&&(w=!1),m=(w?"("===c?c:"-":"-"===c||"("===c?"":c)+m,x=("s"===v?Ha[8+Ua/3]:"")+x+(w&&"("===c?")":""),_)for(e=-1,o=t.length;++e<o;)if(48>(f=t.charCodeAt(e))||f>57){x=(46===f?r+t.slice(e+1):t.slice(e))+x,t=t.slice(0,e);break}}h&&!s&&(t=n(t,1/0));var M=m.length+t.length+x.length,A=M<l?new Array(l-M+1).join(u):"";switch(h&&s&&(t=n(A+t,A.length?l-x.length:1/0),A=""),a){case"<":t=m+t+x+A;break;case"=":t=m+A+t+x;break;case"^":t=A.slice(0,M=A.length>>1)+m+t+x+A.slice(M);break;default:t=A+m+t+x}return i(t)}return d=null==d?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),m.toString=function(){return t+""},m}return{format:u,formatPrefix:function(t,n){var e=u(((t=Oa(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(za(n)/3))),i=Math.pow(10,-r),o=Ha[8+r/3];return function(t){return e(i*t)+o}}}};function $a(t){return La=Xa(t),qa=La.format,Ia=La.formatPrefix,La}$a({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var Ga=function(t){return Math.max(0,-za(Math.abs(t)))},Va=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(za(n)/3)))-za(Math.abs(t)))},Wa=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,za(n)-za(t))+1},Za=function(){return new Ja};function Ja(){this.reset()}Ja.prototype={constructor:Ja,reset:function(){this.s=this.t=0},add:function(t){Ka(Qa,t,this.t),Ka(this,Qa.s,this.s),this.s?this.t+=Qa.t:this.s=Qa.t},valueOf:function(){return this.s}};var Qa=new Ja;function Ka(t,n,e){var r=t.s=n+e,i=r-n,o=r-i;t.t=n-o+(e-i)}var tc=1e-6,nc=Math.PI,ec=nc/2,rc=nc/4,ic=2*nc,oc=180/nc,uc=nc/180,ac=Math.abs,cc=Math.atan,fc=Math.atan2,sc=Math.cos,lc=Math.ceil,hc=Math.exp,dc=(Math.floor,Math.log),pc=Math.pow,vc=Math.sin,gc=Math.sign||function(t){return t>0?1:t<0?-1:0},yc=Math.sqrt,bc=Math.tan;function _c(t){return t>1?0:t<-1?nc:Math.acos(t)}function mc(t){return t>1?ec:t<-1?-ec:Math.asin(t)}function xc(t){return(t=vc(t/2))*t}function wc(){}function Mc(t,n){t&&Sc.hasOwnProperty(t.type)&&Sc[t.type](t,n)}var Ac={Feature:function(t,n){Mc(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)Mc(e[r].geometry,n)}},Sc={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Ec(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Ec(e[r],n,0)},Polygon:function(t,n){Tc(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Tc(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)Mc(e[r],n)}};function Ec(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function Tc(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Ec(t[e],n,1);n.polygonEnd()}var Nc,kc,Cc,Pc,zc,Rc=function(t,n){t&&Ac.hasOwnProperty(t.type)?Ac[t.type](t,n):Mc(t,n)},Oc=Za(),Dc=Za(),Uc={point:wc,lineStart:wc,lineEnd:wc,polygonStart:function(){Oc.reset(),Uc.lineStart=Lc,Uc.lineEnd=qc},polygonEnd:function(){var t=+Oc;Dc.add(t<0?ic+t:t),this.lineStart=this.lineEnd=this.point=wc},sphere:function(){Dc.add(ic)}};function Lc(){Uc.point=Ic}function qc(){jc(Nc,kc)}function Ic(t,n){Uc.point=jc,Nc=t,kc=n,Cc=t*=uc,Pc=sc(n=(n*=uc)/2+rc),zc=vc(n)}function jc(t,n){n=(n*=uc)/2+rc;var e=(t*=uc)-Cc,r=e>=0?1:-1,i=r*e,o=sc(n),u=vc(n),a=zc*u,c=Pc*o+a*sc(i),f=a*r*vc(i);Oc.add(fc(f,c)),Cc=t,Pc=o,zc=u}var Bc=function(t){return Dc.reset(),Rc(t,Uc),2*Dc};function Fc(t){return[fc(t[1],t[0]),mc(t[2])]}function Yc(t){var n=t[0],e=t[1],r=sc(e);return[r*sc(n),r*vc(n),vc(e)]}function Hc(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Xc(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function $c(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Gc(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Vc(t){var n=yc(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var Wc,Zc,Jc,Qc,Kc,tf,nf,ef,rf,of,uf=Za(),af={point:cf,lineStart:sf,lineEnd:lf,polygonStart:function(){af.point=hf,af.lineStart=df,af.lineEnd=pf,uf.reset(),Uc.polygonStart()},polygonEnd:function(){Uc.polygonEnd(),af.point=cf,af.lineStart=sf,af.lineEnd=lf,Oc<0?(Wc=-(Jc=180),Zc=-(Qc=90)):uf>tc?Qc=90:uf<-tc&&(Zc=-90),of[0]=Wc,of[1]=Jc}};function cf(t,n){rf.push(of=[Wc=t,Jc=t]),n<Zc&&(Zc=n),n>Qc&&(Qc=n)}function ff(t,n){var e=Yc([t*uc,n*uc]);if(ef){var r=Xc(ef,e),i=Xc([r[1],-r[0],0],r);Vc(i),i=Fc(i);var o,u=t-Kc,a=u>0?1:-1,c=i[0]*oc*a,f=ac(u)>180;f^(a*Kc<c&&c<a*t)?(o=i[1]*oc)>Qc&&(Qc=o):f^(a*Kc<(c=(c+360)%360-180)&&c<a*t)?(o=-i[1]*oc)<Zc&&(Zc=o):(n<Zc&&(Zc=n),n>Qc&&(Qc=n)),f?t<Kc?vf(Wc,t)>vf(Wc,Jc)&&(Jc=t):vf(t,Jc)>vf(Wc,Jc)&&(Wc=t):Jc>=Wc?(t<Wc&&(Wc=t),t>Jc&&(Jc=t)):t>Kc?vf(Wc,t)>vf(Wc,Jc)&&(Jc=t):vf(t,Jc)>vf(Wc,Jc)&&(Wc=t)}else rf.push(of=[Wc=t,Jc=t]);n<Zc&&(Zc=n),n>Qc&&(Qc=n),ef=e,Kc=t}function sf(){af.point=ff}function lf(){of[0]=Wc,of[1]=Jc,af.point=cf,ef=null}function hf(t,n){if(ef){var e=t-Kc;uf.add(ac(e)>180?e+(e>0?360:-360):e)}else tf=t,nf=n;Uc.point(t,n),ff(t,n)}function df(){Uc.lineStart()}function pf(){hf(tf,nf),Uc.lineEnd(),ac(uf)>tc&&(Wc=-(Jc=180)),of[0]=Wc,of[1]=Jc,ef=null}function vf(t,n){return(n-=t)<0?n+360:n}function gf(t,n){return t[0]-n[0]}function yf(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var bf,_f,mf,xf,wf,Mf,Af,Sf,Ef,Tf,Nf,kf,Cf,Pf,zf,Rf,Of=function(t){var n,e,r,i,o,u,a;if(Qc=Jc=-(Wc=Zc=1/0),rf=[],Rc(t,af),e=rf.length){for(rf.sort(gf),n=1,o=[r=rf[0]];n<e;++n)yf(r,(i=rf[n])[0])||yf(r,i[1])?(vf(r[0],i[1])>vf(r[0],r[1])&&(r[1]=i[1]),vf(i[0],r[1])>vf(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(u=-1/0,n=0,r=o[e=o.length-1];n<=e;r=i,++n)i=o[n],(a=vf(r[1],i[0]))>u&&(u=a,Wc=i[0],Jc=r[1])}return rf=of=null,Wc===1/0||Zc===1/0?[[NaN,NaN],[NaN,NaN]]:[[Wc,Zc],[Jc,Qc]]},Df={sphere:wc,point:Uf,lineStart:qf,lineEnd:Bf,polygonStart:function(){Df.lineStart=Ff,Df.lineEnd=Yf},polygonEnd:function(){Df.lineStart=qf,Df.lineEnd=Bf}};function Uf(t,n){t*=uc;var e=sc(n*=uc);Lf(e*sc(t),e*vc(t),vc(n))}function Lf(t,n,e){mf+=(t-mf)/++bf,xf+=(n-xf)/bf,wf+=(e-wf)/bf}function qf(){Df.point=If}function If(t,n){t*=uc;var e=sc(n*=uc);Pf=e*sc(t),zf=e*vc(t),Rf=vc(n),Df.point=jf,Lf(Pf,zf,Rf)}function jf(t,n){t*=uc;var e=sc(n*=uc),r=e*sc(t),i=e*vc(t),o=vc(n),u=fc(yc((u=zf*o-Rf*i)*u+(u=Rf*r-Pf*o)*u+(u=Pf*i-zf*r)*u),Pf*r+zf*i+Rf*o);_f+=u,Mf+=u*(Pf+(Pf=r)),Af+=u*(zf+(zf=i)),Sf+=u*(Rf+(Rf=o)),Lf(Pf,zf,Rf)}function Bf(){Df.point=Uf}function Ff(){Df.point=Hf}function Yf(){Xf(kf,Cf),Df.point=Uf}function Hf(t,n){kf=t,Cf=n,t*=uc,n*=uc,Df.point=Xf;var e=sc(n);Pf=e*sc(t),zf=e*vc(t),Rf=vc(n),Lf(Pf,zf,Rf)}function Xf(t,n){t*=uc;var e=sc(n*=uc),r=e*sc(t),i=e*vc(t),o=vc(n),u=zf*o-Rf*i,a=Rf*r-Pf*o,c=Pf*i-zf*r,f=yc(u*u+a*a+c*c),s=mc(f),l=f&&-s/f;Ef+=l*u,Tf+=l*a,Nf+=l*c,_f+=s,Mf+=s*(Pf+(Pf=r)),Af+=s*(zf+(zf=i)),Sf+=s*(Rf+(Rf=o)),Lf(Pf,zf,Rf)}var $f=function(t){bf=_f=mf=xf=wf=Mf=Af=Sf=Ef=Tf=Nf=0,Rc(t,Df);var n=Ef,e=Tf,r=Nf,i=n*n+e*e+r*r;return i<1e-12&&(n=Mf,e=Af,r=Sf,_f<tc&&(n=mf,e=xf,r=wf),(i=n*n+e*e+r*r)<1e-12)?[NaN,NaN]:[fc(e,n)*oc,mc(r/yc(i))*oc]},Gf=function(t){return function(){return t}},Vf=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e};function Wf(t,n){return[t>nc?t-ic:t<-nc?t+ic:t,n]}function Zf(t,n,e){return(t%=ic)?n||e?Vf(Qf(t),Kf(n,e)):Qf(t):n||e?Kf(n,e):Wf}function Jf(t){return function(n,e){return[(n+=t)>nc?n-ic:n<-nc?n+ic:n,e]}}function Qf(t){var n=Jf(t);return n.invert=Jf(-t),n}function Kf(t,n){var e=sc(t),r=vc(t),i=sc(n),o=vc(n);function u(t,n){var u=sc(n),a=sc(t)*u,c=vc(t)*u,f=vc(n),s=f*e+a*r;return[fc(c*i-s*o,a*e-f*r),mc(s*i+c*o)]}return u.invert=function(t,n){var u=sc(n),a=sc(t)*u,c=vc(t)*u,f=vc(n),s=f*i-c*o;return[fc(c*i+f*o,a*e+s*r),mc(s*e-a*r)]},u}Wf.invert=Wf;var ts=function(t){function n(n){return(n=t(n[0]*uc,n[1]*uc))[0]*=oc,n[1]*=oc,n}return t=Zf(t[0]*uc,t[1]*uc,t.length>2?t[2]*uc:0),n.invert=function(n){return(n=t.invert(n[0]*uc,n[1]*uc))[0]*=oc,n[1]*=oc,n},n};function ns(t,n,e,r,i,o){if(e){var u=sc(n),a=vc(n),c=r*e;null==i?(i=n+r*ic,o=n-c/2):(i=es(u,i),o=es(u,o),(r>0?i<o:i>o)&&(i+=r*ic));for(var f,s=i;r>0?s>o:s<o;s-=c)f=Fc([u,-a*sc(s),-a*vc(s)]),t.point(f[0],f[1])}}function es(t,n){(n=Yc(n))[0]-=t,Vc(n);var e=_c(-n[1]);return((-n[2]<0?-e:e)+ic-tc)%ic}var rs=function(){var t,n,e=Gf([0,0]),r=Gf(90),i=Gf(6),o={point:function(e,r){t.push(e=n(e,r)),e[0]*=oc,e[1]*=oc}};function u(){var u=e.apply(this,arguments),a=r.apply(this,arguments)*uc,c=i.apply(this,arguments)*uc;return t=[],n=Zf(-u[0]*uc,-u[1]*uc,0).invert,ns(o,a,c,1),u={type:"Polygon",coordinates:[t]},t=n=null,u}return u.center=function(t){return arguments.length?(e="function"==typeof t?t:Gf([+t[0],+t[1]]),u):e},u.radius=function(t){return arguments.length?(r="function"==typeof t?t:Gf(+t),u):r},u.precision=function(t){return arguments.length?(i="function"==typeof t?t:Gf(+t),u):i},u},is=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:wc,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},os=function(t,n){return ac(t[0]-n[0])<tc&&ac(t[1]-n[1])<tc};function us(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}var as=function(t,n,e,r,i){var o,u,a=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],u=t[n];if(os(r,u)){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else a.push(e=new us(r,t,null,!0)),c.push(e.o=new us(r,null,e,!1)),a.push(e=new us(u,t,null,!1)),c.push(e.o=new us(u,null,e,!0))}}),a.length){for(c.sort(n),cs(a),cs(c),o=0,u=c.length;o<u;++o)c[o].e=e=!e;for(var f,s,l=a[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(o=0,u=f.length;o<u;++o)i.point((s=f[o])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,o=f.length-1;o>=0;--o)i.point((s=f[o])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function cs(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}var fs=Za(),ss=function(t,n){var e=n[0],r=n[1],i=vc(r),o=[vc(e),-sc(e),0],u=0,a=0;fs.reset(),1===i?r=ec+tc:-1===i&&(r=-ec-tc);for(var c=0,f=t.length;c<f;++c)if(l=(s=t[c]).length)for(var s,l,h=s[l-1],d=h[0],p=h[1]/2+rc,v=vc(p),g=sc(p),y=0;y<l;++y,d=_,v=x,g=w,h=b){var b=s[y],_=b[0],m=b[1]/2+rc,x=vc(m),w=sc(m),M=_-d,A=M>=0?1:-1,S=A*M,E=S>nc,T=v*x;if(fs.add(fc(T*A*vc(S),g*w+T*sc(S))),u+=E?M+A*ic:M,E^d>=e^_>=e){var N=Xc(Yc(h),Yc(b));Vc(N);var k=Xc(o,N);Vc(k);var C=(E^M>=0?-1:1)*mc(k[2]);(r>C||r===C&&(N[0]||N[1]))&&(a+=E^M>=0?1:-1)}}return(u<-tc||u<tc&&fs<-tc)^1&a},ls=function(t,n,e,r){return function(i){var o,u,a,c=n(i),f=is(),s=n(f),l=!1,h={point:d,lineStart:v,lineEnd:g,polygonStart:function(){h.point=y,h.lineStart=b,h.lineEnd=_,u=[],o=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=g,u=L(u);var t=ss(o,r);u.length?(l||(i.polygonStart(),l=!0),as(u,ds,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),u=o=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){c.point(t,n)}function v(){h.point=p,c.lineStart()}function g(){h.point=d,c.lineEnd()}function y(t,n){a.push([t,n]),s.point(t,n)}function b(){s.lineStart(),a=[]}function _(){y(a[0][0],a[0][1]),s.lineEnd();var t,n,e,r,c=s.clean(),h=f.result(),d=h.length;if(a.pop(),o.push(a),a=null,d)if(1&c){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),u.push(h.filter(hs))}return h}};function hs(t){return t.length>1}function ds(t,n){return((t=t.x)[0]<0?t[1]-ec-tc:ec-t[1])-((n=n.x)[0]<0?n[1]-ec-tc:ec-n[1])}var ps=ls(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,u){var a=o>0?nc:-nc,c=ac(o-e);ac(c-nc)<tc?(t.point(e,r=(r+u)/2>0?ec:-ec),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),n=0):i!==a&&c>=nc&&(ac(e-i)<tc&&(e-=i*tc),ac(o-a)<tc&&(o-=a*tc),r=function(t,n,e,r){var i,o,u=vc(t-e);return ac(u)>tc?cc((vc(n)*(o=sc(r))*vc(e)-vc(r)*(i=sc(n))*vc(t))/(i*o*u)):(n+r)/2}(e,r,o,u),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=o,r=u),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*ec,r.point(-nc,i),r.point(0,i),r.point(nc,i),r.point(nc,0),r.point(nc,-i),r.point(0,-i),r.point(-nc,-i),r.point(-nc,0),r.point(-nc,i);else if(ac(t[0]-n[0])>tc){var o=t[0]<n[0]?nc:-nc;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])},[-nc,-ec]);var vs=function(t){var n=sc(t),e=6*uc,r=n>0,i=ac(n)>tc;function o(t,e){return sc(t)*sc(e)>n}function u(t,e,r){var i=[1,0,0],o=Xc(Yc(t),Yc(e)),u=Hc(o,o),a=o[0],c=u-a*a;if(!c)return!r&&t;var f=n*u/c,s=-n*a/c,l=Xc(i,o),h=Gc(i,f);$c(h,Gc(o,s));var d=l,p=Hc(h,d),v=Hc(d,d),g=p*p-v*(Hc(h,h)-1);if(!(g<0)){var y=yc(g),b=Gc(d,(-p-y)/v);if($c(b,h),b=Fc(b),!r)return b;var _,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(_=m,m=x,x=_);var A=x-m,S=ac(A-nc)<tc;if(!S&&M<w&&(_=w,w=M,M=_),S||A<tc?S?w+M>0^b[1]<(ac(b[0]-m)<tc?w:M):w<=b[1]&&b[1]<=M:A>nc^(m<=b[0]&&b[0]<=x)){var E=Gc(d,(-p+y)/v);return $c(E,h),[b,Fc(E)]}}}function a(n,e){var i=r?t:nc-t,o=0;return n<-i?o|=1:n>i&&(o|=2),e<-i?o|=4:e>i&&(o|=8),o}return ls(o,function(t){var n,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],v=o(l,h),g=r?v?0:a(l,h):v?a(l+(l<0?nc:-nc),h):0;if(!n&&(f=c=v)&&t.lineStart(),v!==c&&(!(d=u(n,p))||os(n,d)||os(p,d))&&(p[0]+=tc,p[1]+=tc,v=o(p[0],p[1])),v!==c)s=0,v?(t.lineStart(),d=u(p,n),t.point(d[0],d[1])):(d=u(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var y;g&e||!(y=u(p,n,!0))||(s=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&os(n,p)||t.point(p[0],p[1]),n=p,c=v,e=g},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return s|(f&&c)<<1}}},function(n,r,i,o){ns(o,t,e,i,n,r)},r?[0,-t]:[-nc,t-nc])},gs=function(t,n,e,r,i,o){var u,a=t[0],c=t[1],f=0,s=1,l=n[0]-a,h=n[1]-c;if(u=e-a,l||!(u>0)){if(u/=l,l<0){if(u<f)return;u<s&&(s=u)}else if(l>0){if(u>s)return;u>f&&(f=u)}if(u=i-a,l||!(u<0)){if(u/=l,l<0){if(u>s)return;u>f&&(f=u)}else if(l>0){if(u<f)return;u<s&&(s=u)}if(u=r-c,h||!(u>0)){if(u/=h,h<0){if(u<f)return;u<s&&(s=u)}else if(h>0){if(u>s)return;u>f&&(f=u)}if(u=o-c,h||!(u<0)){if(u/=h,h<0){if(u>s)return;u>f&&(f=u)}else if(h>0){if(u<f)return;u<s&&(s=u)}return f>0&&(t[0]=a+f*l,t[1]=c+f*h),s<1&&(n[0]=a+s*l,n[1]=c+s*h),!0}}}}},ys=1e9,bs=-ys;function _s(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,a,f){var s=0,l=0;if(null==i||(s=u(i,a))!==(l=u(o,a))||c(i,o)<0^a>0)do{f.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+a+4)%4)!==l);else f.point(o[0],o[1])}function u(r,i){return ac(r[0]-t)<tc?i>0?0:3:ac(r[0]-e)<tc?i>0?2:1:ac(r[1]-n)<tc?i>0?1:0:i>0?3:2}function a(t,n){return c(t.x,n.x)}function c(t,n){var e=u(t,1),r=u(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(u){var c,f,s,l,h,d,p,v,g,y,b,_=u,m=is(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]);y=!0,g=!1,p=v=NaN},lineEnd:function(){c&&(M(l,h),d&&g&&m.rejoin(),c.push(m.result()));x.point=w,g&&_.lineEnd()},polygonStart:function(){_=m,c=[],f=[],b=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=f.length;e<i;++e)for(var o,u,a=f[e],c=1,s=a.length,l=a[0],h=l[0],d=l[1];c<s;++c)o=h,u=d,l=a[c],h=l[0],d=l[1],u<=r?d>r&&(h-o)*(r-u)>(d-u)*(t-o)&&++n:d<=r&&(h-o)*(r-u)<(d-u)*(t-o)&&--n;return n}(),e=b&&n,i=(c=L(c)).length;(e||i)&&(u.polygonStart(),e&&(u.lineStart(),o(null,null,1,u),u.lineEnd()),i&&as(c,a,n,o,u),u.polygonEnd());_=u,c=f=s=null}};function w(t,n){i(t,n)&&_.point(t,n)}function M(o,u){var a=i(o,u);if(f&&s.push([o,u]),y)l=o,h=u,d=a,y=!1,a&&(_.lineStart(),_.point(o,u));else if(a&&g)_.point(o,u);else{var c=[p=Math.max(bs,Math.min(ys,p)),v=Math.max(bs,Math.min(ys,v))],m=[o=Math.max(bs,Math.min(ys,o)),u=Math.max(bs,Math.min(ys,u))];gs(c,m,t,n,e,r)?(g||(_.lineStart(),_.point(c[0],c[1])),_.point(m[0],m[1]),a||_.lineEnd(),b=!1):a&&(_.lineStart(),_.point(o,u),b=!1)}p=o,v=u,g=a}return x}}var ms,xs,ws,Ms=function(){var t,n,e,r=0,i=0,o=960,u=500;return e={stream:function(e){return t&&n===e?t:t=_s(r,i,o,u)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],o=+a[1][0],u=+a[1][1],t=n=null,e):[[r,i],[o,u]]}}},As=Za(),Ss={sphere:wc,point:wc,lineStart:function(){Ss.point=Ts,Ss.lineEnd=Es},lineEnd:wc,polygonStart:wc,polygonEnd:wc};function Es(){Ss.point=Ss.lineEnd=wc}function Ts(t,n){ms=t*=uc,xs=vc(n*=uc),ws=sc(n),Ss.point=Ns}function Ns(t,n){t*=uc;var e=vc(n*=uc),r=sc(n),i=ac(t-ms),o=sc(i),u=r*vc(i),a=ws*e-xs*r*o,c=xs*e+ws*r*o;As.add(fc(yc(u*u+a*a),c)),ms=t,xs=e,ws=r}var ks=function(t){return As.reset(),Rc(t,Ss),+As},Cs=[null,null],Ps={type:"LineString",coordinates:Cs},zs=function(t,n){return Cs[0]=t,Cs[1]=n,ks(Ps)},Rs={Feature:function(t,n){return Ds(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(Ds(e[r].geometry,n))return!0;return!1}},Os={Sphere:function(){return!0},Point:function(t,n){return Us(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Us(e[r],n))return!0;return!1},LineString:function(t,n){return Ls(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Ls(e[r],n))return!0;return!1},Polygon:function(t,n){return qs(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(qs(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(Ds(e[r],n))return!0;return!1}};function Ds(t,n){return!(!t||!Os.hasOwnProperty(t.type))&&Os[t.type](t,n)}function Us(t,n){return 0===zs(t,n)}function Ls(t,n){var e=zs(t[0],t[1]);return zs(t[0],n)+zs(n,t[1])<=e+tc}function qs(t,n){return!!ss(t.map(Is),js(n))}function Is(t){return(t=t.map(js)).pop(),t}function js(t){return[t[0]*uc,t[1]*uc]}var Bs=function(t,n){return(t&&Rs.hasOwnProperty(t.type)?Rs[t.type]:Ds)(t,n)};function Fs(t,n,e){var r=w(t,n-tc,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Ys(t,n,e){var r=w(t,n-tc,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function Hs(){var t,n,e,r,i,o,u,a,c,f,s,l,h=10,d=h,p=90,v=360,g=2.5;function y(){return{type:"MultiLineString",coordinates:b()}}function b(){return w(lc(r/p)*p,e,p).map(s).concat(w(lc(a/v)*v,u,v).map(l)).concat(w(lc(n/h)*h,t,h).filter(function(t){return ac(t%p)>tc}).map(c)).concat(w(lc(o/d)*d,i,d).filter(function(t){return ac(t%v)>tc}).map(f))}return y.lines=function(){return b().map(function(t){return{type:"LineString",coordinates:t}})},y.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(u).slice(1),s(e).reverse().slice(1),l(a).reverse().slice(1))]}},y.extent=function(t){return arguments.length?y.extentMajor(t).extentMinor(t):y.extentMinor()},y.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],u=+t[1][1],r>e&&(t=r,r=e,e=t),a>u&&(t=a,a=u,u=t),y.precision(g)):[[r,a],[e,u]]},y.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],o=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),o>i&&(e=o,o=i,i=e),y.precision(g)):[[n,o],[t,i]]},y.step=function(t){return arguments.length?y.stepMajor(t).stepMinor(t):y.stepMinor()},y.stepMajor=function(t){return arguments.length?(p=+t[0],v=+t[1],y):[p,v]},y.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],y):[h,d]},y.precision=function(h){return arguments.length?(g=+h,c=Fs(o,i,90),f=Ys(n,t,g),s=Fs(a,u,90),l=Ys(r,e,g),y):g},y.extentMajor([[-180,-90+tc],[180,90-tc]]).extentMinor([[-180,-80-tc],[180,80+tc]])}function Xs(){return Hs()()}var $s,Gs,Vs,Ws,Zs=function(t,n){var e=t[0]*uc,r=t[1]*uc,i=n[0]*uc,o=n[1]*uc,u=sc(r),a=vc(r),c=sc(o),f=vc(o),s=u*sc(e),l=u*vc(e),h=c*sc(i),d=c*vc(i),p=2*mc(yc(xc(o-r)+u*c*xc(i-e))),v=vc(p),g=p?function(t){var n=vc(t*=p)/v,e=vc(p-t)/v,r=e*s+n*h,i=e*l+n*d,o=e*a+n*f;return[fc(i,r)*oc,fc(o,yc(r*r+i*i))*oc]}:function(){return[e*oc,r*oc]};return g.distance=p,g},Js=function(t){return t},Qs=Za(),Ks=Za(),tl={point:wc,lineStart:wc,lineEnd:wc,polygonStart:function(){tl.lineStart=nl,tl.lineEnd=il},polygonEnd:function(){tl.lineStart=tl.lineEnd=tl.point=wc,Qs.add(ac(Ks)),Ks.reset()},result:function(){var t=Qs/2;return Qs.reset(),t}};function nl(){tl.point=el}function el(t,n){tl.point=rl,$s=Vs=t,Gs=Ws=n}function rl(t,n){Ks.add(Ws*t-Vs*n),Vs=t,Ws=n}function il(){rl($s,Gs)}var ol=tl,ul=1/0,al=ul,cl=-ul,fl=cl;var sl,ll,hl,dl,pl={point:function(t,n){t<ul&&(ul=t);t>cl&&(cl=t);n<al&&(al=n);n>fl&&(fl=n)},lineStart:wc,lineEnd:wc,polygonStart:wc,polygonEnd:wc,result:function(){var t=[[ul,al],[cl,fl]];return cl=fl=-(al=ul=1/0),t}},vl=0,gl=0,yl=0,bl=0,_l=0,ml=0,xl=0,wl=0,Ml=0,Al={point:Sl,lineStart:El,lineEnd:kl,polygonStart:function(){Al.lineStart=Cl,Al.lineEnd=Pl},polygonEnd:function(){Al.point=Sl,Al.lineStart=El,Al.lineEnd=kl},result:function(){var t=Ml?[xl/Ml,wl/Ml]:ml?[bl/ml,_l/ml]:yl?[vl/yl,gl/yl]:[NaN,NaN];return vl=gl=yl=bl=_l=ml=xl=wl=Ml=0,t}};function Sl(t,n){vl+=t,gl+=n,++yl}function El(){Al.point=Tl}function Tl(t,n){Al.point=Nl,Sl(hl=t,dl=n)}function Nl(t,n){var e=t-hl,r=n-dl,i=yc(e*e+r*r);bl+=i*(hl+t)/2,_l+=i*(dl+n)/2,ml+=i,Sl(hl=t,dl=n)}function kl(){Al.point=Sl}function Cl(){Al.point=zl}function Pl(){Rl(sl,ll)}function zl(t,n){Al.point=Rl,Sl(sl=hl=t,ll=dl=n)}function Rl(t,n){var e=t-hl,r=n-dl,i=yc(e*e+r*r);bl+=i*(hl+t)/2,_l+=i*(dl+n)/2,ml+=i,xl+=(i=dl*t-hl*n)*(hl+t),wl+=i*(dl+n),Ml+=3*i,Sl(hl=t,dl=n)}var Ol=Al;function Dl(t){this._context=t}Dl.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,ic)}},result:wc};var Ul,Ll,ql,Il,jl,Bl=Za(),Fl={point:wc,lineStart:function(){Fl.point=Yl},lineEnd:function(){Ul&&Hl(Ll,ql),Fl.point=wc},polygonStart:function(){Ul=!0},polygonEnd:function(){Ul=null},result:function(){var t=+Bl;return Bl.reset(),t}};function Yl(t,n){Fl.point=Hl,Ll=Il=t,ql=jl=n}function Hl(t,n){Il-=t,jl-=n,Bl.add(yc(Il*Il+jl*jl)),Il=t,jl=n}var Xl=Fl;function $l(){this._string=[]}function Gl(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}$l.prototype={_radius:4.5,_circle:Gl(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=Gl(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var Vl=function(t,n){var e,r,i=4.5;function o(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Rc(t,e(r))),r.result()}return o.area=function(t){return Rc(t,e(ol)),ol.result()},o.measure=function(t){return Rc(t,e(Xl)),Xl.result()},o.bounds=function(t){return Rc(t,e(pl)),pl.result()},o.centroid=function(t){return Rc(t,e(Ol)),Ol.result()},o.projection=function(n){return arguments.length?(e=null==n?(t=null,Js):(t=n).stream,o):t},o.context=function(t){return arguments.length?(r=null==t?(n=null,new $l):new Dl(n=t),"function"!=typeof i&&r.pointRadius(i),o):n},o.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),o):i},o.projection(t).context(n)},Wl=function(t){return{stream:Zl(t)}};function Zl(t){return function(n){var e=new Jl;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Jl(){}function Ql(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Rc(e,t.stream(pl)),n(pl.result()),null!=r&&t.clipExtent(r),t}function Kl(t,n,e){return Ql(t,function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),u=+n[0][0]+(r-o*(e[1][0]+e[0][0]))/2,a=+n[0][1]+(i-o*(e[1][1]+e[0][1]))/2;t.scale(150*o).translate([u,a])},e)}function th(t,n,e){return Kl(t,[[0,0],n],e)}function nh(t,n,e){return Ql(t,function(e){var r=+n,i=r/(e[1][0]-e[0][0]),o=(r-i*(e[1][0]+e[0][0]))/2,u=-i*e[0][1];t.scale(150*i).translate([o,u])},e)}function eh(t,n,e){return Ql(t,function(e){var r=+n,i=r/(e[1][1]-e[0][1]),o=-i*e[0][0],u=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([o,u])},e)}Jl.prototype={constructor:Jl,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var rh=16,ih=sc(30*uc),oh=function(t,n){return+n?function(t,n){function e(r,i,o,u,a,c,f,s,l,h,d,p,v,g){var y=f-r,b=s-i,_=y*y+b*b;if(_>4*n&&v--){var m=u+h,x=a+d,w=c+p,M=yc(m*m+x*x+w*w),A=mc(w/=M),S=ac(ac(w)-1)<tc||ac(o-l)<tc?(o+l)/2:fc(x,m),E=t(S,A),T=E[0],N=E[1],k=T-r,C=N-i,P=b*k-y*C;(P*P/_>n||ac((y*k+b*C)/_-.5)>.3||u*h+a*d+c*p<ih)&&(e(r,i,o,u,a,c,T,N,S,m/=M,x/=M,w,v,g),g.point(T,N),e(T,N,S,m,x,w,f,s,l,h,d,p,v,g))}}return function(n){var r,i,o,u,a,c,f,s,l,h,d,p,v={point:g,lineStart:y,lineEnd:_,polygonStart:function(){n.polygonStart(),v.lineStart=m},polygonEnd:function(){n.polygonEnd(),v.lineStart=y}};function g(e,r){e=t(e,r),n.point(e[0],e[1])}function y(){s=NaN,v.point=b,n.lineStart()}function b(r,i){var o=Yc([r,i]),u=t(r,i);e(s,l,f,h,d,p,s=u[0],l=u[1],f=r,h=o[0],d=o[1],p=o[2],rh,n),n.point(s,l)}function _(){v.point=g,n.lineEnd()}function m(){y(),v.point=x,v.lineEnd=w}function x(t,n){b(r=t,n),i=s,o=l,u=h,a=d,c=p,v.point=b}function w(){e(s,l,f,h,d,p,i,o,r,u,a,c,rh,n),v.lineEnd=_,_()}return v}}(t,n):function(t){return Zl({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)};var uh=Zl({point:function(t,n){this.stream.point(t*uc,n*uc)}});function ah(t,n,e,r){var i=sc(r),o=vc(r),u=i*t,a=o*t,c=i/t,f=o/t,s=(o*e-i*n)/t,l=(o*n+i*e)/t;function h(t,r){return[u*t-a*r+n,e-a*t-u*r]}return h.invert=function(t,n){return[c*t-f*n+s,l-f*t-c*n]},h}function ch(t){return fh(function(){return t})()}function fh(t){var n,e,r,i,o,u,a,c,f,s,l=150,h=480,d=250,p=0,v=0,g=0,y=0,b=0,_=0,m=null,x=ps,w=null,M=Js,A=.5;function S(t){return c(t[0]*uc,t[1]*uc)}function E(t){return(t=c.invert(t[0],t[1]))&&[t[0]*oc,t[1]*oc]}function T(){var t=ah(l,0,0,_).apply(null,n(p,v)),r=(_?ah:function(t,n,e){function r(r,i){return[n+t*r,e-t*i]}return r.invert=function(r,i){return[(r-n)/t,(e-i)/t]},r})(l,h-t[0],d-t[1],_);return e=Zf(g,y,b),a=Vf(n,r),c=Vf(e,a),u=oh(a,A),N()}function N(){return f=s=null,S}return S.stream=function(t){return f&&s===t?f:f=uh(function(t){return Zl({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(x(u(M(s=t)))))},S.preclip=function(t){return arguments.length?(x=t,m=void 0,N()):x},S.postclip=function(t){return arguments.length?(M=t,w=r=i=o=null,N()):M},S.clipAngle=function(t){return arguments.length?(x=+t?vs(m=t*uc):(m=null,ps),N()):m*oc},S.clipExtent=function(t){return arguments.length?(M=null==t?(w=r=i=o=null,Js):_s(w=+t[0][0],r=+t[0][1],i=+t[1][0],o=+t[1][1]),N()):null==w?null:[[w,r],[i,o]]},S.scale=function(t){return arguments.length?(l=+t,T()):l},S.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],T()):[h,d]},S.center=function(t){return arguments.length?(p=t[0]%360*uc,v=t[1]%360*uc,T()):[p*oc,v*oc]},S.rotate=function(t){return arguments.length?(g=t[0]%360*uc,y=t[1]%360*uc,b=t.length>2?t[2]%360*uc:0,T()):[g*oc,y*oc,b*oc]},S.angle=function(t){return arguments.length?(_=t%360*uc,T()):_*oc},S.precision=function(t){return arguments.length?(u=oh(a,A=t*t),N()):yc(A)},S.fitExtent=function(t,n){return Kl(S,t,n)},S.fitSize=function(t,n){return th(S,t,n)},S.fitWidth=function(t,n){return nh(S,t,n)},S.fitHeight=function(t,n){return eh(S,t,n)},function(){return n=t.apply(this,arguments),S.invert=n.invert&&E,T()}}function sh(t){var n=0,e=nc/3,r=fh(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*uc,e=t[1]*uc):[n*oc,e*oc]},i}function lh(t,n){var e=vc(t),r=(e+vc(n))/2;if(ac(r)<tc)return function(t){var n=sc(t);function e(t,e){return[t*n,vc(e)/n]}return e.invert=function(t,e){return[t/n,mc(e*n)]},e}(t);var i=1+e*(2*r-e),o=yc(i)/r;function u(t,n){var e=yc(i-2*r*vc(n))/r;return[e*vc(t*=r),o-e*sc(t)]}return u.invert=function(t,n){var e=o-n;return[fc(t,ac(e))/r*gc(e),mc((i-(t*t+e*e)*r*r)/(2*r))]},u}var hh=function(){return sh(lh).scale(155.424).center([0,33.6442])},dh=function(){return hh().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var ph=function(){var t,n,e,r,i,o,u=dh(),a=hh().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=hh().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){o=[t,n]}};function s(t){var n=t[0],u=t[1];return o=null,e.point(n,u),o||(r.point(n,u),o)||(i.point(n,u),o)}function l(){return t=n=null,s}return s.invert=function(t){var n=u.scale(),e=u.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:u).invert(t)},s.stream=function(e){return t&&n===e?t:t=function(t){var n=t.length;return{point:function(e,r){for(var i=-1;++i<n;)t[i].point(e,r)},sphere:function(){for(var e=-1;++e<n;)t[e].sphere()},lineStart:function(){for(var e=-1;++e<n;)t[e].lineStart()},lineEnd:function(){for(var e=-1;++e<n;)t[e].lineEnd()},polygonStart:function(){for(var e=-1;++e<n;)t[e].polygonStart()},polygonEnd:function(){for(var e=-1;++e<n;)t[e].polygonEnd()}}}([u.stream(n=e),a.stream(e),c.stream(e)])},s.precision=function(t){return arguments.length?(u.precision(t),a.precision(t),c.precision(t),l()):u.precision()},s.scale=function(t){return arguments.length?(u.scale(t),a.scale(.35*t),c.scale(t),s.translate(u.translate())):u.scale()},s.translate=function(t){if(!arguments.length)return u.translate();var n=u.scale(),o=+t[0],s=+t[1];return e=u.translate(t).clipExtent([[o-.455*n,s-.238*n],[o+.455*n,s+.238*n]]).stream(f),r=a.translate([o-.307*n,s+.201*n]).clipExtent([[o-.425*n+tc,s+.12*n+tc],[o-.214*n-tc,s+.234*n-tc]]).stream(f),i=c.translate([o-.205*n,s+.212*n]).clipExtent([[o-.214*n+tc,s+.166*n+tc],[o-.115*n-tc,s+.234*n-tc]]).stream(f),l()},s.fitExtent=function(t,n){return Kl(s,t,n)},s.fitSize=function(t,n){return th(s,t,n)},s.fitWidth=function(t,n){return nh(s,t,n)},s.fitHeight=function(t,n){return eh(s,t,n)},s.scale(1070)};function vh(t){return function(n,e){var r=sc(n),i=sc(e),o=t(r*i);return[o*i*vc(n),o*vc(e)]}}function gh(t){return function(n,e){var r=yc(n*n+e*e),i=t(r),o=vc(i),u=sc(i);return[fc(n*o,r*u),mc(r&&e*o/r)]}}var yh=vh(function(t){return yc(2/(1+t))});yh.invert=gh(function(t){return 2*mc(t/2)});var bh=function(){return ch(yh).scale(124.75).clipAngle(179.999)},_h=vh(function(t){return(t=_c(t))&&t/vc(t)});_h.invert=gh(function(t){return t});var mh=function(){return ch(_h).scale(79.4188).clipAngle(179.999)};function xh(t,n){return[t,dc(bc((ec+n)/2))]}xh.invert=function(t,n){return[t,2*cc(hc(n))-ec]};var wh=function(){return Mh(xh).scale(961/ic)};function Mh(t){var n,e,r,i=ch(t),o=i.center,u=i.scale,a=i.translate,c=i.clipExtent,f=null;function s(){var o=nc*u(),a=i(ts(i.rotate()).invert([0,0]));return c(null==f?[[a[0]-o,a[1]-o],[a[0]+o,a[1]+o]]:t===xh?[[Math.max(a[0]-o,f),n],[Math.min(a[0]+o,e),r]]:[[f,Math.max(a[1]-o,n)],[e,Math.min(a[1]+o,r)]])}return i.scale=function(t){return arguments.length?(u(t),s()):u()},i.translate=function(t){return arguments.length?(a(t),s()):a()},i.center=function(t){return arguments.length?(o(t),s()):o()},i.clipExtent=function(t){return arguments.length?(null==t?f=n=e=r=null:(f=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==f?null:[[f,n],[e,r]]},s()}function Ah(t){return bc((ec+t)/2)}function Sh(t,n){var e=sc(t),r=t===n?vc(t):dc(e/sc(n))/dc(Ah(n)/Ah(t)),i=e*pc(Ah(t),r)/r;if(!r)return xh;function o(t,n){i>0?n<-ec+tc&&(n=-ec+tc):n>ec-tc&&(n=ec-tc);var e=i/pc(Ah(n),r);return[e*vc(r*t),i-e*sc(r*t)]}return o.invert=function(t,n){var e=i-n,o=gc(r)*yc(t*t+e*e);return[fc(t,ac(e))/r*gc(e),2*cc(pc(i/o,1/r))-ec]},o}var Eh=function(){return sh(Sh).scale(109.5).parallels([30,30])};function Th(t,n){return[t,n]}Th.invert=Th;var Nh=function(){return ch(Th).scale(152.63)};function kh(t,n){var e=sc(t),r=t===n?vc(t):(e-sc(n))/(n-t),i=e/r+t;if(ac(r)<tc)return Th;function o(t,n){var e=i-n,o=r*t;return[e*vc(o),i-e*sc(o)]}return o.invert=function(t,n){var e=i-n;return[fc(t,ac(e))/r*gc(e),i-gc(r)*yc(t*t+e*e)]},o}var Ch=function(){return sh(kh).scale(131.154).center([0,13.9389])};function Ph(t,n){var e=sc(n),r=sc(t)*e;return[e*vc(t)/r,vc(n)/r]}Ph.invert=gh(cc);var zh=function(){return ch(Ph).scale(144.049).clipAngle(60)};function Rh(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?Js:Zl({point:function(i,o){this.stream.point(i*t+e,o*n+r)}})}var Oh=function(){var t,n,e,r,i,o,u=1,a=0,c=0,f=1,s=1,l=Js,h=null,d=Js;function p(){return r=i=null,o}return o={stream:function(t){return r&&i===t?r:r=l(d(i=t))},postclip:function(r){return arguments.length?(d=r,h=t=n=e=null,p()):d},clipExtent:function(r){return arguments.length?(d=null==r?(h=t=n=e=null,Js):_s(h=+r[0][0],t=+r[0][1],n=+r[1][0],e=+r[1][1]),p()):null==h?null:[[h,t],[n,e]]},scale:function(t){return arguments.length?(l=Rh((u=+t)*f,u*s,a,c),p()):u},translate:function(t){return arguments.length?(l=Rh(u*f,u*s,a=+t[0],c=+t[1]),p()):[a,c]},reflectX:function(t){return arguments.length?(l=Rh(u*(f=t?-1:1),u*s,a,c),p()):f<0},reflectY:function(t){return arguments.length?(l=Rh(u*f,u*(s=t?-1:1),a,c),p()):s<0},fitExtent:function(t,n){return Kl(o,t,n)},fitSize:function(t,n){return th(o,t,n)},fitWidth:function(t,n){return nh(o,t,n)},fitHeight:function(t,n){return eh(o,t,n)}}};function Dh(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}Dh.invert=function(t,n){var e,r=n,i=25;do{var o=r*r,u=o*o;r-=e=(r*(1.007226+o*(.015085+u*(.028874*o-.044475-.005916*u)))-n)/(1.007226+o*(.045255+u*(.259866*o-.311325-.005916*11*u)))}while(ac(e)>tc&&--i>0);return[t/(.8707+(o=r*r)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),r]};var Uh=function(){return ch(Dh).scale(175.295)};function Lh(t,n){return[sc(n)*vc(t),vc(n)]}Lh.invert=gh(mc);var qh=function(){return ch(Lh).scale(249.5).clipAngle(90+tc)};function Ih(t,n){var e=sc(n),r=1+sc(t)*e;return[e*vc(t)/r,vc(n)/r]}Ih.invert=gh(function(t){return 2*cc(t)});var jh=function(){return ch(Ih).scale(250).clipAngle(142)};function Bh(t,n){return[dc(bc((ec+n)/2)),-t]}Bh.invert=function(t,n){return[-n,2*cc(hc(t))-ec]};var Fh=function(){var t=Mh(Bh),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)};function Yh(t,n){return t.parent===n.parent?1:2}function Hh(t,n){return t+n.x}function Xh(t,n){return Math.max(t,n.y)}var $h=function(){var t=Yh,n=1,e=1,r=!1;function i(i){var o,u=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Hh,0)/t.length}(e),n.y=function(t){return 1+t.reduce(Xh,0)}(e)):(n.x=o?u+=t(n,o):0,n.y=0,o=n)});var a=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),f=a.x-t(a,c)/2,s=c.x+t(c,a)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-f)/(s-f)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i};function Gh(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function Vh(t,n){var e,r,i,o,u,a=new Qh(t),c=+t.value&&(a.value=t.value),f=[a];for(null==n&&(n=Wh);e=f.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(u=i.length))for(e.children=new Array(u),o=u-1;o>=0;--o)f.push(r=e.children[o]=new Qh(i[o])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(Jh)}function Wh(t){return t.children}function Zh(t){t.data=t.data.data}function Jh(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function Qh(t){this.data=t,this.depth=this.height=0,this.parent=null}Qh.prototype=Vh.prototype={constructor:Qh,count:function(){return this.eachAfter(Gh)},each:function(t){var n,e,r,i,o=this,u=[o];do{for(n=u.reverse(),u=[];o=n.pop();)if(t(o),e=o.children)for(r=0,i=e.length;r<i;++r)u.push(e[r])}while(u.length);return this},eachAfter:function(t){for(var n,e,r,i=this,o=[i],u=[];i=o.pop();)if(u.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e]);for(;i=u.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return Vh(this).eachBefore(Zh)}};var Kh=Array.prototype.slice;var td=function(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}(Kh.call(t))).length,o=[];r<i;)n=t[r],e&&rd(e,n)?++r:(e=od(o=nd(o,n)),r=0);return e};function nd(t,n){var e,r;if(id(n,t))return[n];for(e=0;e<t.length;++e)if(ed(n,t[e])&&id(ud(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(ed(ud(t[e],t[r]),n)&&ed(ud(t[e],n),t[r])&&ed(ud(t[r],n),t[e])&&id(ad(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function ed(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function rd(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function id(t,n){for(var e=0;e<n.length;++e)if(!rd(t,n[e]))return!1;return!0}function od(t){switch(t.length){case 1:return function(t){return{x:t.x,y:t.y,r:t.r}}(t[0]);case 2:return ud(t[0],t[1]);case 3:return ad(t[0],t[1],t[2])}}function ud(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,u=n.y,a=n.r,c=o-e,f=u-r,s=a-i,l=Math.sqrt(c*c+f*f);return{x:(e+o+c/l*s)/2,y:(r+u+f/l*s)/2,r:(l+i+a)/2}}function ad(t,n,e){var r=t.x,i=t.y,o=t.r,u=n.x,a=n.y,c=n.r,f=e.x,s=e.y,l=e.r,h=r-u,d=r-f,p=i-a,v=i-s,g=c-o,y=l-o,b=r*r+i*i-o*o,_=b-u*u-a*a+c*c,m=b-f*f-s*s+l*l,x=d*p-h*v,w=(p*m-v*_)/(2*x)-r,M=(v*g-p*y)/x,A=(d*_-h*m)/(2*x)-i,S=(h*y-d*g)/x,E=M*M+S*S-1,T=2*(o+w*M+A*S),N=w*w+A*A-o*o,k=-(E?(T+Math.sqrt(T*T-4*E*N))/(2*E):N/T);return{x:r+w+M*k,y:i+A+S*k,r:k}}function cd(t,n,e){var r,i,o,u,a=t.x-n.x,c=t.y-n.y,f=a*a+c*c;f?(i=n.r+e.r,i*=i,u=t.r+e.r,i>(u*=u)?(r=(f+u-i)/(2*f),o=Math.sqrt(Math.max(0,u/f-r*r)),e.x=t.x-r*a-o*c,e.y=t.y-r*c+o*a):(r=(f+i-u)/(2*f),o=Math.sqrt(Math.max(0,i/f-r*r)),e.x=n.x+r*a-o*c,e.y=n.y+r*c+o*a)):(e.x=n.x+e.r,e.y=n.y)}function fd(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function sd(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,o=(n.y*e.r+e.y*n.r)/r;return i*i+o*o}function ld(t){this._=t,this.next=null,this.previous=null}function hd(t){if(!(i=t.length))return 0;var n,e,r,i,o,u,a,c,f,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;cd(e,n,r=t[2]),n=new ld(n),e=new ld(e),r=new ld(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){cd(n._,e._,r=t[a]),r=new ld(r),c=e.next,f=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(fd(c._,r._)){e=c,n.next=e,e.previous=n,--a;continue t}s+=c._.r,c=c.next}else{if(fd(f._,r._)){(n=f).next=e,e.previous=n,--a;continue t}l+=f._.r,f=f.previous}}while(c!==f.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,o=sd(n);(r=r.next)!==e;)(u=sd(r))<o&&(n=r,o=u);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=td(n),a=0;a<i;++a)(n=t[a]).x-=r.x,n.y-=r.y;return r.r}var dd=function(t){return hd(t),t};function pd(t){if("function"!=typeof t)throw new Error;return t}function vd(){return 0}var gd=function(t){return function(){return t}};function yd(t){return Math.sqrt(t.value)}var bd=function(){var t=null,n=1,e=1,r=vd;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(_d(t)).eachAfter(md(r,.5)).eachBefore(xd(1)):i.eachBefore(_d(yd)).eachAfter(md(vd,1)).eachAfter(md(r,i.r/Math.min(n,e))).eachBefore(xd(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=function(t){return null==t?null:pd(t)}(n),i):t},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:gd(+t),i):r},i};function _d(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function md(t,n){return function(e){if(r=e.children){var r,i,o,u=r.length,a=t(e)*n||0;if(a)for(i=0;i<u;++i)r[i].r+=a;if(o=hd(r),a)for(i=0;i<u;++i)r[i].r-=a;e.r=o+a}}}function xd(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}var wd=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},Md=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,f=t.value&&(r-n)/t.value;++a<c;)(o=u[a]).y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*f},Ad=function(){var t=1,n=1,e=0,r=!1;function i(i){var o=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/o,i.eachBefore(function(t,n){return function(r){r.children&&Md(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,o=r.y0,u=r.x1-e,a=r.y1-e;u<i&&(i=u=(i+u)/2),a<o&&(o=a=(o+a)/2),r.x0=i,r.y0=o,r.x1=u,r.y1=a}}(n,o)),r&&i.eachBefore(wd),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},Sd="$",Ed={depth:-1},Td={};function Nd(t){return t.id}function kd(t){return t.parentId}var Cd=function(){var t=Nd,n=kd;function e(e){var r,i,o,u,a,c,f,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],a=l[i]=new Qh(r),null!=(c=t(r,i,e))&&(c+="")&&(h[f=Sd+(a.id=c)]=f in h?Td:a);for(i=0;i<s;++i)if(a=l[i],null!=(c=n(e[i],i,e))&&(c+="")){if(!(u=h[Sd+c]))throw new Error("missing: "+c);if(u===Td)throw new Error("ambiguous: "+c);u.children?u.children.push(a):u.children=[a],a.parent=u}else{if(o)throw new Error("multiple roots");o=a}if(!o)throw new Error("no root");if(o.parent=Ed,o.eachBefore(function(t){t.depth=t.parent.depth+1,--s}).eachBefore(Jh),o.parent=null,s>0)throw new Error("cycle");return o}return e.id=function(n){return arguments.length?(t=pd(n),e):t},e.parentId=function(t){return arguments.length?(n=pd(t),e):n},e};function Pd(t,n){return t.parent===n.parent?1:2}function zd(t){var n=t.children;return n?n[0]:t.t}function Rd(t){var n=t.children;return n?n[n.length-1]:t.t}function Od(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function Dd(t,n,e){return t.a.parent===n.parent?t.a:e}function Ud(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}Ud.prototype=Object.create(Qh.prototype);var Ld=function(){var t=Pd,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,o,u=new Ud(t,0),a=[u];n=a.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)a.push(e=n.children[i]=new Ud(r[i],i)),e.parent=n;return(u.parent=new Ud(null,0)).children=[u],u}(i);if(c.eachAfter(o),c.parent.m=-c.z,c.eachBefore(u),r)i.eachBefore(a);else{var f=i,s=i,l=i;i.eachBefore(function(t){t.x<f.x&&(f=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)});var h=f===s?1:t(f,s)/2,d=h-f.x,p=n/(s.x+h+d),v=e/(l.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*v})}return i}function o(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)(n=i[o]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var o=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-o):n.z=o}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,o=n,u=n,a=e,c=o.parent.children[0],f=o.m,s=u.m,l=a.m,h=c.m;a=Rd(a),o=zd(o),a&&o;)c=zd(c),(u=Rd(u)).a=n,(i=a.z+l-o.z-f+t(a._,o._))>0&&(Od(Dd(a,n,r),n,i),f+=i,s+=i),l+=a.m,f+=o.m,h+=c.m,s+=u.m;a&&!Rd(u)&&(u.t=a,u.m+=l-s),o&&!zd(c)&&(c.t=o,c.m+=f-h,r=n)}return r}(n,i,n.parent.A||r[0])}function u(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function a(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},qd=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,f=t.value&&(i-e)/t.value;++a<c;)(o=u[a]).x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*f},Id=(1+Math.sqrt(5))/2;function jd(t,n,e,r,i,o){for(var u,a,c,f,s,l,h,d,p,v,g,y=[],b=n.children,_=0,m=0,x=b.length,w=n.value;_<x;){c=i-e,f=o-r;do{s=b[m++].value}while(!s&&m<x);for(l=h=s,g=s*s*(v=Math.max(f/c,c/f)/(w*t)),p=Math.max(h/g,g/l);m<x;++m){if(s+=a=b[m].value,a<l&&(l=a),a>h&&(h=a),g=s*s*v,(d=Math.max(h/g,g/l))>p){s-=a;break}p=d}y.push(u={value:s,dice:c<f,children:b.slice(_,m)}),u.dice?Md(u,e,r,i,w?r+=f*s/w:o):qd(u,e,r,w?e+=c*s/w:i,o),w-=s,_=m}return y}var Bd=function t(n){function e(t,e,r,i,o){jd(n,t,e,r,i,o)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Id),Fd=function(){var t=Bd,n=!1,e=1,r=1,i=[0],o=vd,u=vd,a=vd,c=vd,f=vd;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(wd),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=o(n)/2,r+=f(n)-e,s+=u(n)-e,l-=a(n)-e,h-=c(n)-e,l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=pd(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(o="function"==typeof t?t:gd(+t),s):o},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(u="function"==typeof t?t:gd(+t),s):u},s.paddingRight=function(t){return arguments.length?(a="function"==typeof t?t:gd(+t),s):a},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:gd(+t),s):c},s.paddingLeft=function(t){return arguments.length?(f="function"==typeof t?t:gd(+t),s):f},s},Yd=function(t,n,e,r,i){var o,u,a=t.children,c=a.length,f=new Array(c+1);for(f[0]=u=o=0;o<c;++o)f[o+1]=u+=a[o].value;!function t(n,e,r,i,o,u,c){if(n>=e-1){var s=a[n];return s.x0=i,s.y0=o,s.x1=u,void(s.y1=c)}var l=f[n],h=r/2+l,d=n+1,p=e-1;for(;d<p;){var v=d+p>>>1;f[v]<h?d=v+1:p=v}h-f[d-1]<f[d]-h&&n+1<d&&--d;var g=f[d]-l,y=r-g;if(u-i>c-o){var b=(i*y+u*g)/r;t(n,d,g,i,o,b,c),t(d,e,y,b,o,u,c)}else{var _=(o*y+c*g)/r;t(n,d,g,i,o,u,_),t(d,e,y,i,_,u,c)}}(0,c,t.value,n,e,r,i)},Hd=function(t,n,e,r,i){(1&t.depth?qd:Md)(t,n,e,r,i)},Xd=function t(n){function e(t,e,r,i,o){if((u=t._squarify)&&u.ratio===n)for(var u,a,c,f,s,l=-1,h=u.length,d=t.value;++l<h;){for(c=(a=u[l]).children,f=a.value=0,s=c.length;f<s;++f)a.value+=c[f].value;a.dice?Md(a,e,r,i,r+=(o-r)*a.value/d):qd(a,e,r,e+=(i-e)*a.value/d,o),d-=a.value}else t._squarify=u=jd(n,t,e,r,i,o),u.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Id),$d=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},Gd=function(t){for(var n,e,r=-1,i=t.length,o=0,u=0,a=t[i-1],c=0;++r<i;)n=a,a=t[r],c+=e=n[0]*a[1]-a[0]*n[1],o+=(n[0]+a[0])*e,u+=(n[1]+a[1])*e;return[o/(c*=3),u/c]},Vd=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])};function Wd(t,n){return t[0]-n[0]||t[1]-n[1]}function Zd(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&Vd(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var Jd=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(Wd),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=Zd(r),u=Zd(i),a=u[0]===o[0],c=u[u.length-1]===o[o.length-1],f=[];for(n=o.length-1;n>=0;--n)f.push(t[r[o[n]][2]]);for(n=+a;n<u.length-c;++n)f.push(t[r[u[n]][2]]);return f},Qd=function(t,n){for(var e,r,i=t.length,o=t[i-1],u=n[0],a=n[1],c=o[0],f=o[1],s=!1,l=0;l<i;++l)e=(o=t[l])[0],(r=o[1])>a!=f>a&&u<(c-e)*(a-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},Kd=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],u=o[0],a=o[1],c=0;++r<i;)n=u,e=a,n-=u=(o=t[r])[0],e-=a=o[1],c+=Math.sqrt(n*n+e*e);return c},tp=function(){return Math.random()},np=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(tp),ep=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var o;if(null!=r)o=r,r=null;else do{r=2*n()-1,o=2*n()-1,i=r*r+o*o}while(!i||i>1);return t+e*o*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(tp),rp=function t(n){function e(){var t=ep.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(tp),ip=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(tp),op=function t(n){function e(t){var e=ip.source(n)(t);return function(){return e()/t}}return e.source=t,e}(tp),up=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(tp),ap=Array.prototype,cp=ap.map,fp=ap.slice,sp={name:"implicit"};function lp(t){var n=Zo(),e=[],r=sp;function i(i){var o=i+"",u=n.get(o);if(!u){if(r!==sp)return r;n.set(o,u=e.push(i))}return t[(u-1)%t.length]}return t=null==t?[]:fp.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=Zo();for(var r,o,u=-1,a=t.length;++u<a;)n.has(o=(r=t[u])+"")||n.set(o,e.push(r));return i},i.range=function(n){return arguments.length?(t=fp.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return lp().domain(e).range(t).unknown(r)},i}function hp(){var t,n,e=lp().unknown(void 0),r=e.domain,i=e.range,o=[0,1],u=!1,a=0,c=0,f=.5;function s(){var e=r().length,s=o[1]<o[0],l=o[s-0],h=o[1-s];t=(h-l)/Math.max(1,e-a+2*c),u&&(t=Math.floor(t)),l+=(h-l-t*(e-a))*f,n=t*(1-a),u&&(l=Math.round(l),n=Math.round(n));var d=w(e).map(function(n){return l+t*n});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(o=[+t[0],+t[1]],s()):o.slice()},e.rangeRound=function(t){return o=[+t[0],+t[1]],u=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(u=!!t,s()):u},e.padding=function(t){return arguments.length?(a=c=Math.max(0,Math.min(1,t)),s()):a},e.paddingInner=function(t){return arguments.length?(a=Math.max(0,Math.min(1,t)),s()):a},e.paddingOuter=function(t){return arguments.length?(c=Math.max(0,Math.min(1,t)),s()):c},e.align=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.copy=function(){return hp().domain(r()).range(o).round(u).paddingInner(a).paddingOuter(c).align(f)},s()}function dp(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(hp().paddingInner(1))}var pp=function(t){return function(){return t}},vp=function(t){return+t},gp=[0,1];function yp(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:pp(n)}function bp(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function _p(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)o[a]=e(t[a],t[a+1]),u[a]=r(n[a],n[a+1]);return function(n){var e=c(t,n,1,i)-1;return u[e](o[e](n))}}function mp(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function xp(t,n){var e,r,i,o=gp,u=gp,a=Je,c=!1;function f(){return e=Math.min(o.length,u.length)>2?_p:bp,r=i=null,s}function s(n){return(r||(r=e(o,u,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return s.invert=function(t){return(i||(i=e(u,o,yp,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(o=cp.call(t,vp),f()):o.slice()},s.range=function(t){return arguments.length?(u=fp.call(t),f()):u.slice()},s.rangeRound=function(t){return u=fp.call(t),a=Qe,f()},s.clamp=function(t){return arguments.length?(c=!!t,f()):c},s.interpolate=function(t){return arguments.length?(a=t,f()):a},f()}var wp=function(t,n,e){var r,i=t[0],o=t[t.length-1],u=N(i,o,null==n?10:n);switch((e=Oa(null==e?",f":e)).type){case"s":var a=Math.max(Math.abs(i),Math.abs(o));return null!=e.precision||isNaN(r=Va(u,a))||(e.precision=r),Ia(e,a);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=Wa(u,Math.max(Math.abs(i),Math.abs(o))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=Ga(u))||(e.precision=r-2*("%"===e.type))}return qa(e)};function Mp(t){var n=t.domain;return t.ticks=function(t){var e=n();return E(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return wp(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),o=0,u=i.length-1,a=i[o],c=i[u];return c<a&&(r=a,a=c,c=r,r=o,o=u,u=r),(r=T(a,c,e))>0?r=T(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=T(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[o]=Math.floor(a/r)*r,i[u]=Math.ceil(c/r)*r,n(i)):r<0&&(i[o]=Math.ceil(a*r)/r,i[u]=Math.floor(c*r)/r,n(i)),t},t}function Ap(){var t=xp(yp,Fe);return t.copy=function(){return mp(t,Ap())},Mp(t)}function Sp(){var t=[0,1];function n(t){return+t}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=cp.call(e,vp),n):t.slice()},n.copy=function(){return Sp().domain(t)},Mp(n)}var Ep=function(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t};function Tp(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:pp(n)}function Np(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function kp(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Cp(t){return 10===t?kp:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function Pp(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function zp(t){return function(n){return-t(-n)}}function Rp(){var t=xp(Tp,Np).domain([1,10]),n=t.domain,e=10,r=Pp(10),i=Cp(10);function o(){return r=Pp(e),i=Cp(e),n()[0]<0&&(r=zp(r),i=zp(i)),t}return t.base=function(t){return arguments.length?(e=+t,o()):e},t.domain=function(t){return arguments.length?(n(t),o()):n()},t.ticks=function(t){var o,u=n(),a=u[0],c=u[u.length-1];(o=c<a)&&(h=a,a=c,c=h);var f,s,l,h=r(a),d=r(c),p=null==t?10:+t,v=[];if(!(e%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,f=i(h);s<e;++s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else for(;h<d;++h)for(s=e-1,f=i(h);s>=1;--s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else v=E(h,d,Math.min(d-h,p)).map(i);return o?v.reverse():v},t.tickFormat=function(n,o){if(null==o&&(o=10===e?".0e":","),"function"!=typeof o&&(o=qa(o)),n===1/0)return o;null==n&&(n=10);var u=Math.max(1,e*n/t.ticks().length);return function(t){var n=t/i(Math.round(r(t)));return n*e<e-.5&&(n*=e),n<=u?o(t):""}},t.nice=function(){return n(Ep(n(),{floor:function(t){return i(Math.floor(r(t)))},ceil:function(t){return i(Math.ceil(r(t)))}}))},t.copy=function(){return mp(t,Rp().base(e))},t}function Op(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function Dp(){var t=1,n=xp(function(n,e){return(e=Op(e,t)-(n=Op(n,t)))?function(r){return(Op(r,t)-n)/e}:pp(e)},function(n,e){return e=Op(e,t)-(n=Op(n,t)),function(r){return Op(n+e*r,1/t)}}),e=n.domain;return n.exponent=function(n){return arguments.length?(t=+n,e(e())):t},n.copy=function(){return mp(n,Dp().exponent(t))},Mp(n)}function Up(){return Dp().exponent(.5)}function Lp(){var t=[],n=[],e=[];function i(){var r=0,i=Math.max(1,n.length);for(e=new Array(i-1);++r<i;)e[r-1]=P(t,r/i);return o}function o(t){if(!isNaN(t=+t))return n[c(e,t)]}return o.invertExtent=function(r){var i=n.indexOf(r);return i<0?[NaN,NaN]:[i>0?e[i-1]:t[0],i<e.length?e[i]:t[t.length-1]]},o.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var e,o=0,u=n.length;o<u;++o)null==(e=n[o])||isNaN(e=+e)||t.push(e);return t.sort(r),i()},o.range=function(t){return arguments.length?(n=fp.call(t),i()):n.slice()},o.quantiles=function(){return e.slice()},o.copy=function(){return Lp().domain(t).range(n)},o}function qp(){var t=0,n=1,e=1,r=[.5],i=[0,1];function o(t){if(t<=t)return i[c(r,t,0,e)]}function u(){var i=-1;for(r=new Array(e);++i<e;)r[i]=((i+1)*n-(i-e)*t)/(e+1);return o}return o.domain=function(e){return arguments.length?(t=+e[0],n=+e[1],u()):[t,n]},o.range=function(t){return arguments.length?(e=(i=fp.call(t)).length-1,u()):i.slice()},o.invertExtent=function(o){var u=i.indexOf(o);return u<0?[NaN,NaN]:u<1?[t,r[0]]:u>=e?[r[e-1],n]:[r[u-1],r[u]]},o.copy=function(){return qp().domain([t,n]).range(i)},Mp(o)}function Ip(){var t=[.5],n=[0,1],e=1;function r(r){if(r<=r)return n[c(t,r,0,e)]}return r.domain=function(i){return arguments.length?(t=fp.call(i),e=Math.min(t.length,n.length-1),r):t.slice()},r.range=function(i){return arguments.length?(n=fp.call(i),e=Math.min(t.length,n.length-1),r):n.slice()},r.invertExtent=function(e){var r=n.indexOf(e);return[t[r-1],t[r]]},r.copy=function(){return Ip().domain(t).range(n)},r}var jp=new Date,Bp=new Date;function Fp(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u,a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=function(e){return Fp(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return jp.setTime(+n),Bp.setTime(+r),t(jp),t(Bp),Math.floor(e(jp,Bp))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Yp=Fp(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});Yp.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Fp(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):Yp:null};var Hp=Yp,Xp=Yp.range,$p=6e4,Gp=6048e5,Vp=Fp(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),Wp=Vp,Zp=Vp.range,Jp=Fp(function(t){t.setTime(Math.floor(t/$p)*$p)},function(t,n){t.setTime(+t+n*$p)},function(t,n){return(n-t)/$p},function(t){return t.getMinutes()}),Qp=Jp,Kp=Jp.range,tv=Fp(function(t){var n=t.getTimezoneOffset()*$p%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),nv=tv,ev=tv.range,rv=Fp(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*$p)/864e5},function(t){return t.getDate()-1}),iv=rv,ov=rv.range;function uv(t){return Fp(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*$p)/Gp})}var av=uv(0),cv=uv(1),fv=uv(2),sv=uv(3),lv=uv(4),hv=uv(5),dv=uv(6),pv=av.range,vv=cv.range,gv=fv.range,yv=sv.range,bv=lv.range,_v=hv.range,mv=dv.range,xv=Fp(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),wv=xv,Mv=xv.range,Av=Fp(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Av.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Fp(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Sv=Av,Ev=Av.range,Tv=Fp(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*$p)},function(t,n){return(n-t)/$p},function(t){return t.getUTCMinutes()}),Nv=Tv,kv=Tv.range,Cv=Fp(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),Pv=Cv,zv=Cv.range,Rv=Fp(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),Ov=Rv,Dv=Rv.range;function Uv(t){return Fp(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/Gp})}var Lv=Uv(0),qv=Uv(1),Iv=Uv(2),jv=Uv(3),Bv=Uv(4),Fv=Uv(5),Yv=Uv(6),Hv=Lv.range,Xv=qv.range,$v=Iv.range,Gv=jv.range,Vv=Bv.range,Wv=Fv.range,Zv=Yv.range,Jv=Fp(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),Qv=Jv,Kv=Jv.range,tg=Fp(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});tg.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Fp(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var ng=tg,eg=tg.range;function rg(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function ig(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function og(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function ug(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,c=t.shortMonths,f=bg(i),s=_g(i),l=bg(o),h=_g(o),d=bg(u),p=_g(u),v=bg(a),g=_g(a),y=bg(c),b=_g(c),_={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:Ig,e:Ig,f:Hg,H:jg,I:Bg,j:Fg,L:Yg,m:Xg,M:$g,p:function(t){return i[+(t.getHours()>=12)]},Q:my,s:xy,S:Gg,u:Vg,U:Wg,V:Zg,w:Jg,W:Qg,x:null,X:null,y:Kg,Y:ty,Z:ny,"%":_y},m={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:ey,e:ey,f:ay,H:ry,I:iy,j:oy,L:uy,m:cy,M:fy,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:my,s:xy,S:sy,u:ly,U:hy,V:dy,w:py,W:vy,x:null,X:null,y:gy,Y:yy,Z:by,"%":_y},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=b[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:kg,e:kg,f:Dg,H:Pg,I:Pg,j:Cg,L:Og,m:Ng,M:zg,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Lg,s:qg,S:Rg,u:xg,U:wg,V:Mg,w:mg,W:Ag,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:Eg,Y:Sg,Z:Tg,"%":Ug};function w(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++a<f;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=hg[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function M(t,n){return function(e){var r,i,o=og(1900);if(A(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("p"in o&&(o.H=o.H%12+12*o.p),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(r=(i=(r=ig(og(o.y))).getUTCDay())>4||0===i?qv.ceil(r):qv(r),r=Ov.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(r=(i=(r=n(og(o.y))).getDay())>4||0===i?cv.ceil(r):cv(r),r=iv.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?ig(og(o.y)).getUTCDay():n(og(o.y)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,ig(o)):n(o)}}function A(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=x[i in hg?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return _.x=w(e,_),_.X=w(r,_),_.c=w(n,_),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",_);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",rg);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t,ig);return n.toString=function(){return t},n}}}var ag,cg,fg,sg,lg,hg={"-":"",_:" ",0:"0"},dg=/^\s*\d+/,pg=/^%/,vg=/[\\^$*+?|[\]().{}]/g;function gg(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function yg(t){return t.replace(vg,"\\$&")}function bg(t){return new RegExp("^(?:"+t.map(yg).join("|")+")","i")}function _g(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function mg(t,n,e){var r=dg.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function xg(t,n,e){var r=dg.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function wg(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function Mg(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Ag(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Sg(t,n,e){var r=dg.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Eg(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Tg(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Ng(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function kg(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Cg(t,n,e){var r=dg.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Pg(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function zg(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Rg(t,n,e){var r=dg.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Og(t,n,e){var r=dg.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Dg(t,n,e){var r=dg.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Ug(t,n,e){var r=pg.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Lg(t,n,e){var r=dg.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function qg(t,n,e){var r=dg.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function Ig(t,n){return gg(t.getDate(),n,2)}function jg(t,n){return gg(t.getHours(),n,2)}function Bg(t,n){return gg(t.getHours()%12||12,n,2)}function Fg(t,n){return gg(1+iv.count(Sv(t),t),n,3)}function Yg(t,n){return gg(t.getMilliseconds(),n,3)}function Hg(t,n){return Yg(t,n)+"000"}function Xg(t,n){return gg(t.getMonth()+1,n,2)}function $g(t,n){return gg(t.getMinutes(),n,2)}function Gg(t,n){return gg(t.getSeconds(),n,2)}function Vg(t){var n=t.getDay();return 0===n?7:n}function Wg(t,n){return gg(av.count(Sv(t),t),n,2)}function Zg(t,n){var e=t.getDay();return t=e>=4||0===e?lv(t):lv.ceil(t),gg(lv.count(Sv(t),t)+(4===Sv(t).getDay()),n,2)}function Jg(t){return t.getDay()}function Qg(t,n){return gg(cv.count(Sv(t),t),n,2)}function Kg(t,n){return gg(t.getFullYear()%100,n,2)}function ty(t,n){return gg(t.getFullYear()%1e4,n,4)}function ny(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+gg(n/60|0,"0",2)+gg(n%60,"0",2)}function ey(t,n){return gg(t.getUTCDate(),n,2)}function ry(t,n){return gg(t.getUTCHours(),n,2)}function iy(t,n){return gg(t.getUTCHours()%12||12,n,2)}function oy(t,n){return gg(1+Ov.count(ng(t),t),n,3)}function uy(t,n){return gg(t.getUTCMilliseconds(),n,3)}function ay(t,n){return uy(t,n)+"000"}function cy(t,n){return gg(t.getUTCMonth()+1,n,2)}function fy(t,n){return gg(t.getUTCMinutes(),n,2)}function sy(t,n){return gg(t.getUTCSeconds(),n,2)}function ly(t){var n=t.getUTCDay();return 0===n?7:n}function hy(t,n){return gg(Lv.count(ng(t),t),n,2)}function dy(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Bv(t):Bv.ceil(t),gg(Bv.count(ng(t),t)+(4===ng(t).getUTCDay()),n,2)}function py(t){return t.getUTCDay()}function vy(t,n){return gg(qv.count(ng(t),t),n,2)}function gy(t,n){return gg(t.getUTCFullYear()%100,n,2)}function yy(t,n){return gg(t.getUTCFullYear()%1e4,n,4)}function by(){return"+0000"}function _y(){return"%"}function my(t){return+t}function xy(t){return Math.floor(+t/1e3)}function wy(t){return ag=ug(t),cg=ag.format,fg=ag.parse,sg=ag.utcFormat,lg=ag.utcParse,ag}wy({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var My=Date.prototype.toISOString?function(t){return t.toISOString()}:sg("%Y-%m-%dT%H:%M:%S.%LZ");var Ay=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:lg("%Y-%m-%dT%H:%M:%S.%LZ"),Sy=1e3,Ey=60*Sy,Ty=60*Ey,Ny=24*Ty,ky=7*Ny,Cy=30*Ny,Py=365*Ny;function zy(t){return new Date(t)}function Ry(t){return t instanceof Date?+t:+new Date(+t)}function Oy(t,n,e,r,o,u,a,c,f){var s=xp(yp,Fe),l=s.invert,h=s.domain,d=f(".%L"),p=f(":%S"),v=f("%I:%M"),g=f("%I %p"),y=f("%a %d"),b=f("%b %d"),_=f("%B"),m=f("%Y"),x=[[a,1,Sy],[a,5,5*Sy],[a,15,15*Sy],[a,30,30*Sy],[u,1,Ey],[u,5,5*Ey],[u,15,15*Ey],[u,30,30*Ey],[o,1,Ty],[o,3,3*Ty],[o,6,6*Ty],[o,12,12*Ty],[r,1,Ny],[r,2,2*Ny],[e,1,ky],[n,1,Cy],[n,3,3*Cy],[t,1,Py]];function w(i){return(a(i)<i?d:u(i)<i?p:o(i)<i?v:r(i)<i?g:n(i)<i?e(i)<i?y:b:t(i)<i?_:m)(i)}function M(n,e,r,o){if(null==n&&(n=10),"number"==typeof n){var u=Math.abs(r-e)/n,a=i(function(t){return t[2]}).right(x,u);a===x.length?(o=N(e/Py,r/Py,n),n=t):a?(o=(a=x[u/x[a-1][2]<x[a][2]/u?a-1:a])[1],n=a[0]):(o=Math.max(N(e,r,n),1),n=c)}return null==o?n:n.every(o)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(cp.call(t,Ry)):h().map(zy)},s.ticks=function(t,n){var e,r=h(),i=r[0],o=r[r.length-1],u=o<i;return u&&(e=i,i=o,o=e),e=(e=M(t,i,o,n))?e.range(i,o+1):[],u?e.reverse():e},s.tickFormat=function(t,n){return null==n?w:f(n)},s.nice=function(t,n){var e=h();return(t=M(t,e[0],e[e.length-1],n))?h(Ep(e,t)):s},s.copy=function(){return mp(s,Oy(t,n,e,r,o,u,a,c,f))},s}var Dy=function(){return Oy(Sv,wv,av,iv,nv,Qp,Wp,Hp,cg).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},Uy=function(){return Oy(ng,Qv,Lv,Ov,Pv,Nv,Wp,Hp,sg).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])};function Ly(t){var n=0,e=1,r=1,i=!1;function o(e){var o=(e-n)*r;return t(i?Math.max(0,Math.min(1,o)):o)}return o.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],r=n===e?0:1/(e-n),o):[n,e]},o.clamp=function(t){return arguments.length?(i=!!t,o):i},o.interpolator=function(n){return arguments.length?(t=n,o):t},o.copy=function(){return Ly(t).domain([n,e]).clamp(i)},Mp(o)}function qy(t){var n=0,e=.5,r=1,i=1,o=1,u=!1;function a(n){var r=.5+((n=+n)-e)*(n<e?i:o);return t(u?Math.max(0,Math.min(1,r)):r)}return a.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],r=+t[2],i=n===e?0:.5/(e-n),o=e===r?0:.5/(r-e),a):[n,e,r]},a.clamp=function(t){return arguments.length?(u=!!t,a):u},a.interpolator=function(n){return arguments.length?(t=n,a):t},a.copy=function(){return qy(t).domain([n,e,r]).clamp(u)},Mp(a)}var Iy=function(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e},jy=Iy("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),By=Iy("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Fy=Iy("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Yy=Iy("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),Hy=Iy("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Xy=Iy("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),$y=Iy("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),Gy=Iy("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Vy=Iy("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),Wy=function(t){return qe(t[t.length-1])},Zy=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(Iy),Jy=Wy(Zy),Qy=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(Iy),Ky=Wy(Qy),tb=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(Iy),nb=Wy(tb),eb=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(Iy),rb=Wy(eb),ib=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(Iy),ob=Wy(ib),ub=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(Iy),ab=Wy(ub),cb=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(Iy),fb=Wy(cb),sb=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(Iy),lb=Wy(sb),hb=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(Iy),db=Wy(hb),pb=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(Iy),vb=Wy(pb),gb=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(Iy),yb=Wy(gb),bb=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(Iy),_b=Wy(bb),mb=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(Iy),xb=Wy(mb),wb=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(Iy),Mb=Wy(wb),Ab=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(Iy),Sb=Wy(Ab),Eb=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(Iy),Tb=Wy(Eb),Nb=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(Iy),kb=Wy(Nb),Cb=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(Iy),Pb=Wy(Cb),zb=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(Iy),Rb=Wy(zb),Ob=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(Iy),Db=Wy(Ob),Ub=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(Iy),Lb=Wy(Ub),qb=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Iy),Ib=Wy(qb),jb=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(Iy),Bb=Wy(jb),Fb=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(Iy),Yb=Wy(Fb),Hb=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(Iy),Xb=Wy(Hb),$b=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(Iy),Gb=Wy($b),Vb=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(Iy),Wb=Wy(Vb),Zb=yr(Ee(300,.5,0),Ee(-240,.5,1)),Jb=yr(Ee(-100,.75,.35),Ee(80,1.5,.8)),Qb=yr(Ee(260,.75,.35),Ee(80,1.5,.8)),Kb=Ee(),t_=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return Kb.h=360*t-100,Kb.s=1.5-1.5*n,Kb.l=.8-.9*n,Kb+""},n_=$n(),e_=Math.PI/3,r_=2*Math.PI/3,i_=function(t){var n;return t=(.5-t)*Math.PI,n_.r=255*(n=Math.sin(t))*n,n_.g=255*(n=Math.sin(t+e_))*n,n_.b=255*(n=Math.sin(t+r_))*n,n_+""};function o_(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var u_=o_(Iy("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),a_=o_(Iy("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),c_=o_(Iy("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),f_=o_(Iy("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),s_=function(t){return function(){return t}},l_=Math.abs,h_=Math.atan2,d_=Math.cos,p_=Math.max,v_=Math.min,g_=Math.sin,y_=Math.sqrt,b_=1e-12,__=Math.PI,m_=__/2,x_=2*__;function w_(t){return t>=1?m_:t<=-1?-m_:Math.asin(t)}function M_(t){return t.innerRadius}function A_(t){return t.outerRadius}function S_(t){return t.startAngle}function E_(t){return t.endAngle}function T_(t){return t&&t.padAngle}function N_(t,n,e,r,i,o,u){var a=t-e,c=n-r,f=(u?o:-o)/y_(a*a+c*c),s=f*c,l=-f*a,h=t+s,d=n+l,p=e+s,v=r+l,g=(h+p)/2,y=(d+v)/2,b=p-h,_=v-d,m=b*b+_*_,x=i-o,w=h*v-p*d,M=(_<0?-1:1)*y_(p_(0,x*x*m-w*w)),A=(w*_-b*M)/m,S=(-w*b-_*M)/m,E=(w*_+b*M)/m,T=(-w*b+_*M)/m,N=A-g,k=S-y,C=E-g,P=T-y;return N*N+k*k>C*C+P*P&&(A=E,S=T),{cx:A,cy:S,x01:-s,y01:-l,x11:A*(i/x-1),y11:S*(i/x-1)}}var k_=function(){var t=M_,n=A_,e=s_(0),r=null,i=S_,o=E_,u=T_,a=null;function c(){var c,f,s=+t.apply(this,arguments),l=+n.apply(this,arguments),h=i.apply(this,arguments)-m_,d=o.apply(this,arguments)-m_,p=l_(d-h),v=d>h;if(a||(a=c=Bo()),l<s&&(f=l,l=s,s=f),l>b_)if(p>x_-b_)a.moveTo(l*d_(h),l*g_(h)),a.arc(0,0,l,h,d,!v),s>b_&&(a.moveTo(s*d_(d),s*g_(d)),a.arc(0,0,s,d,h,v));else{var g,y,b=h,_=d,m=h,x=d,w=p,M=p,A=u.apply(this,arguments)/2,S=A>b_&&(r?+r.apply(this,arguments):y_(s*s+l*l)),E=v_(l_(l-s)/2,+e.apply(this,arguments)),T=E,N=E;if(S>b_){var k=w_(S/s*g_(A)),C=w_(S/l*g_(A));(w-=2*k)>b_?(m+=k*=v?1:-1,x-=k):(w=0,m=x=(h+d)/2),(M-=2*C)>b_?(b+=C*=v?1:-1,_-=C):(M=0,b=_=(h+d)/2)}var P=l*d_(b),z=l*g_(b),R=s*d_(x),O=s*g_(x);if(E>b_){var D=l*d_(_),U=l*g_(_),L=s*d_(m),q=s*g_(m);if(p<__){var I=w>b_?function(t,n,e,r,i,o,u,a){var c=e-t,f=r-n,s=u-i,l=a-o,h=(s*(n-o)-l*(t-i))/(l*c-s*f);return[t+h*c,n+h*f]}(P,z,L,q,D,U,R,O):[R,O],j=P-I[0],B=z-I[1],F=D-I[0],Y=U-I[1],H=1/g_(function(t){return t>1?0:t<-1?__:Math.acos(t)}((j*F+B*Y)/(y_(j*j+B*B)*y_(F*F+Y*Y)))/2),X=y_(I[0]*I[0]+I[1]*I[1]);T=v_(E,(s-X)/(H-1)),N=v_(E,(l-X)/(H+1))}}M>b_?N>b_?(g=N_(L,q,P,z,l,N,v),y=N_(D,U,R,O,l,N,v),a.moveTo(g.cx+g.x01,g.cy+g.y01),N<E?a.arc(g.cx,g.cy,N,h_(g.y01,g.x01),h_(y.y01,y.x01),!v):(a.arc(g.cx,g.cy,N,h_(g.y01,g.x01),h_(g.y11,g.x11),!v),a.arc(0,0,l,h_(g.cy+g.y11,g.cx+g.x11),h_(y.cy+y.y11,y.cx+y.x11),!v),a.arc(y.cx,y.cy,N,h_(y.y11,y.x11),h_(y.y01,y.x01),!v))):(a.moveTo(P,z),a.arc(0,0,l,b,_,!v)):a.moveTo(P,z),s>b_&&w>b_?T>b_?(g=N_(R,O,D,U,s,-T,v),y=N_(P,z,L,q,s,-T,v),a.lineTo(g.cx+g.x01,g.cy+g.y01),T<E?a.arc(g.cx,g.cy,T,h_(g.y01,g.x01),h_(y.y01,y.x01),!v):(a.arc(g.cx,g.cy,T,h_(g.y01,g.x01),h_(g.y11,g.x11),!v),a.arc(0,0,s,h_(g.cy+g.y11,g.cx+g.x11),h_(y.cy+y.y11,y.cx+y.x11),v),a.arc(y.cx,y.cy,T,h_(y.y11,y.x11),h_(y.y01,y.x01),!v))):a.arc(0,0,s,x,m,v):a.lineTo(R,O)}else a.moveTo(0,0);if(a.closePath(),c)return a=null,c+""||null}return c.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-__/2;return[d_(r)*e,g_(r)*e]},c.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:s_(+n),c):t},c.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:s_(+t),c):n},c.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:s_(+t),c):e},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:s_(+t),c):r},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:s_(+t),c):i},c.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:s_(+t),c):o},c.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:s_(+t),c):u},c.context=function(t){return arguments.length?(a=null==t?null:t,c):a},c};function C_(t){this._context=t}C_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var P_=function(t){return new C_(t)};function z_(t){return t[0]}function R_(t){return t[1]}var O_=function(){var t=z_,n=R_,e=s_(!0),r=null,i=P_,o=null;function u(u){var a,c,f,s=u.length,l=!1;for(null==r&&(o=i(f=Bo())),a=0;a<=s;++a)!(a<s&&e(c=u[a],a,u))===l&&((l=!l)?o.lineStart():o.lineEnd()),l&&o.point(+t(c,a,u),+n(c,a,u));if(f)return o=null,f+""||null}return u.x=function(n){return arguments.length?(t="function"==typeof n?n:s_(+n),u):t},u.y=function(t){return arguments.length?(n="function"==typeof t?t:s_(+t),u):n},u.defined=function(t){return arguments.length?(e="function"==typeof t?t:s_(!!t),u):e},u.curve=function(t){return arguments.length?(i=t,null!=r&&(o=i(r)),u):i},u.context=function(t){return arguments.length?(null==t?r=o=null:o=i(r=t),u):r},u},D_=function(){var t=z_,n=null,e=s_(0),r=R_,i=s_(!0),o=null,u=P_,a=null;function c(c){var f,s,l,h,d,p=c.length,v=!1,g=new Array(p),y=new Array(p);for(null==o&&(a=u(d=Bo())),f=0;f<=p;++f){if(!(f<p&&i(h=c[f],f,c))===v)if(v=!v)s=f,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),l=f-1;l>=s;--l)a.point(g[l],y[l]);a.lineEnd(),a.areaEnd()}v&&(g[f]=+t(h,f,c),y[f]=+e(h,f,c),a.point(n?+n(h,f,c):g[f],r?+r(h,f,c):y[f]))}if(d)return a=null,d+""||null}function f(){return O_().defined(i).curve(u).context(o)}return c.x=function(e){return arguments.length?(t="function"==typeof e?e:s_(+e),n=null,c):t},c.x0=function(n){return arguments.length?(t="function"==typeof n?n:s_(+n),c):t},c.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:s_(+t),c):n},c.y=function(t){return arguments.length?(e="function"==typeof t?t:s_(+t),r=null,c):e},c.y0=function(t){return arguments.length?(e="function"==typeof t?t:s_(+t),c):e},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:s_(+t),c):r},c.lineX0=c.lineY0=function(){return f().x(t).y(e)},c.lineY1=function(){return f().x(t).y(r)},c.lineX1=function(){return f().x(n).y(e)},c.defined=function(t){return arguments.length?(i="function"==typeof t?t:s_(!!t),c):i},c.curve=function(t){return arguments.length?(u=t,null!=o&&(a=u(o)),c):u},c.context=function(t){return arguments.length?(null==t?o=a=null:a=u(o=t),c):o},c},U_=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},L_=function(t){return t},q_=function(){var t=L_,n=U_,e=null,r=s_(0),i=s_(x_),o=s_(0);function u(u){var a,c,f,s,l,h=u.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(x_,Math.max(-x_,i.apply(this,arguments)-g)),b=Math.min(Math.abs(y)/h,o.apply(this,arguments)),_=b*(y<0?-1:1);for(a=0;a<h;++a)(l=v[p[a]=a]=+t(u[a],a,u))>0&&(d+=l);for(null!=n?p.sort(function(t,e){return n(v[t],v[e])}):null!=e&&p.sort(function(t,n){return e(u[t],u[n])}),a=0,f=d?(y-h*_)/d:0;a<h;++a,g=s)c=p[a],s=g+((l=v[c])>0?l*f:0)+_,v[c]={data:u[c],index:a,value:l,startAngle:g,endAngle:s,padAngle:b};return v}return u.value=function(n){return arguments.length?(t="function"==typeof n?n:s_(+n),u):t},u.sortValues=function(t){return arguments.length?(n=t,e=null,u):n},u.sort=function(t){return arguments.length?(e=t,n=null,u):e},u.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:s_(+t),u):r},u.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:s_(+t),u):i},u.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:s_(+t),u):o},u},I_=B_(P_);function j_(t){this._curve=t}function B_(t){function n(n){return new j_(t(n))}return n._curve=t,n}function F_(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(B_(t)):n()._curve},t}j_.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var Y_=function(){return F_(O_().curve(I_))},H_=function(){var t=D_().curve(I_),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return F_(e())},delete t.lineX0,t.lineEndAngle=function(){return F_(r())},delete t.lineX1,t.lineInnerRadius=function(){return F_(i())},delete t.lineY0,t.lineOuterRadius=function(){return F_(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(B_(t)):n()._curve},t},X_=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},$_=Array.prototype.slice;function G_(t){return t.source}function V_(t){return t.target}function W_(t){var n=G_,e=V_,r=z_,i=R_,o=null;function u(){var u,a=$_.call(arguments),c=n.apply(this,a),f=e.apply(this,a);if(o||(o=u=Bo()),t(o,+r.apply(this,(a[0]=c,a)),+i.apply(this,a),+r.apply(this,(a[0]=f,a)),+i.apply(this,a)),u)return o=null,u+""||null}return u.source=function(t){return arguments.length?(n=t,u):n},u.target=function(t){return arguments.length?(e=t,u):e},u.x=function(t){return arguments.length?(r="function"==typeof t?t:s_(+t),u):r},u.y=function(t){return arguments.length?(i="function"==typeof t?t:s_(+t),u):i},u.context=function(t){return arguments.length?(o=null==t?null:t,u):o},u}function Z_(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function J_(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function Q_(t,n,e,r,i){var o=X_(n,e),u=X_(n,e=(e+i)/2),a=X_(r,e),c=X_(r,i);t.moveTo(o[0],o[1]),t.bezierCurveTo(u[0],u[1],a[0],a[1],c[0],c[1])}function K_(){return W_(Z_)}function tm(){return W_(J_)}function nm(){var t=W_(Q_);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var em={draw:function(t,n){var e=Math.sqrt(n/__);t.moveTo(e,0),t.arc(0,0,e,0,x_)}},rm={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},im=Math.sqrt(1/3),om=2*im,um={draw:function(t,n){var e=Math.sqrt(n/om),r=e*im;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},am=Math.sin(__/10)/Math.sin(7*__/10),cm=Math.sin(x_/10)*am,fm=-Math.cos(x_/10)*am,sm={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=cm*e,i=fm*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var u=x_*o/5,a=Math.cos(u),c=Math.sin(u);t.lineTo(c*e,-a*e),t.lineTo(a*r-c*i,c*r+a*i)}t.closePath()}},lm={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},hm=Math.sqrt(3),dm={draw:function(t,n){var e=-Math.sqrt(n/(3*hm));t.moveTo(0,2*e),t.lineTo(-hm*e,-e),t.lineTo(hm*e,-e),t.closePath()}},pm=Math.sqrt(3)/2,vm=1/Math.sqrt(12),gm=3*(vm/2+1),ym={draw:function(t,n){var e=Math.sqrt(n/gm),r=e/2,i=e*vm,o=r,u=e*vm+e,a=-o,c=u;t.moveTo(r,i),t.lineTo(o,u),t.lineTo(a,c),t.lineTo(-.5*r-pm*i,pm*r+-.5*i),t.lineTo(-.5*o-pm*u,pm*o+-.5*u),t.lineTo(-.5*a-pm*c,pm*a+-.5*c),t.lineTo(-.5*r+pm*i,-.5*i-pm*r),t.lineTo(-.5*o+pm*u,-.5*u-pm*o),t.lineTo(-.5*a+pm*c,-.5*c-pm*a),t.closePath()}},bm=[em,rm,um,lm,sm,dm,ym],_m=function(){var t=s_(em),n=s_(64),e=null;function r(){var r;if(e||(e=r=Bo()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:s_(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:s_(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},mm=function(){};function xm(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function wm(t){this._context=t}wm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:xm(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:xm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Mm=function(t){return new wm(t)};function Am(t){this._context=t}Am.prototype={areaStart:mm,areaEnd:mm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:xm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Sm=function(t){return new Am(t)};function Em(t){this._context=t}Em.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:xm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Tm=function(t){return new Em(t)};function Nm(t,n){this._basis=new wm(t),this._beta=n}Nm.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],u=t[e]-i,a=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*u),this._beta*n[c]+(1-this._beta)*(o+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var km=function t(n){function e(t){return 1===n?new wm(t):new Nm(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function Cm(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function Pm(t,n){this._context=t,this._k=(1-n)/6}Pm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Cm(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:Cm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var zm=function t(n){function e(t){return new Pm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Rm(t,n){this._context=t,this._k=(1-n)/6}Rm.prototype={areaStart:mm,areaEnd:mm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Cm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Om=function t(n){function e(t){return new Rm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Dm(t,n){this._context=t,this._k=(1-n)/6}Dm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Cm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Um=function t(n){function e(t){return new Dm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Lm(t,n,e){var r=t._x1,i=t._y1,o=t._x2,u=t._y2;if(t._l01_a>b_){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>b_){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*f+t._x1*t._l23_2a-n*t._l12_2a)/s,u=(u*f+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,o,u,t._x2,t._y2)}function qm(t,n){this._context=t,this._alpha=n}qm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Lm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Im=function t(n){function e(t){return n?new qm(t,n):new Pm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function jm(t,n){this._context=t,this._alpha=n}jm.prototype={areaStart:mm,areaEnd:mm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Lm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Bm=function t(n){function e(t){return n?new jm(t,n):new Rm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Fm(t,n){this._context=t,this._alpha=n}Fm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Lm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Ym=function t(n){function e(t){return n?new Fm(t,n):new Dm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Hm(t){this._context=t}Hm.prototype={areaStart:mm,areaEnd:mm,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var Xm=function(t){return new Hm(t)};function $m(t){return t<0?-1:1}function Gm(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),u=(e-t._y1)/(i||r<0&&-0),a=(o*i+u*r)/(r+i);return($m(o)+$m(u))*Math.min(Math.abs(o),Math.abs(u),.5*Math.abs(a))||0}function Vm(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function Wm(t,n,e){var r=t._x0,i=t._y0,o=t._x1,u=t._y1,a=(o-r)/3;t._context.bezierCurveTo(r+a,i+a*n,o-a,u-a*e,o,u)}function Zm(t){this._context=t}function Jm(t){this._context=new Qm(t)}function Qm(t){this._context=t}function Km(t){return new Zm(t)}function tx(t){return new Jm(t)}function nx(t){this._context=t}function ex(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),u=new Array(r);for(i[0]=0,o[0]=2,u[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,u[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,u[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,u[n]-=e*u[n-1];for(i[r-1]=u[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(u[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}Zm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Wm(this,this._t0,Vm(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,Wm(this,Vm(this,e=Gm(this,t,n)),e);break;default:Wm(this,this._t0,e=Gm(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(Jm.prototype=Object.create(Zm.prototype)).point=function(t,n){Zm.prototype.point.call(this,n,t)},Qm.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},nx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=ex(t),i=ex(n),o=0,u=1;u<e;++o,++u)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[u],n[u]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var rx=function(t){return new nx(t)};function ix(t,n){this._context=t,this._t=n}ix.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var ox=function(t){return new ix(t,.5)};function ux(t){return new ix(t,0)}function ax(t){return new ix(t,1)}var cx=function(t,n){if((i=t.length)>1)for(var e,r,i,o=1,u=t[n[0]],a=u.length;o<i;++o)for(r=u,u=t[n[o]],e=0;e<a;++e)u[e][1]+=u[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},fx=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e};function sx(t,n){return t[n]}var lx=function(){var t=s_([]),n=fx,e=cx,r=sx;function i(i){var o,u,a=t.apply(this,arguments),c=i.length,f=a.length,s=new Array(f);for(o=0;o<f;++o){for(var l,h=a[o],d=s[o]=new Array(c),p=0;p<c;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(o=0,u=n(s);o<f;++o)s[u[o]].index=o;return e(s,u),s}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:s_($_.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:s_(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?fx:"function"==typeof t?t:s_($_.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?cx:t,i):e},i},hx=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,u=t[0].length;o<u;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}cx(t,n)}},dx=function(t,n){if((a=t.length)>1)for(var e,r,i,o,u,a,c=0,f=t[n[0]].length;c<f;++c)for(o=u=0,e=0;e<a;++e)(i=(r=t[n[e]][c])[1]-r[0])>=0?(r[0]=o,r[1]=o+=i):i<0?(r[1]=u,r[0]=u+=i):r[0]=o},px=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var u=0,a=0;u<e;++u)a+=t[u][r][1]||0;i[r][1]+=i[r][0]=-a/2}cx(t,n)}},vx=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,u=1;u<r;++u){for(var a=0,c=0,f=0;a<i;++a){for(var s=t[n[a]],l=s[u][1]||0,h=(l-(s[u-1][1]||0))/2,d=0;d<a;++d){var p=t[n[d]];h+=(p[u][1]||0)-(p[u-1][1]||0)}c+=l,f+=h*l}e[u-1][1]+=e[u-1][0]=o,c&&(o-=f/c)}e[u-1][1]+=e[u-1][0]=o,cx(t,n)}},gx=function(t){var n=t.map(yx);return fx(t).sort(function(t,e){return n[t]-n[e]})};function yx(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}var bx=function(t){return gx(t).reverse()},_x=function(t){var n,e,r=t.length,i=t.map(yx),o=fx(t).sort(function(t,n){return i[n]-i[t]}),u=0,a=0,c=[],f=[];for(n=0;n<r;++n)e=o[n],u<a?(u+=i[e],c.push(e)):(a+=i[e],f.push(e));return f.reverse().concat(c)},mx=function(t){return fx(t).reverse()},xx=function(t){return function(){return t}};function wx(t){return t[0]}function Mx(t){return t[1]}function Ax(){this._=null}function Sx(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Ex(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function Tx(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function Nx(t){for(;t.L;)t=t.L;return t}Ax.prototype={constructor:Ax,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=Nx(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(Ex(this,e),e=(t=e).U),e.C=!1,r.C=!0,Tx(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(Tx(this,e),e=(t=e).U),e.C=!1,r.C=!0,Ex(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,o=t.L,u=t.R;if(e=o?u?Nx(u):o:u,i?i.L===t?i.L=e:i.R=e:this._=e,o&&u?(r=e.C,e.C=t.C,e.L=o,o.U=e,e!==u?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=u,u.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,Ex(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,Tx(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,Ex(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,Tx(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Ex(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,Tx(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var kx=Ax;function Cx(t,n,e,r){var i=[null,null],o=Qx.push(i)-1;return i.left=t,i.right=n,e&&zx(i,t,n,e),r&&zx(i,n,t,r),Zx[t.index].halfedges.push(o),Zx[n.index].halfedges.push(o),i}function Px(t,n,e){var r=[n,e];return r.left=t,r}function zx(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function Rx(t,n,e,r,i){var o,u=t[0],a=t[1],c=u[0],f=u[1],s=0,l=1,h=a[0]-c,d=a[1]-f;if(o=n-c,h||!(o>0)){if(o/=h,h<0){if(o<s)return;o<l&&(l=o)}else if(h>0){if(o>l)return;o>s&&(s=o)}if(o=r-c,h||!(o<0)){if(o/=h,h<0){if(o>l)return;o>s&&(s=o)}else if(h>0){if(o<s)return;o<l&&(l=o)}if(o=e-f,d||!(o>0)){if(o/=d,d<0){if(o<s)return;o<l&&(l=o)}else if(d>0){if(o>l)return;o>s&&(s=o)}if(o=i-f,d||!(o<0)){if(o/=d,d<0){if(o>l)return;o>s&&(s=o)}else if(d>0){if(o<s)return;o<l&&(l=o)}return!(s>0||l<1)||(s>0&&(t[0]=[c+s*h,f+s*d]),l<1&&(t[1]=[c+l*h,f+l*d]),!0)}}}}}function Ox(t,n,e,r,i){var o=t[1];if(o)return!0;var u,a,c=t[0],f=t.left,s=t.right,l=f[0],h=f[1],d=s[0],p=s[1],v=(l+d)/2,g=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[v,e];o=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];o=[v,e]}}else if(a=g-(u=(l-d)/(p-h))*v,u<-1||u>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(e-a)/u,e];o=[(i-a)/u,i]}else{if(c){if(c[1]<e)return}else c=[(i-a)/u,i];o=[(e-a)/u,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[n,u*n+a];o=[r,u*r+a]}else{if(c){if(c[0]<n)return}else c=[r,u*r+a];o=[n,u*n+a]}return t[0]=c,t[1]=o,!0}function Dx(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Ux(t,n){return n[+(n.left!==t.site)]}function Lx(t,n){return n[+(n.left===t.site)]}var qx,Ix=[];function jx(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,o=e.site;if(r!==o){var u=i[0],a=i[1],c=r[0]-u,f=r[1]-a,s=o[0]-u,l=o[1]-a,h=2*(c*l-f*s);if(!(h>=-tw)){var d=c*c+f*f,p=s*s+l*l,v=(l*d-f*p)/h,g=(c*p-s*d)/h,y=Ix.pop()||new function(){Sx(this),this.x=this.y=this.arc=this.site=this.cy=null};y.arc=t,y.site=i,y.x=v+u,y.y=(y.cy=g+a)+Math.sqrt(v*v+g*g),t.circle=y;for(var b=null,_=Jx._;_;)if(y.y<_.y||y.y===_.y&&y.x<=_.x){if(!_.L){b=_.P;break}_=_.L}else{if(!_.R){b=_;break}_=_.R}Jx.insert(b,y),b||(qx=y)}}}}function Bx(t){var n=t.circle;n&&(n.P||(qx=n.N),Jx.remove(n),Ix.push(n),Sx(n),t.circle=null)}var Fx=[];function Yx(t){var n=Fx.pop()||new function(){Sx(this),this.edge=this.site=this.circle=null};return n.site=t,n}function Hx(t){Bx(t),Wx.remove(t),Fx.push(t),Sx(t)}function Xx(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],o=t.P,u=t.N,a=[t];Hx(t);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<Kx&&Math.abs(r-c.circle.cy)<Kx;)o=c.P,a.unshift(c),Hx(c),c=o;a.unshift(c),Bx(c);for(var f=u;f.circle&&Math.abs(e-f.circle.x)<Kx&&Math.abs(r-f.circle.cy)<Kx;)u=f.N,a.push(f),Hx(f),f=u;a.push(f),Bx(f);var s,l=a.length;for(s=1;s<l;++s)f=a[s],c=a[s-1],zx(f.edge,c.site,f.site,i);c=a[0],(f=a[l-1]).edge=Cx(c.site,f.site,null,i),jx(c),jx(f)}function $x(t){for(var n,e,r,i,o=t[0],u=t[1],a=Wx._;a;)if((r=Gx(a,u)-o)>Kx)a=a.L;else{if(!((i=o-Vx(a,u))>Kx)){r>-Kx?(n=a.P,e=a):i>-Kx?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}!function(t){Zx[t.index]={site:t,halfedges:[]}}(t);var c=Yx(t);if(Wx.insert(n,c),n||e){if(n===e)return Bx(n),e=Yx(n.site),Wx.insert(c,e),c.edge=e.edge=Cx(n.site,c.site),jx(n),void jx(e);if(e){Bx(n),Bx(e);var f=n.site,s=f[0],l=f[1],h=t[0]-s,d=t[1]-l,p=e.site,v=p[0]-s,g=p[1]-l,y=2*(h*g-d*v),b=h*h+d*d,_=v*v+g*g,m=[(g*b-d*_)/y+s,(h*_-v*b)/y+l];zx(e.edge,f,p,m),c.edge=Cx(f,t,null,m),e.edge=Cx(t,p,null,m),jx(n),jx(e)}else c.edge=Cx(n.site,c.site)}}function Gx(t,n){var e=t.site,r=e[0],i=e[1],o=i-n;if(!o)return r;var u=t.P;if(!u)return-1/0;var a=(e=u.site)[0],c=e[1],f=c-n;if(!f)return a;var s=a-r,l=1/o-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-c+f/2+i-o/2)))/l+r:(r+a)/2}function Vx(t,n){var e=t.N;if(e)return Gx(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var Wx,Zx,Jx,Qx,Kx=1e-6,tw=1e-12;function nw(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function ew(t,n){return n[1]-t[1]||n[0]-t[0]}function rw(t,n){var e,r,i,o=t.sort(ew).pop();for(Qx=[],Zx=new Array(t.length),Wx=new kx,Jx=new kx;;)if(i=qx,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===e&&o[1]===r||($x(o),e=o[0],r=o[1]),o=t.pop();else{if(!i)break;Xx(i.arc)}if(function(){for(var t,n,e,r,i=0,o=Zx.length;i<o;++i)if((t=Zx[i])&&(r=(n=t.halfedges).length)){var u=new Array(r),a=new Array(r);for(e=0;e<r;++e)u[e]=e,a[e]=Dx(t,Qx[n[e]]);for(u.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[u[e]];for(e=0;e<r;++e)n[e]=a[e]}}(),n){var u=+n[0][0],a=+n[0][1],c=+n[1][0],f=+n[1][1];!function(t,n,e,r){for(var i,o=Qx.length;o--;)Ox(i=Qx[o],t,n,e,r)&&Rx(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>Kx||Math.abs(i[0][1]-i[1][1])>Kx)||delete Qx[o]}(u,a,c,f),function(t,n,e,r){var i,o,u,a,c,f,s,l,h,d,p,v,g=Zx.length,y=!0;for(i=0;i<g;++i)if(o=Zx[i]){for(u=o.site,a=(c=o.halfedges).length;a--;)Qx[c[a]]||c.splice(a,1);for(a=0,f=c.length;a<f;)p=(d=Lx(o,Qx[c[a]]))[0],v=d[1],l=(s=Ux(o,Qx[c[++a%f]]))[0],h=s[1],(Math.abs(p-l)>Kx||Math.abs(v-h)>Kx)&&(c.splice(a,0,Qx.push(Px(u,d,Math.abs(p-t)<Kx&&r-v>Kx?[t,Math.abs(l-t)<Kx?h:r]:Math.abs(v-r)<Kx&&e-p>Kx?[Math.abs(h-r)<Kx?l:e,r]:Math.abs(p-e)<Kx&&v-n>Kx?[e,Math.abs(l-e)<Kx?h:n]:Math.abs(v-n)<Kx&&p-t>Kx?[Math.abs(h-n)<Kx?l:t,n]:null))-1),++f);f&&(y=!1)}if(y){var b,_,m,x=1/0;for(i=0,y=null;i<g;++i)(o=Zx[i])&&(m=(b=(u=o.site)[0]-t)*b+(_=u[1]-n)*_)<x&&(x=m,y=o);if(y){var w=[t,n],M=[t,r],A=[e,r],S=[e,n];y.halfedges.push(Qx.push(Px(u=y.site,w,M))-1,Qx.push(Px(u,M,A))-1,Qx.push(Px(u,A,S))-1,Qx.push(Px(u,S,w))-1)}}for(i=0;i<g;++i)(o=Zx[i])&&(o.halfedges.length||delete Zx[i])}(u,a,c,f)}this.edges=Qx,this.cells=Zx,Wx=Jx=Qx=Zx=null}rw.prototype={constructor:rw,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return Ux(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(o=(i=e.halfedges).length)for(var i,o,u,a=e.site,c=-1,f=n[i[o-1]],s=f.left===a?f.right:f.left;++c<o;)u=s,s=(f=n[i[c]]).left===a?f.right:f.left,u&&s&&r<u.index&&r<s.index&&nw(a,u,s)<0&&t.push([a.data,u.data,s.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,o=this,u=o._found||0,a=o.cells.length;!(i=o.cells[u]);)if(++u>=a)return null;var c=t-i.site[0],f=n-i.site[1],s=c*c+f*f;do{i=o.cells[r=u],u=null,i.halfedges.forEach(function(e){var r=o.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var c=t-a[0],f=n-a[1],l=c*c+f*f;l<s&&(s=l,u=a.index)}})}while(null!==u);return o._found=r,null==e||s<=e*e?i.site:null}};var iw=function(){var t=wx,n=Mx,e=null;function r(r){return new rw(r.map(function(e,i){var o=[Math.round(t(e,i,r)/Kx)*Kx,Math.round(n(e,i,r)/Kx)*Kx];return o.index=i,o.data=e,o}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:xx(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:xx(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},ow=function(t){return function(){return t}};function uw(t,n,e){this.k=t,this.x=n,this.y=e}uw.prototype={constructor:uw,scale:function(t){return 1===t?this:new uw(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new uw(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var aw=new uw(1,0,0);function cw(t){return t.__zoom||aw}function fw(){Gt.stopImmediatePropagation()}cw.prototype=uw.prototype;var sw=function(){Gt.preventDefault(),Gt.stopImmediatePropagation()};function lw(){return!Gt.button}function hw(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function dw(){return this.__zoom||aw}function pw(){return-Gt.deltaY*(Gt.deltaMode?120:1)/500}function vw(){return"ontouchstart"in this}function gw(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],o=t.invertY(n[0][1])-e[0][1],u=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),u>o?(o+u)/2:Math.min(0,o)||Math.max(0,u))}var yw=function(){var t,n,e=lw,r=hw,i=gw,o=pw,u=vw,a=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],f=250,s=ar,l=[],h=ht("start","zoom","end"),d=500,p=150,v=0;function g(t){t.property("__zoom",dw).on("wheel.zoom",M).on("mousedown.zoom",A).on("dblclick.zoom",S).filter(u).on("touchstart.zoom",E).on("touchmove.zoom",T).on("touchend.zoom touchcancel.zoom",N).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function y(t,n){return(n=Math.max(a[0],Math.min(a[1],n)))===t.k?t:new uw(n,t.x,t.y)}function b(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new uw(t.k,r,i)}function _(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function m(t,n,e){t.on("start.zoom",function(){x(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){x(this,arguments).end()}).tween("zoom",function(){var t=arguments,i=x(this,t),o=r.apply(this,t),u=e||_(o),a=Math.max(o[1][0]-o[0][0],o[1][1]-o[0][1]),c=this.__zoom,f="function"==typeof n?n.apply(this,t):n,l=s(c.invert(u).concat(a/c.k),f.invert(u).concat(a/f.k));return function(t){if(1===t)t=f;else{var n=l(t),e=a/n[2];t=new uw(e,u[0]-n[0]*e,u[1]-n[1]*e)}i.zoom(null,t)}})}function x(t,n){for(var e,r=0,i=l.length;r<i;++r)if((e=l[r]).that===t)return e;return new w(t,n)}function w(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=r.apply(t,n)}function M(){if(e.apply(this,arguments)){var t=x(this,arguments),n=this.__zoom,r=Math.max(a[0],Math.min(a[1],n.k*Math.pow(2,o.apply(this,arguments)))),u=hn(this);if(t.wheel)t.mouse[0][0]===u[0]&&t.mouse[0][1]===u[1]||(t.mouse[1]=n.invert(t.mouse[0]=u)),clearTimeout(t.wheel);else{if(n.k===r)return;t.mouse=[u,n.invert(u)],ti(this),t.start()}sw(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},p),t.zoom("mouse",i(b(y(n,r),t.mouse[0],t.mouse[1]),t.extent,c))}}function A(){if(!n&&e.apply(this,arguments)){var t=x(this,arguments),r=on(Gt.view).on("mousemove.zoom",function(){if(sw(),!t.moved){var n=Gt.clientX-u,e=Gt.clientY-a;t.moved=n*n+e*e>v}t.zoom("mouse",i(b(t.that.__zoom,t.mouse[0]=hn(t.that),t.mouse[1]),t.extent,c))},!0).on("mouseup.zoom",function(){r.on("mousemove.zoom mouseup.zoom",null),_n(Gt.view,t.moved),sw(),t.end()},!0),o=hn(this),u=Gt.clientX,a=Gt.clientY;bn(Gt.view),fw(),t.mouse=[o,this.__zoom.invert(o)],ti(this),t.start()}}function S(){if(e.apply(this,arguments)){var t=this.__zoom,n=hn(this),o=t.invert(n),u=t.k*(Gt.shiftKey?.5:2),a=i(b(y(t,u),n,o),r.apply(this,arguments),c);sw(),f>0?on(this).transition().duration(f).call(m,a,n):on(this).call(g.transform,a)}}function E(){if(e.apply(this,arguments)){var n,r,i,o,u=x(this,arguments),a=Gt.changedTouches,c=a.length;for(fw(),r=0;r<c;++r)i=a[r],o=[o=pn(this,a,i.identifier),this.__zoom.invert(o),i.identifier],u.touch0?u.touch1||(u.touch1=o):(u.touch0=o,n=!0);if(t&&(t=clearTimeout(t),!u.touch1))return u.end(),void((o=on(this).on("dblclick.zoom"))&&o.apply(this,arguments));n&&(t=setTimeout(function(){t=null},d),ti(this),u.start())}}function T(){var n,e,r,o,u=x(this,arguments),a=Gt.changedTouches,f=a.length;for(sw(),t&&(t=clearTimeout(t)),n=0;n<f;++n)e=a[n],r=pn(this,a,e.identifier),u.touch0&&u.touch0[2]===e.identifier?u.touch0[0]=r:u.touch1&&u.touch1[2]===e.identifier&&(u.touch1[0]=r);if(e=u.that.__zoom,u.touch1){var s=u.touch0[0],l=u.touch0[1],h=u.touch1[0],d=u.touch1[1],p=(p=h[0]-s[0])*p+(p=h[1]-s[1])*p,v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v;e=y(e,Math.sqrt(p/v)),r=[(s[0]+h[0])/2,(s[1]+h[1])/2],o=[(l[0]+d[0])/2,(l[1]+d[1])/2]}else{if(!u.touch0)return;r=u.touch0[0],o=u.touch0[1]}u.zoom("touch",i(b(e,r,o),u.extent,c))}function N(){var t,e,r=x(this,arguments),i=Gt.changedTouches,o=i.length;for(fw(),n&&clearTimeout(n),n=setTimeout(function(){n=null},d),t=0;t<o;++t)e=i[t],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return g.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",dw),t!==e?m(t,n):e.interrupt().each(function(){x(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},g.scaleBy=function(t,n){g.scaleTo(t,function(){return this.__zoom.k*("function"==typeof n?n.apply(this,arguments):n)})},g.scaleTo=function(t,n){g.transform(t,function(){var t=r.apply(this,arguments),e=this.__zoom,o=_(t),u=e.invert(o),a="function"==typeof n?n.apply(this,arguments):n;return i(b(y(e,a),o,u),t,c)})},g.translateBy=function(t,n,e){g.transform(t,function(){return i(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),r.apply(this,arguments),c)})},g.translateTo=function(t,n,e){g.transform(t,function(){var t=r.apply(this,arguments),o=this.__zoom,u=_(t);return i(aw.translate(u[0],u[1]).scale(o.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,c)})},w.prototype={start:function(){return 1==++this.active&&(this.index=l.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(l.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){Qt(new function(t,n,e){this.target=t,this.type=n,this.transform=e}(g,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},g.wheelDelta=function(t){return arguments.length?(o="function"==typeof t?t:ow(+t),g):o},g.filter=function(t){return arguments.length?(e="function"==typeof t?t:ow(!!t),g):e},g.touchable=function(t){return arguments.length?(u="function"==typeof t?t:ow(!!t),g):u},g.extent=function(t){return arguments.length?(r="function"==typeof t?t:ow([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),g):r},g.scaleExtent=function(t){return arguments.length?(a[0]=+t[0],a[1]=+t[1],g):[a[0],a[1]]},g.translateExtent=function(t){return arguments.length?(c[0][0]=+t[0][0],c[1][0]=+t[1][0],c[0][1]=+t[0][1],c[1][1]=+t[1][1],g):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},g.constrain=function(t){return arguments.length?(i=t,g):i},g.duration=function(t){return arguments.length?(f=+t,g):f},g.interpolate=function(t){return arguments.length?(s=t,g):s},g.on=function(){var t=h.on.apply(h,arguments);return t===h?g:t},g.clickDistance=function(t){return arguments.length?(v=(t=+t)*t,g):Math.sqrt(v)},g};e.d(n,"version",function(){return"5.5.0"}),e.d(n,"bisect",function(){return c}),e.d(n,"bisectRight",function(){return u}),e.d(n,"bisectLeft",function(){return a}),e.d(n,"ascending",function(){return r}),e.d(n,"bisector",function(){return i}),e.d(n,"cross",function(){return l}),e.d(n,"descending",function(){return h}),e.d(n,"deviation",function(){return v}),e.d(n,"extent",function(){return g}),e.d(n,"histogram",function(){return C}),e.d(n,"thresholdFreedmanDiaconis",function(){return z}),e.d(n,"thresholdScott",function(){return R}),e.d(n,"thresholdSturges",function(){return k}),e.d(n,"max",function(){return O}),e.d(n,"mean",function(){return D}),e.d(n,"median",function(){return U}),e.d(n,"merge",function(){return L}),e.d(n,"min",function(){return q}),e.d(n,"pairs",function(){return f}),e.d(n,"permute",function(){return I}),e.d(n,"quantile",function(){return P}),e.d(n,"range",function(){return w}),e.d(n,"scan",function(){return j}),e.d(n,"shuffle",function(){return B}),e.d(n,"sum",function(){return F}),e.d(n,"ticks",function(){return E}),e.d(n,"tickIncrement",function(){return T}),e.d(n,"tickStep",function(){return N}),e.d(n,"transpose",function(){return Y}),e.d(n,"variance",function(){return p}),e.d(n,"zip",function(){return X}),e.d(n,"axisTop",function(){return rt}),e.d(n,"axisRight",function(){return it}),e.d(n,"axisBottom",function(){return ot}),e.d(n,"axisLeft",function(){return ut}),e.d(n,"brush",function(){return So}),e.d(n,"brushX",function(){return Mo}),e.d(n,"brushY",function(){return Ao}),e.d(n,"brushSelection",function(){return wo}),e.d(n,"chord",function(){return Ro}),e.d(n,"ribbon",function(){return Go}),e.d(n,"nest",function(){return Jo}),e.d(n,"set",function(){return ou}),e.d(n,"map",function(){return Zo}),e.d(n,"keys",function(){return uu}),e.d(n,"values",function(){return au}),e.d(n,"entries",function(){return cu}),e.d(n,"color",function(){return Fn}),e.d(n,"rgb",function(){return $n}),e.d(n,"hsl",function(){return Zn}),e.d(n,"lab",function(){return se}),e.d(n,"hcl",function(){return be}),e.d(n,"lch",function(){return ye}),e.d(n,"gray",function(){return fe}),e.d(n,"cubehelix",function(){return Ee}),e.d(n,"contours",function(){return bu}),e.d(n,"contourDensity",function(){return Au}),e.d(n,"dispatch",function(){return ht}),e.d(n,"drag",function(){return En}),e.d(n,"dragDisable",function(){return bn}),e.d(n,"dragEnable",function(){return _n}),e.d(n,"dsvFormat",function(){return Pu}),e.d(n,"csvParse",function(){return Ru}),e.d(n,"csvParseRows",function(){return Ou}),e.d(n,"csvFormat",function(){return Du}),e.d(n,"csvFormatRows",function(){return Uu}),e.d(n,"tsvParse",function(){return qu}),e.d(n,"tsvParseRows",function(){return Iu}),e.d(n,"tsvFormat",function(){return ju}),e.d(n,"tsvFormatRows",function(){return Bu}),e.d(n,"easeLinear",function(){return fi}),e.d(n,"easeQuad",function(){return hi}),e.d(n,"easeQuadIn",function(){return si}),e.d(n,"easeQuadOut",function(){return li}),e.d(n,"easeQuadInOut",function(){return hi}),e.d(n,"easeCubic",function(){return vi}),e.d(n,"easeCubicIn",function(){return di}),e.d(n,"easeCubicOut",function(){return pi}),e.d(n,"easeCubicInOut",function(){return vi}),e.d(n,"easePoly",function(){return bi}),e.d(n,"easePolyIn",function(){return gi}),e.d(n,"easePolyOut",function(){return yi}),e.d(n,"easePolyInOut",function(){return bi}),e.d(n,"easeSin",function(){return Mi}),e.d(n,"easeSinIn",function(){return xi}),e.d(n,"easeSinOut",function(){return wi}),e.d(n,"easeSinInOut",function(){return Mi}),e.d(n,"easeExp",function(){return Ei}),e.d(n,"easeExpIn",function(){return Ai}),e.d(n,"easeExpOut",function(){return Si}),e.d(n,"easeExpInOut",function(){return Ei}),e.d(n,"easeCircle",function(){return ki}),e.d(n,"easeCircleIn",function(){return Ti}),e.d(n,"easeCircleOut",function(){return Ni}),e.d(n,"easeCircleInOut",function(){return ki}),e.d(n,"easeBounce",function(){return Bi}),e.d(n,"easeBounceIn",function(){return ji}),e.d(n,"easeBounceOut",function(){return Bi}),e.d(n,"easeBounceInOut",function(){return Fi}),e.d(n,"easeBack",function(){return Xi}),e.d(n,"easeBackIn",function(){return Yi}),e.d(n,"easeBackOut",function(){return Hi}),e.d(n,"easeBackInOut",function(){return Xi}),e.d(n,"easeElastic",function(){return Vi}),e.d(n,"easeElasticIn",function(){return Gi}),e.d(n,"easeElasticOut",function(){return Vi}),e.d(n,"easeElasticInOut",function(){return Wi}),e.d(n,"blob",function(){return Yu}),e.d(n,"buffer",function(){return Xu}),e.d(n,"dsv",function(){return Wu}),e.d(n,"csv",function(){return Zu}),e.d(n,"tsv",function(){return Ju}),e.d(n,"image",function(){return Qu}),e.d(n,"json",function(){return ta}),e.d(n,"text",function(){return Gu}),e.d(n,"xml",function(){return ea}),e.d(n,"html",function(){return ra}),e.d(n,"svg",function(){return ia}),e.d(n,"forceCenter",function(){return oa}),e.d(n,"forceCollide",function(){return ba}),e.d(n,"forceLink",function(){return xa}),e.d(n,"forceManyBody",function(){return Ta}),e.d(n,"forceRadial",function(){return Na}),e.d(n,"forceSimulation",function(){return Ea}),e.d(n,"forceX",function(){return ka}),e.d(n,"forceY",function(){return Ca}),e.d(n,"formatDefaultLocale",function(){return $a}),e.d(n,"format",function(){return qa}),e.d(n,"formatPrefix",function(){return Ia}),e.d(n,"formatLocale",function(){return Xa}),e.d(n,"formatSpecifier",function(){return Oa}),e.d(n,"precisionFixed",function(){return Ga}),e.d(n,"precisionPrefix",function(){return Va}),e.d(n,"precisionRound",function(){return Wa}),e.d(n,"geoArea",function(){return Bc}),e.d(n,"geoBounds",function(){return Of}),e.d(n,"geoCentroid",function(){return $f}),e.d(n,"geoCircle",function(){return rs}),e.d(n,"geoClipAntimeridian",function(){return ps}),e.d(n,"geoClipCircle",function(){return vs}),e.d(n,"geoClipExtent",function(){return Ms}),e.d(n,"geoClipRectangle",function(){return _s}),e.d(n,"geoContains",function(){return Bs}),e.d(n,"geoDistance",function(){return zs}),e.d(n,"geoGraticule",function(){return Hs}),e.d(n,"geoGraticule10",function(){return Xs}),e.d(n,"geoInterpolate",function(){return Zs}),e.d(n,"geoLength",function(){return ks}),e.d(n,"geoPath",function(){return Vl}),e.d(n,"geoAlbers",function(){return dh}),e.d(n,"geoAlbersUsa",function(){return ph}),e.d(n,"geoAzimuthalEqualArea",function(){return bh}),e.d(n,"geoAzimuthalEqualAreaRaw",function(){return yh}),e.d(n,"geoAzimuthalEquidistant",function(){return mh}),e.d(n,"geoAzimuthalEquidistantRaw",function(){return _h}),e.d(n,"geoConicConformal",function(){return Eh}),e.d(n,"geoConicConformalRaw",function(){return Sh}),e.d(n,"geoConicEqualArea",function(){return hh}),e.d(n,"geoConicEqualAreaRaw",function(){return lh}),e.d(n,"geoConicEquidistant",function(){return Ch}),e.d(n,"geoConicEquidistantRaw",function(){return kh}),e.d(n,"geoEquirectangular",function(){return Nh}),e.d(n,"geoEquirectangularRaw",function(){return Th}),e.d(n,"geoGnomonic",function(){return zh}),e.d(n,"geoGnomonicRaw",function(){return Ph}),e.d(n,"geoIdentity",function(){return Oh}),e.d(n,"geoProjection",function(){return ch}),e.d(n,"geoProjectionMutator",function(){return fh}),e.d(n,"geoMercator",function(){return wh}),e.d(n,"geoMercatorRaw",function(){return xh}),e.d(n,"geoNaturalEarth1",function(){return Uh}),e.d(n,"geoNaturalEarth1Raw",function(){return Dh}),e.d(n,"geoOrthographic",function(){return qh}),e.d(n,"geoOrthographicRaw",function(){return Lh}),e.d(n,"geoStereographic",function(){return jh}),e.d(n,"geoStereographicRaw",function(){return Ih}),e.d(n,"geoTransverseMercator",function(){return Fh}),e.d(n,"geoTransverseMercatorRaw",function(){return Bh}),e.d(n,"geoRotation",function(){return ts}),e.d(n,"geoStream",function(){return Rc}),e.d(n,"geoTransform",function(){return Wl}),e.d(n,"cluster",function(){return $h}),e.d(n,"hierarchy",function(){return Vh}),e.d(n,"pack",function(){return bd}),e.d(n,"packSiblings",function(){return dd}),e.d(n,"packEnclose",function(){return td}),e.d(n,"partition",function(){return Ad}),e.d(n,"stratify",function(){return Cd}),e.d(n,"tree",function(){return Ld}),e.d(n,"treemap",function(){return Fd}),e.d(n,"treemapBinary",function(){return Yd}),e.d(n,"treemapDice",function(){return Md}),e.d(n,"treemapSlice",function(){return qd}),e.d(n,"treemapSliceDice",function(){return Hd}),e.d(n,"treemapSquarify",function(){return Bd}),e.d(n,"treemapResquarify",function(){return Xd}),e.d(n,"interpolate",function(){return Je}),e.d(n,"interpolateArray",function(){return je}),e.d(n,"interpolateBasis",function(){return ke}),e.d(n,"interpolateBasisClosed",function(){return Ce}),e.d(n,"interpolateDate",function(){return Be}),e.d(n,"interpolateNumber",function(){return Fe}),e.d(n,"interpolateObject",function(){return Ye}),e.d(n,"interpolateRound",function(){return Qe}),e.d(n,"interpolateString",function(){return Ze}),e.d(n,"interpolateTransformCss",function(){return rr}),e.d(n,"interpolateTransformSvg",function(){return ir}),e.d(n,"interpolateZoom",function(){return ar}),e.d(n,"interpolateRgb",function(){return Ue}),e.d(n,"interpolateRgbBasis",function(){return qe}),e.d(n,"interpolateRgbBasisClosed",function(){return Ie}),e.d(n,"interpolateHsl",function(){return fr}),e.d(n,"interpolateHslLong",function(){return sr}),e.d(n,"interpolateLab",function(){return lr}),e.d(n,"interpolateHcl",function(){return dr}),e.d(n,"interpolateHclLong",function(){return pr}),e.d(n,"interpolateCubehelix",function(){return gr}),e.d(n,"interpolateCubehelixLong",function(){return yr}),e.d(n,"piecewise",function(){return br}),e.d(n,"quantize",function(){return xr}),e.d(n,"path",function(){return Bo}),e.d(n,"polygonArea",function(){return $d}),e.d(n,"polygonCentroid",function(){return Gd}),e.d(n,"polygonHull",function(){return Jd}),e.d(n,"polygonContains",function(){return Qd}),e.d(n,"polygonLength",function(){return Kd}),e.d(n,"quadtree",function(){return ha}),e.d(n,"randomUniform",function(){return np}),e.d(n,"randomNormal",function(){return ep}),e.d(n,"randomLogNormal",function(){return rp}),e.d(n,"randomBates",function(){return op}),e.d(n,"randomIrwinHall",function(){return ip}),e.d(n,"randomExponential",function(){return up}),e.d(n,"scaleBand",function(){return hp}),e.d(n,"scalePoint",function(){return dp}),e.d(n,"scaleIdentity",function(){return Sp}),e.d(n,"scaleLinear",function(){return Ap}),e.d(n,"scaleLog",function(){return Rp}),e.d(n,"scaleOrdinal",function(){return lp}),e.d(n,"scaleImplicit",function(){return sp}),e.d(n,"scalePow",function(){return Dp}),e.d(n,"scaleSqrt",function(){return Up}),e.d(n,"scaleQuantile",function(){return Lp}),e.d(n,"scaleQuantize",function(){return qp}),e.d(n,"scaleThreshold",function(){return Ip}),e.d(n,"scaleTime",function(){return Dy}),e.d(n,"scaleUtc",function(){return Uy}),e.d(n,"scaleSequential",function(){return Ly}),e.d(n,"scaleDiverging",function(){return qy}),e.d(n,"schemeCategory10",function(){return jy}),e.d(n,"schemeAccent",function(){return By}),e.d(n,"schemeDark2",function(){return Fy}),e.d(n,"schemePaired",function(){return Yy}),e.d(n,"schemePastel1",function(){return Hy}),e.d(n,"schemePastel2",function(){return Xy}),e.d(n,"schemeSet1",function(){return $y}),e.d(n,"schemeSet2",function(){return Gy}),e.d(n,"schemeSet3",function(){return Vy}),e.d(n,"interpolateBrBG",function(){return Jy}),e.d(n,"schemeBrBG",function(){return Zy}),e.d(n,"interpolatePRGn",function(){return Ky}),e.d(n,"schemePRGn",function(){return Qy}),e.d(n,"interpolatePiYG",function(){return nb}),e.d(n,"schemePiYG",function(){return tb}),e.d(n,"interpolatePuOr",function(){return rb}),e.d(n,"schemePuOr",function(){return eb}),e.d(n,"interpolateRdBu",function(){return ob}),e.d(n,"schemeRdBu",function(){return ib}),e.d(n,"interpolateRdGy",function(){return ab}),e.d(n,"schemeRdGy",function(){return ub}),e.d(n,"interpolateRdYlBu",function(){return fb}),e.d(n,"schemeRdYlBu",function(){return cb}),e.d(n,"interpolateRdYlGn",function(){return lb}),e.d(n,"schemeRdYlGn",function(){return sb}),e.d(n,"interpolateSpectral",function(){return db}),e.d(n,"schemeSpectral",function(){return hb}),e.d(n,"interpolateBuGn",function(){return vb}),e.d(n,"schemeBuGn",function(){return pb}),e.d(n,"interpolateBuPu",function(){return yb}),e.d(n,"schemeBuPu",function(){return gb}),e.d(n,"interpolateGnBu",function(){return _b}),e.d(n,"schemeGnBu",function(){return bb}),e.d(n,"interpolateOrRd",function(){return xb}),e.d(n,"schemeOrRd",function(){return mb}),e.d(n,"interpolatePuBuGn",function(){return Mb}),e.d(n,"schemePuBuGn",function(){return wb}),e.d(n,"interpolatePuBu",function(){return Sb}),e.d(n,"schemePuBu",function(){return Ab}),e.d(n,"interpolatePuRd",function(){return Tb}),e.d(n,"schemePuRd",function(){return Eb}),e.d(n,"interpolateRdPu",function(){return kb}),e.d(n,"schemeRdPu",function(){return Nb}),e.d(n,"interpolateYlGnBu",function(){return Pb}),e.d(n,"schemeYlGnBu",function(){return Cb}),e.d(n,"interpolateYlGn",function(){return Rb}),e.d(n,"schemeYlGn",function(){return zb}),e.d(n,"interpolateYlOrBr",function(){return Db}),e.d(n,"schemeYlOrBr",function(){return Ob}),e.d(n,"interpolateYlOrRd",function(){return Lb}),e.d(n,"schemeYlOrRd",function(){return Ub}),e.d(n,"interpolateBlues",function(){return Ib}),e.d(n,"schemeBlues",function(){return qb}),e.d(n,"interpolateGreens",function(){return Bb}),e.d(n,"schemeGreens",function(){return jb}),e.d(n,"interpolateGreys",function(){return Yb}),e.d(n,"schemeGreys",function(){return Fb}),e.d(n,"interpolatePurples",function(){return Xb}),e.d(n,"schemePurples",function(){return Hb}),e.d(n,"interpolateReds",function(){return Gb}),e.d(n,"schemeReds",function(){return $b}),e.d(n,"interpolateOranges",function(){return Wb}),e.d(n,"schemeOranges",function(){return Vb}),e.d(n,"interpolateCubehelixDefault",function(){return Zb}),e.d(n,"interpolateRainbow",function(){return t_}),e.d(n,"interpolateWarm",function(){return Jb}),e.d(n,"interpolateCool",function(){return Qb}),e.d(n,"interpolateSinebow",function(){return i_}),e.d(n,"interpolateViridis",function(){return u_}),e.d(n,"interpolateMagma",function(){return a_}),e.d(n,"interpolateInferno",function(){return c_}),e.d(n,"interpolatePlasma",function(){return f_}),e.d(n,"create",function(){return un}),e.d(n,"creator",function(){return gt}),e.d(n,"local",function(){return cn}),e.d(n,"matcher",function(){return At}),e.d(n,"mouse",function(){return hn}),e.d(n,"namespace",function(){return vt}),e.d(n,"namespaces",function(){return pt}),e.d(n,"clientPoint",function(){return ln}),e.d(n,"select",function(){return on}),e.d(n,"selectAll",function(){return dn}),e.d(n,"selection",function(){return rn}),e.d(n,"selector",function(){return bt}),e.d(n,"selectorAll",function(){return mt}),e.d(n,"style",function(){return zt}),e.d(n,"touch",function(){return pn}),e.d(n,"touches",function(){return vn}),e.d(n,"window",function(){return Pt}),e.d(n,"event",function(){return Gt}),e.d(n,"customEvent",function(){return Qt}),e.d(n,"arc",function(){return k_}),e.d(n,"area",function(){return D_}),e.d(n,"line",function(){return O_}),e.d(n,"pie",function(){return q_}),e.d(n,"areaRadial",function(){return H_}),e.d(n,"radialArea",function(){return H_}),e.d(n,"lineRadial",function(){return Y_}),e.d(n,"radialLine",function(){return Y_}),e.d(n,"pointRadial",function(){return X_}),e.d(n,"linkHorizontal",function(){return K_}),e.d(n,"linkVertical",function(){return tm}),e.d(n,"linkRadial",function(){return nm}),e.d(n,"symbol",function(){return _m}),e.d(n,"symbols",function(){return bm}),e.d(n,"symbolCircle",function(){return em}),e.d(n,"symbolCross",function(){return rm}),e.d(n,"symbolDiamond",function(){return um}),e.d(n,"symbolSquare",function(){return lm}),e.d(n,"symbolStar",function(){return sm}),e.d(n,"symbolTriangle",function(){return dm}),e.d(n,"symbolWye",function(){return ym}),e.d(n,"curveBasisClosed",function(){return Sm}),e.d(n,"curveBasisOpen",function(){return Tm}),e.d(n,"curveBasis",function(){return Mm}),e.d(n,"curveBundle",function(){return km}),e.d(n,"curveCardinalClosed",function(){return Om}),e.d(n,"curveCardinalOpen",function(){return Um}),e.d(n,"curveCardinal",function(){return zm}),e.d(n,"curveCatmullRomClosed",function(){return Bm}),e.d(n,"curveCatmullRomOpen",function(){return Ym}),e.d(n,"curveCatmullRom",function(){return Im}),e.d(n,"curveLinearClosed",function(){return Xm}),e.d(n,"curveLinear",function(){return P_}),e.d(n,"curveMonotoneX",function(){return Km}),e.d(n,"curveMonotoneY",function(){return tx}),e.d(n,"curveNatural",function(){return rx}),e.d(n,"curveStep",function(){return ox}),e.d(n,"curveStepAfter",function(){return ax}),e.d(n,"curveStepBefore",function(){return ux}),e.d(n,"stack",function(){return lx}),e.d(n,"stackOffsetExpand",function(){return hx}),e.d(n,"stackOffsetDiverging",function(){return dx}),e.d(n,"stackOffsetNone",function(){return cx}),e.d(n,"stackOffsetSilhouette",function(){return px}),e.d(n,"stackOffsetWiggle",function(){return vx}),e.d(n,"stackOrderAscending",function(){return gx}),e.d(n,"stackOrderDescending",function(){return bx}),e.d(n,"stackOrderInsideOut",function(){return _x}),e.d(n,"stackOrderNone",function(){return fx}),e.d(n,"stackOrderReverse",function(){return mx}),e.d(n,"timeInterval",function(){return Fp}),e.d(n,"timeMillisecond",function(){return Hp}),e.d(n,"timeMilliseconds",function(){return Xp}),e.d(n,"utcMillisecond",function(){return Hp}),e.d(n,"utcMilliseconds",function(){return Xp}),e.d(n,"timeSecond",function(){return Wp}),e.d(n,"timeSeconds",function(){return Zp}),e.d(n,"utcSecond",function(){return Wp}),e.d(n,"utcSeconds",function(){return Zp}),e.d(n,"timeMinute",function(){return Qp}),e.d(n,"timeMinutes",function(){return Kp}),e.d(n,"timeHour",function(){return nv}),e.d(n,"timeHours",function(){return ev}),e.d(n,"timeDay",function(){return iv}),e.d(n,"timeDays",function(){return ov}),e.d(n,"timeWeek",function(){return av}),e.d(n,"timeWeeks",function(){return pv}),e.d(n,"timeSunday",function(){return av}),e.d(n,"timeSundays",function(){return pv}),e.d(n,"timeMonday",function(){return cv}),e.d(n,"timeMondays",function(){return vv}),e.d(n,"timeTuesday",function(){return fv}),e.d(n,"timeTuesdays",function(){return gv}),e.d(n,"timeWednesday",function(){return sv}),e.d(n,"timeWednesdays",function(){return yv}),e.d(n,"timeThursday",function(){return lv}),e.d(n,"timeThursdays",function(){return bv}),e.d(n,"timeFriday",function(){return hv}),e.d(n,"timeFridays",function(){return _v}),e.d(n,"timeSaturday",function(){return dv}),e.d(n,"timeSaturdays",function(){return mv}),e.d(n,"timeMonth",function(){return wv}),e.d(n,"timeMonths",function(){return Mv}),e.d(n,"timeYear",function(){return Sv}),e.d(n,"timeYears",function(){return Ev}),e.d(n,"utcMinute",function(){return Nv}),e.d(n,"utcMinutes",function(){return kv}),e.d(n,"utcHour",function(){return Pv}),e.d(n,"utcHours",function(){return zv}),e.d(n,"utcDay",function(){return Ov}),e.d(n,"utcDays",function(){return Dv}),e.d(n,"utcWeek",function(){return Lv}),e.d(n,"utcWeeks",function(){return Hv}),e.d(n,"utcSunday",function(){return Lv}),e.d(n,"utcSundays",function(){return Hv}),e.d(n,"utcMonday",function(){return qv}),e.d(n,"utcMondays",function(){return Xv}),e.d(n,"utcTuesday",function(){return Iv}),e.d(n,"utcTuesdays",function(){return $v}),e.d(n,"utcWednesday",function(){return jv}),e.d(n,"utcWednesdays",function(){return Gv}),e.d(n,"utcThursday",function(){return Bv}),e.d(n,"utcThursdays",function(){return Vv}),e.d(n,"utcFriday",function(){return Fv}),e.d(n,"utcFridays",function(){return Wv}),e.d(n,"utcSaturday",function(){return Yv}),e.d(n,"utcSaturdays",function(){return Zv}),e.d(n,"utcMonth",function(){return Qv}),e.d(n,"utcMonths",function(){return Kv}),e.d(n,"utcYear",function(){return ng}),e.d(n,"utcYears",function(){return eg}),e.d(n,"timeFormatDefaultLocale",function(){return wy}),e.d(n,"timeFormat",function(){return cg}),e.d(n,"timeParse",function(){return fg}),e.d(n,"utcFormat",function(){return sg}),e.d(n,"utcParse",function(){return lg}),e.d(n,"timeFormatLocale",function(){return ug}),e.d(n,"isoFormat",function(){return My}),e.d(n,"isoParse",function(){return Ay}),e.d(n,"now",function(){return Pr}),e.d(n,"timer",function(){return Or}),e.d(n,"timerFlush",function(){return Dr}),e.d(n,"timeout",function(){return Ir}),e.d(n,"interval",function(){return jr}),e.d(n,"transition",function(){return ui}),e.d(n,"active",function(){return Ki}),e.d(n,"interrupt",function(){return ti}),e.d(n,"voronoi",function(){return iw}),e.d(n,"zoom",function(){return yw}),e.d(n,"zoomTransform",function(){return cw}),e.d(n,"zoomIdentity",function(){return aw})},function(t,n,e){"use strict";e.r(n);e(6);var r={pathUrl:"./data.json",call:function(){let t=`${this.pathUrl}`;return new Promise((n,e)=>{fetch(t).then(t=>t.json()).then(t=>n(t)).catch(t=>Promise.reject(Error(t.message)))}).catch(t=>{throw new Error(t)})}};var i={decimal:".",thousands:".",grouping:[3],currency:["","€"],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},o=e(1);var u=class{constructor(t){this.data=t.data,this.element=t.element,this.size=t.size,this.graphic=t.graph,this.draw()}draw(){const t=o.formatLocale(i),n=`\n        <div class="graph">\n  \n          <div class="graph-box" id="graph-box-${this.graphic.id}">\n          </div>\n        \n          <div class="graph-info">\n            <div class="graph-device tablet">\n              <span class="info-title" style="color:${this.graphic.colors.colorTablet};">Tablet</span>\n              <span class="value-percent">${this.graphic.totalTablet/this.graphic.totalValue*100}%</span> <span class="value-int">${t.format(",.0f")(this.graphic.totalTablet)}${this.graphic.postSymbol||""}</span>\n            </div>\n            <div class="graph-device smartphone">\n              <span class="info-title" style="color:${this.graphic.colors.colorSmartphone};">Smartphone</span>\n              <span class="value-percent">${this.graphic.totalSmartphone/this.graphic.totalValue*100}%</span> <span class="value-int">${t.format(",.0f")(this.graphic.totalSmartphone)}${this.graphic.postSymbol||""}</span>\n            </div>\n          \n          </div>\n        </div>\n      `;document.querySelector(".graph-container").innerHTML+=n,console.log(this.graphic,this.element),this.graphic;var e=this.size,r=this.size,u="circle-box-"+this.graphic.id,a=[];for(let t in this.graphic.colors)a.push(this.graphic.colors[t]);var c=Math.min(e,r)/2,f=c-10;console.log(f);const s=o.select(this.element).append("svg").attr("width",e).attr("height",r);s.append("g").attr("class","donut").attr("transform",function(){return"translate("+e/2+", "+r/2+")"}),s.append("g").attr("class","chart").attr("transform",function(){return"translate("+e/2+",  "+r/2+" )"}),s.append("g").attr("class","title"),s.append("g").attr("class","cross").attr("transform",function(){return"translate("+e/2+",  "+r/2+" )"}),s.append("clipPath").attr("id",u).append("circle").attr("transform","translate(0,0)"),s.select("#"+u+" circle").attr("r",f-4);var l=o.pie(),h=o.arc().innerRadius(f).outerRadius(c),d=l([this.graphic.totalTablet,this.graphic.totalSmartphone]);s.select("g.donut").selectAll("path").data(d).enter().append("path").style("fill",function(t,n){return a[n]}).attr("d",h),s.select("g.title").append("text").style("text-anchor","middle").attr("startOffset","50%").text(this.graphic.name.toUpperCase()).attr("fill","currentColor").attr("transform","translate("+e/2+", "+(r-30)/2+")"),s.select("g.title").append("text").style("text-anchor","middle").attr("class","total-value").text(`${t.format(",.0f")(this.graphic.totalValue)}${this.graphic.postSymbol||""} `).attr("transform","translate("+e/2+", "+(r+30)/2+")"),s.select("g.cross").selectAll("line").data([0,90,180,270]).enter().append("line").attr("x1",f-10+4).attr("x2",f-2).attr("stroke","#AEAEAE").attr("stroke-width",2).attr("transform",function(t){return"rotate("+t+")"});var p=o.area();p.x(function(t){return v(t[0])}).y0(f).y1(function(t){return g(t[1])}).curve(o.curveCardinal);var v=o.scaleLinear().domain([0,this.graphic.valuesWeek.length-1]).range([10-f,f-10]),g=o.scaleLinear().domain([0,o.max(this.graphic.valuesWeek.map(function(t){return t[1]}))]).range([f-10,20]),y=o.color(a[0]);s.select("g.chart").selectAll("path.timeseries").data([this.graphic.valuesWeek]).enter().append("path").attr("clip-path","url(#"+u+")").attr("stroke",function(){return y.opacity=.3,y}).attr("stroke-width",2).style("fill",function(){return y.opacity=.1,y}).attr("class","timeseries").attr("d",p)}};e(1);document.querySelector(".container");const a=new class{constructor(t){this.graphView=t}init(){this.graphView.init()}getData(){return r.call().then(t=>t)}}(new class{init(){console.log("render HTML here"),this.renderGraphModule()}renderGraphModule(){!async function(){const t=await a.getData();for(var n of t)new u({element:"#graph-box-"+n.id,graph:n,data:n.valuesWeek,size:n.size})}()}});a.init()},function(t,n){t.exports=function(t){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var e=n.protocol+"//"+n.host,r=e+n.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,n){var i,o=n.trim().replace(/^"(.*)"$/,function(t,n){return n}).replace(/^'(.*)'$/,function(t,n){return n});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?t:(i=0===o.indexOf("//")?o:0===o.indexOf("/")?e+o:r+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},function(t,n,e){var r={},i=function(t){var n;return function(){return void 0===n&&(n=t.apply(this,arguments)),n}}(function(){return window&&document&&document.all&&!window.atob}),o=function(t){var n={};return function(t){if("function"==typeof t)return t();if(void 0===n[t]){var e=function(t){return document.querySelector(t)}.call(this,t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}}(),u=null,a=0,c=[],f=e(3);function s(t,n){for(var e=0;e<t.length;e++){var i=t[e],o=r[i.id];if(o){o.refs++;for(var u=0;u<o.parts.length;u++)o.parts[u](i.parts[u]);for(;u<i.parts.length;u++)o.parts.push(g(i.parts[u],n))}else{var a=[];for(u=0;u<i.parts.length;u++)a.push(g(i.parts[u],n));r[i.id]={id:i.id,refs:1,parts:a}}}}function l(t,n){for(var e=[],r={},i=0;i<t.length;i++){var o=t[i],u=n.base?o[0]+n.base:o[0],a={css:o[1],media:o[2],sourceMap:o[3]};r[u]?r[u].parts.push(a):e.push(r[u]={id:u,parts:[a]})}return e}function h(t,n){var e=o(t.insertInto);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=c[c.length-1];if("top"===t.insertAt)r?r.nextSibling?e.insertBefore(n,r.nextSibling):e.appendChild(n):e.insertBefore(n,e.firstChild),c.push(n);else if("bottom"===t.insertAt)e.appendChild(n);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=o(t.insertInto+" "+t.insertAt.before);e.insertBefore(n,i)}}function d(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var n=c.indexOf(t);n>=0&&c.splice(n,1)}function p(t){var n=document.createElement("style");return void 0===t.attrs.type&&(t.attrs.type="text/css"),v(n,t.attrs),h(t,n),n}function v(t,n){Object.keys(n).forEach(function(e){t.setAttribute(e,n[e])})}function g(t,n){var e,r,i,o;if(n.transform&&t.css){if(!(o=n.transform(t.css)))return function(){};t.css=o}if(n.singleton){var c=a++;e=u||(u=p(n)),r=b.bind(null,e,c,!1),i=b.bind(null,e,c,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(e=function(t){var n=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",v(n,t.attrs),h(t,n),n}(n),r=function(t,n,e){var r=e.css,i=e.sourceMap,o=void 0===n.convertToAbsoluteUrls&&i;(n.convertToAbsoluteUrls||o)&&(r=f(r));i&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var u=new Blob([r],{type:"text/css"}),a=t.href;t.href=URL.createObjectURL(u),a&&URL.revokeObjectURL(a)}.bind(null,e,n),i=function(){d(e),e.href&&URL.revokeObjectURL(e.href)}):(e=p(n),r=function(t,n){var e=n.css,r=n.media;r&&t.setAttribute("media",r);if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}.bind(null,e),i=function(){d(e)});return r(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;r(t=n)}else i()}}t.exports=function(t,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=i()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var e=l(t,n);return s(e,n),function(t){for(var i=[],o=0;o<e.length;o++){var u=e[o];(a=r[u.id]).refs--,i.push(a)}t&&s(l(t,n),n);for(o=0;o<i.length;o++){var a;if(0===(a=i[o]).refs){for(var c=0;c<a.parts.length;c++)a.parts[c]();delete r[a.id]}}}};var y=function(){var t=[];return function(n,e){return t[n]=e,t.filter(Boolean).join("\n")}}();function b(t,n,e,r){var i=e?"":r.css;if(t.styleSheet)t.styleSheet.cssText=y(n,i);else{var o=document.createTextNode(i),u=t.childNodes;u[n]&&t.removeChild(u[n]),u.length?t.insertBefore(o,u[n]):t.appendChild(o)}}},function(t,n){t.exports=function(t){var n=[];return n.toString=function(){return this.map(function(n){var e=function(t,n){var e=t[1]||"",r=t[3];if(!r)return e;if(n&&"function"==typeof btoa){var i=function(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}(r),o=r.sources.map(function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"});return[e].concat(o).concat([i]).join("\n")}return[e].join("\n")}(n,t);return n[2]?"@media "+n[2]+"{"+e+"}":e}).join("")},n.i=function(t,e){"string"==typeof t&&(t=[[null,t,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(r[o]=!0)}for(i=0;i<t.length;i++){var u=t[i];"number"==typeof u[0]&&r[u[0]]||(e&&!u[2]?u[2]=e:e&&(u[2]="("+u[2]+") and ("+e+")"),n.push(u))}},n}},function(t,n,e){var r=e(0);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0},o=e(4)(r,i);r.locals&&(t.exports=r.locals),t.hot.accept(0,function(){var n=e(0);if("string"==typeof n&&(n=[[t.i,n,""]]),!function(t,n){var e,r=0;for(e in t){if(!n||t[e]!==n[e])return!1;r++}for(e in n)r--;return 0===r}(r.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(n)}),t.hot.dispose(function(){o()})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,